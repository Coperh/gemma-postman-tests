{
	"info": {
		"_postman_id": "5d83f080-5180-4798-a28b-8a4de107f86d",
		"name": "API Testplatform API testscripts",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Provider run API",
			"item": [
				{
					"name": "Retrieve provider run list",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "768a651e-1aae-4d05-8f0c-2fcd3fa513dd",
								"exec": [
									"pm.test(\"Retrieving provider run list gives 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_url}}/provider-run",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"provider-run"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a provider run",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4def0014-f9e2-428c-a683-ad7ccb7d42b9",
								"exec": [
									"pm.test(\"Creating a provider run results in 201\", function() {",
									"    pm.response.to.have.status(201); ",
									"});",
									"",
									"if(pm.response.code == 201) {",
									"    pm.globals.set(\"provider_run_uuid\", pm.response.json().uuid);",
									"    pm.globals.set(\"delay_time\", 1);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"test_scenario\": \"postman echo test\",\n\t\"endpoints\": [\n\t\t{\n\t\t\t\"name\": \"api_url\",\n\t\t\t\"value\": \"https://postman-echo.com/status\"\n\t\t}\n\t]\n}"
						},
						"url": {
							"raw": "{{api_url}}/provider-run/",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"provider-run",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve created provider run",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "01e23169-b4f9-4e10-ab1c-62b96624f227",
								"exec": [
									"pm.test(\"Created provider run is completed\", function() {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    var response = pm.response.json();",
									"    ",
									"    pm.expect(response.uuid).to.be.equal(pm.globals.get(\"provider_run_uuid\"));",
									"    pm.expect(response.test_scenario).to.be.equal(\"postman echo test\");",
									"});",
									"",
									"if(pm.response.json().status == \"stopped\") {",
									"    postman.setNextRequest(\"Retrieve provider run result\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_url}}/provider-run/{{provider_run_uuid}}",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"provider-run",
								"{{provider_run_uuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Wait until provider run is stopped",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "07821de3-59dc-4f34-ab48-f76fc60b0b8d",
								"exec": [
									"if(pm.globals.get(\"delay_time\") < 10) {",
									"    pm.globals.set(\"delay_time\", pm.globals.get(\"delay_time\") + 1);",
									"    postman.setNextRequest(\"Retrieve created provider run\");",
									"} else {",
									"    postman.setNextRequest(\"Retrieve provider run result\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://postman-echo.com/delay/{{delay_time}}",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"delay",
								"{{delay_time}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve provider run result",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5fd16304-f632-40c6-9285-1c4405e1da0f",
								"exec": [
									"pm.test(\"Provider run result is successful\", function() {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    var resp = pm.response.json();",
									"    ",
									"    pm.expect(resp.length).to.be.equal(1);",
									"    pm.expect(resp[0].calls.length).to.be.equal(1);",
									"    ",
									"    pm.expect(resp[0].status).to.be.equal(\"Success\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_url}}/provider-run/{{provider_run_uuid}}/result",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"provider-run",
								"{{provider_run_uuid}}",
								"result"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve provider run shield",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7e4db738-dd13-43db-8215-41b53068c7f2",
								"exec": [
									"pm.test(\"Provider run shield is correct\", function() {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    var resp = pm.response.json();",
									"    pm.expect(resp.label).to.be.equal(\"API Test Platform (beta)\");",
									"    pm.expect(resp.message).to.be.equal(\"Success\");",
									"    pm.expect(resp.color).to.be.equal(\"green\");",
									"    pm.expect(resp.isError).to.be.equal(false);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_url}}/provider-run-shield/{{provider_run_uuid}}",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"provider-run-shield",
								"{{provider_run_uuid}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Consumer session API",
			"item": [
				{
					"name": "Retrieve Session types list",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a4eb799f-e539-42e1-b0a3-1a683b0e2e56",
								"exec": [
									"pm.test(\"Retrieving session types list gives 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_url}}/sessiontypes",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"sessiontypes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a test session",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c2451aa9-bee9-4743-a2df-85f305e55fbf",
								"exec": [
									"pm.expect(\"Creating test session results in 201\", function() {",
									"    pm.response.to.have.status(201);",
									"    ",
									"    var resp = pm.response.json();",
									"    ",
									"    pm.expect(resp.session_type).to.be.equal(\"postman-echo\");",
									"    pm.expect(resp.stopped).to.be.equal(null);",
									"});",
									"",
									"if(pm.response.code == 201) {",
									"    pm.globals.set(\"testsession_uuid\", pm.response.json().uuid);",
									"    pm.globals.set(\"exposed_url\", pm.response.json().exposedurl_set[0].subdomain);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"session_type\": \"postman-echo\"\n}"
						},
						"url": {
							"raw": "{{api_url}}/testsessions/",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"testsessions",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve created test session",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2f979489-452e-499f-82b0-bceb4055a648",
								"exec": [
									"pm.test(\"Retrieve created test session results in 200\", function() {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    var resp = pm.response.json();",
									"",
									"    pm.expect(resp.stopped).to.be.equal(null);",
									"    pm.expect(resp.status).to.be.equal(\"running\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_url}}/testsessions/{{testsession_uuid}}",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"testsessions",
								"{{testsession_uuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Make call to exposed url",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{exposed_url}}status/200",
							"host": [
								"{{exposed_url}}status"
							],
							"path": [
								"200"
							]
						}
					},
					"response": []
				},
				{
					"name": "Stop test session",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "75e9de1d-1680-4fe6-8f49-9c78ab3e96d1",
								"exec": [
									"pm.test(\"Stopping session gives 200\", function() {",
									"    pm.response.to.have.status(200); ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_url}}/testsessions/{{testsession_uuid}}/stop",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"testsessions",
								"{{testsession_uuid}}",
								"stop"
							]
						}
					},
					"response": []
				},
				{
					"name": "Stopping session sets status to stopped",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2f979489-452e-499f-82b0-bceb4055a648",
								"exec": [
									"pm.test(\"Stopping session sets status to stopped\", function() {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    var resp = pm.response.json();",
									"",
									"    pm.expect(resp.status).to.be.equal(\"stopped\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_url}}/testsessions/{{testsession_uuid}}",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"testsessions",
								"{{testsession_uuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve test session result",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e8d8fcd2-6da9-4b81-a8f9-412aa2807926",
								"exec": [
									"pm.test(\"Test session results are displayed correctly\", function() {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    var resp = pm.response.json();",
									"",
									"    pm.expect(resp.result).to.be.equal(\"Succesvol\");",
									"    ",
									"    pm.expect(resp.report.length).to.be.equal(1);",
									"    pm.expect(resp.report[0].result).to.be.equal(\"Succesvol\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_url}}/testsessions/{{testsession_uuid}}/result/",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"testsessions",
								"{{testsession_uuid}}",
								"result",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve test session shield",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "236453cf-a121-46af-a818-b0e3cda4b336",
								"exec": [
									"pm.test(\"Test session run shield is correct\", function() {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    var resp = pm.response.json();",
									"    pm.expect(resp.label).to.be.equal(\"API Test Platform (beta)\");",
									"    pm.expect(resp.message).to.be.equal(\"Success\");",
									"    pm.expect(resp.color).to.be.equal(\"green\");",
									"    pm.expect(resp.isError).to.be.equal(false);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_url}}/testsession-run-shield/{{testsession_uuid}}",
							"host": [
								"{{api_url}}"
							],
							"path": [
								"testsession-run-shield",
								"{{testsession_uuid}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "99ec866f-861f-4101-9349-90d30a7253db",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "2999b1a7-a918-4436-b2ac-4eb29339c170",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}