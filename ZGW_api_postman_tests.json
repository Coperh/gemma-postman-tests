{
	"info": {
		"_postman_id": "a654042a-9452-46e3-8857-ee961ed282df",
		"name": "ZGW api tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "standaard.md",
			"item": [
				{
					"name": "zrc",
					"item": [
						{
							"name": "setUp",
							"item": [
								{
									"name": "Retrieve Zaaktype",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "017d57e0-038d-4621-be41-11e103f859ac",
												"exec": [
													"pm.variables.set(\"zaaktype_url\", pm.response.json()[0].zaaktypen[0]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ztc_url}}/catalogussen",
											"host": [
												"{{ztc_url}}"
											],
											"path": [
												"catalogussen"
											]
										},
										"description": "Haalt een Zaaktype op uit het ZTC."
									},
									"response": []
								},
								{
									"name": "Retrieve Zaaktype information",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "ab4cebe2-5f2f-4343-9f25-42fed058ad4c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "3c58c28b-0bdd-461e-9332-086d1db0ccb9",
												"exec": [
													"var res = pm.response.json();",
													"pm.variables.set(\"zaaktype_vertrouwelijkheid\", pm.response.json().vertrouwelijkheidaanduiding);",
													"pm.variables.set(\"zaaktype_productenOfDiensten\", res.productenOfDiensten);",
													"pm.variables.set(\"zaaktype_resultaattypen\", res.resultaattypen);",
													"",
													"var statustypen = res.statustypen;",
													"pm.variables.set(\"eindstatustype\", statustypen[statustypen.length-1]);",
													"pm.variables.set(\"non_eindstatustype\", statustypen[0]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{zaaktype_url}}",
											"host": [
												"{{zaaktype_url}}"
											]
										},
										"description": "Haalt enkele gegevens op van het Zaaktype, die relevant zijn voor de tests."
									},
									"response": []
								},
								{
									"name": "Create Zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "01e98b0e-0bea-40a1-8485-67695fb020b3",
												"exec": [
													"var zaak = pm.response.json();",
													"pm.variables.set(\"zaak_url\", zaak.url);",
													"pm.variables.set(\"zaak_id\", zaak.identificatie);",
													"pm.variables.set(\"zaak_bronorganisatie\", zaak.bronorganisatie);",
													"pm.variables.set(\"zaak_geometrie\", zaak.zaakgeometrie);",
													"pm.variables.set(\"zaak_body\", pm.request.body.raw);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bronorganisatie\": \"000000000\",\n    \"omschrijving\": \"string\",\n    \"toelichting\": \"string\",\n    \"registratiedatum\": \"2019-04-09\",\n    \"verantwoordelijkeOrganisatie\": \"000000000\",\n    \"zaaktype\": \"{{zaaktype_url}}\",\n    \"startdatum\": \"2019-04-09\",\n    \"einddatumGepland\": \"2019-04-20\",\n    \"uiterlijkeEinddatumAfdoening\": \"2019-04-09\",\n    \"publicatiedatum\": \"2019-04-09\",\n\t\"vertrouwelijkheidaanduiding\": \"openbaar\",\n\t\"betalingsindicatie\": \"geheel\",\n\t\"laatsteBetaalDatum\": \"2019-01-01\",\n\t\"zaakgeometrie\": \n\t{\n\t    \"type\": \"Point\",\n\t    \"coordinates\": [53, 5]\n\t},\n\t\"opschorting\": \n\t{\n\t    \"indicatie\": true,\n\t    \"reden\": \"string\"\n\t},\n\t\"selectielijstklasse\": \"http://example.com\",\n\t\"relevanteAndereZaken\": \n\t[\n\n    \"http://example.com\"\n\n],\n    \"archiefnominatie\": \"blijvend_bewaren\",\n    \"archiefstatus\": \"nog_te_archiveren\"\n}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										},
										"description": "Maakt een Zaak aan die gebruikt zal worden in de tests, deze zaak wordt na de tests weer verwijderd.\n\nDe body van deze Zaak zal ook als variabele opgeslagen worden en gebruikt worden (met kleine aanpassingen iedere keer) in de requests voor de validatie tests, om te voorkomen dat telkens hetzelfde body gekopieerd moet worden."
									},
									"response": []
								},
								{
									"name": "Retrieve EnkelvoudigInformatieObjecten",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "265f65b0-37e3-418b-bc59-d7cef6c08e1d",
												"exec": [
													"var informatieobjecten = pm.response.json();",
													"pm.variables.set(\"informatieobject_url\", informatieobjecten[0].url);",
													"pm.variables.set(\"informatieobject_gebruiksrecht_null_url\", informatieobjecten[1].url);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
											"host": [
												"{{drc_url}}"
											],
											"path": [
												"enkelvoudiginformatieobjecten"
											]
										},
										"description": "Haalt twee EnkelvoudigInformatieObjecten op uit het DRC."
									},
									"response": []
								}
							],
							"description": "Bevat requests die resources ophalen of aanmaken die gebruikt worden in de tests.\n\nOmdat het nog niet mogelijk is POST requests te doen op het ZTC, worder er enkele aannames gemaakt voor het slagen van deze requests:\n\n- In het ZTC bestaat 1 Catalogus met: \n\t- 1 Zaaktype waaraan minimaal 2 Statustypen gekoppeld zijn.\n\t\t- 1 Resultaattype dat relevant is voor dit Zaaktype.\n\t- 1 Informatieobjecttype\n- In het DRC bestaat minstens 2 EnkelvoudigInformatieObjecten, waarvan een met Indicatie gebruiksrecht `onbekend` en een met Indicatie gebruiksrecht `Ja` of `Nee`.\n\nOm bij het archiveringsproces (**zrc-013**) het afleiden van Zaak.archiefdatum voor alle mogelijke afleidingswijzen te testen, dienen er 9 Resultaattypes te zijn (ieder met een andere afleidingswijze en archiefactietermijn gevuld), die relevant zijn voor het eerder genoemde Zaaktype.",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6299f822-4bd7-4175-bcb8-f448b7e89d97",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "c8fa9155-de46-4d2b-9523-02e0f1c5b349",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "zrc-001",
							"item": [
								{
									"name": "(zrc-001a) Valideren Zaaktype op Zaak-resource (POST)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "759de81f-fe06-48a8-9586-d495f3c77444",
												"exec": [
													"pm.test(\"Zaaktype url die niet resulteert in 200 bij aanmaken zaak geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"zaaktype\");",
													"    pm.expect(error.code).to.be.equal(\"bad-url\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b79c193c-ee7a-46e6-979e-398d5edfa06c",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.zaaktype = pm.environment.get(\"mock_url\") + \"/404\";",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-001b) Valideren Zaaktype op Zaak-resource (PUT)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "759de81f-fe06-48a8-9586-d495f3c77444",
												"exec": [
													"pm.test(\"Zaaktype url die niet resulteert in 200 bij bijwerken zaak geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"zaaktype\");",
													"    pm.expect(error.code).to.be.equal(\"bad-url\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b79c193c-ee7a-46e6-979e-398d5edfa06c",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.zaaktype = pm.environment.get(\"mock_url\") + \"/404\";",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-001c) Valideren Zaaktype op Zaak-resource (PATCH)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "759de81f-fe06-48a8-9586-d495f3c77444",
												"exec": [
													"pm.test(\"Zaaktype url die niet resulteert in 200 bij deels bijwerken zaak geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"zaaktype\");",
													"    pm.expect(error.code).to.be.equal(\"bad-url\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b79c193c-ee7a-46e6-979e-398d5edfa06c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"zaaktype\": \"{{mock_url}}/404\"\n}"
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-001d) Zaak aanmaken is mogelijk",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4db223ef-0730-4da5-81f4-2df1b0975f10",
												"exec": [
													"pm.test(\"Zaak aanmaken met valide gegevens geeft 201\", function() {",
													"    pm.response.to.have.status(201);",
													"    pm.variables.set(\"created_zaak_url\", pm.response.json().url);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f8050155-7fe9-4dbe-bf6e-85474686a973",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{zaak_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-001e) Zaak bijwerken is mogelijk (PUT)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4db223ef-0730-4da5-81f4-2df1b0975f10",
												"exec": [
													"pm.test(\"Zaak aanmaken met valide gegevens geeft 201\", function() {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(pm.response.json().omschrijving).to.be.equal(pm.variables.get(\"omschrijving\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f8050155-7fe9-4dbe-bf6e-85474686a973",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"pm.variables.set(\"omschrijving\", \"aangepaste omschrijving\");",
													"body.omschrijving = pm.variables.get(\"omschrijving\");",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-001f) Zaak deels bijwerken is mogelijk (PATCH)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4db223ef-0730-4da5-81f4-2df1b0975f10",
												"exec": [
													"pm.test(\"Zaak aanmaken met valide gegevens geeft 201\", function() {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(pm.response.json().toelichting).to.be.equal(pm.variables.get(\"toelichting\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f8050155-7fe9-4dbe-bf6e-85474686a973",
												"exec": [
													"pm.variables.set(\"toelichting\", \"aangepaste toelichting\")"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"toelichting\": \"{{toelichting}}\"\n}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete created Zaak",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "4bcb0e95-aa0f-4b40-864f-0ba32ceb6617",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b2b5d32b-6f4b-46e5-9722-efe1ce7bb603",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "zrc-002",
							"item": [
								{
									"name": "(zrc-002a) Uniciteit bronorganisatie en identificatie op de Zaak-resource (POST)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "27106eae-1a93-4e78-82d5-5b0d4719673f",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.identificatie = pm.variables.get(\"zaak_id\");",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "b34be4ba-bf87-4ded-8794-c3a0084faa5d",
												"exec": [
													"pm.test(\"Zaak aanmaken met bestaande combinatie bronorganisatie en identificatie geeft 400\", function() {",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(400)",
													"    pm.expect(jsonData).to.have.property(\"invalid-params\");",
													"    ",
													"    pm.expect(jsonData[\"invalid-params\"][0].code).to.be.equal(\"identificatie-niet-uniek\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Zaak with unique identificatie and bronorganisatie",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "01e98b0e-0bea-40a1-8485-67695fb020b3",
												"exec": [
													"var zaak = pm.response.json();",
													"pm.variables.set(\"created_zaak_url\", zaak.url);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{zaak_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										},
										"description": "Maakt een Zaak aan die gebruikt zal worden in de tests, deze zaak wordt na de tests weer verwijderd.\n\nDe body van deze Zaak zal ook als variabele opgeslagen worden en gebruikt worden (met kleine aanpassingen iedere keer) in de requests voor de validatie tests, om te voorkomen dat telkens hetzelfde body gekopieerd moet worden."
									},
									"response": []
								},
								{
									"name": "(zrc-002b) Uniciteit bronorganisatie en identificatie op de Zaak-resource (PUT)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "27106eae-1a93-4e78-82d5-5b0d4719673f",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.identificatie = pm.variables.get(\"zaak_id\");",
													"body.bronorganisatie = pm.variables.get(\"zaak_bronorganisatie\");",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "b34be4ba-bf87-4ded-8794-c3a0084faa5d",
												"exec": [
													"pm.test(\"Zaak aanmaken met bestaande combinatie bronorganisatie en identificatie geeft 400\", function() {",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(400)",
													"    pm.expect(jsonData).to.have.property(\"invalid-params\");",
													"    ",
													"    pm.expect(jsonData[\"invalid-params\"][0].code).to.be.equal(\"identificatie-niet-uniek\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-002c) Uniciteit bronorganisatie en identificatie op de Zaak-resource (PATCH)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "27106eae-1a93-4e78-82d5-5b0d4719673f",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.identificatie = pm.variables.get(\"zaak_id\");",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "b34be4ba-bf87-4ded-8794-c3a0084faa5d",
												"exec": [
													"pm.test(\"Zaak aanmaken met bestaande combinatie bronorganisatie en identificatie geeft 400\", function() {",
													"    var jsonData = pm.response.json();",
													"    pm.response.to.have.status(400)",
													"    pm.expect(jsonData).to.have.property(\"invalid-params\");",
													"    ",
													"    pm.expect(jsonData[\"invalid-params\"][0].code).to.be.equal(\"identificatie-niet-uniek\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"identificatie\": \"{{zaak_id}}\",\n\t\"bronorganisatie\": \"{{zaak_bronorganisatie}}\"\n}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Created Zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a4bd1602-194d-44c1-b79c-3cdeb7c43c78",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Retrieve Zaken for bronorganisatie",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "13b55b82-8f68-47fc-82bd-3fdd1d7c0d82",
												"exec": [
													"pm.variables.set(\"zaken_for_bronorganisatie\", pm.response.json().results);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{zrc_url}}/zaken?bronorganisatie={{zaak_bronorganisatie}}",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											],
											"query": [
												{
													"key": "bronorganisatie",
													"value": "{{zaak_bronorganisatie}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-002d) Genereer unieke identificatie voor Zaak onder bronorganisatie",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "41140574-2623-42f7-88be-619ceaaa946a",
												"exec": [
													"pm.test(\"Zaak aanmaken zonder identificatie genereert unieke identificatie onder bronorganisatie\", function() {",
													"    var created_zaak_id = pm.response.json().identificatie",
													"    ",
													"    pm.variables.set(\"created_zaak_url\", pm.response.json().url);",
													"    ",
													"    pm.response.to.have.status(201);",
													"    ",
													"    // Compare the identificatie of the created Zaak with all the identificaties of other Zaken",
													"    // with the same bronorganisatie",
													"    var zaken_with_same_id = pm.variables.get(\"zaken_for_bronorganisatie\").filter(zaak => zaak.identificatie === created_zaak_id);",
													"    ",
													"    // Verify that the identificatie for the created Zaak isn't the same as any other",
													"    pm.expect(zaken_with_same_id.length).to.be.equal(0);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "a34e2e85-35bc-4ff1-9e4c-00b9a8f1908f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{zaak_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Created Zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a4bd1602-194d-44c1-b79c-3cdeb7c43c78",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "af5926ac-c8a4-418b-9692-ec4597986a42",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "3e69d346-d67c-40ed-a089-268403d5d202",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "zrc-003 (NI)",
							"item": [
								{
									"name": "(zrc-003a) Valideren informatieobject op de ZaakInformatieObject-resource",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "738040bb-7752-4ebf-908a-c4b33ace22aa",
												"exec": [
													"pm.test(\"Ongeldige informatieobject-url toevoegen aan zaak resulteert in 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var errors = pm.response.json()[\"invalid-params\"];",
													"    pm.expect(errors[0].name).to.be.equal(\"informatieobject\");",
													"    pm.expect(errors[0].code).to.be.equal(\"bad-url\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "771a52bd-37ba-4707-8624-aee0e2d71d5d",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"informatieobject\": \"{{mock_url}}/404\"\n}"
										},
										"url": {
											"raw": "{{zaak_url}}/informatieobjecten",
											"host": [
												"{{zaak_url}}"
											],
											"path": [
												"informatieobjecten"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create relation between Zaak and Informatieobject",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fa9f354c-0464-494e-b9fa-9635b21b2d43",
												"exec": [
													"pm.variables.set(\"objectinformatieobject_url\", pm.response.json().url)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "5be8e943-844c-4786-9173-08a7e1dfb2c8",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"informatieobject\": \"{{informatieobject_url}}\",\n    \"object\": \"{{zaak_url}}\",\n    \"objectType\": \"zaak\"\n}"
										},
										"url": {
											"raw": "{{drc_url}}/objectinformatieobjecten",
											"host": [
												"{{drc_url}}"
											],
											"path": [
												"objectinformatieobjecten"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-003b) (NI) Geen bestaande combinatie zaak en informatieobject op de ZaakInformatieObject-resource",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "63fa26c3-95f9-4a41-99ed-89e2069dfc32",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "a796162b-88cc-4f93-a252-7d9c45e5718b",
												"exec": [
													"pm.test(\"Toevoegen informatieobject aan Zaak waaraan dat object al gekoppeld is geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that error was thrown for correct reason",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"informatieobject\");",
													"    pm.expect(error.code).to.be.equal(\"unique\");",
													"});",
													"",
													"",
													"// TODO Tijdelijk totdat ObjectInformatieObject deletion gefixt is",
													"postman.setNextRequest(\"(zrc-003c) (NI) Valideren bestaan relatie informatieobject en zaak\")"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"informatieobject\": \"{{informatieobject_url}}\"\n}"
										},
										"url": {
											"raw": "{{zaak_url}}/informatieobjecten",
											"host": [
												"{{zaak_url}}"
											],
											"path": [
												"informatieobjecten"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete relation between Zaak and Informatieobject",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "f6f87cec-0d1a-4acf-b2df-2e05417272c7",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{objectinformatieobject_url}}",
											"host": [
												"{{objectinformatieobject_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-003c) (NI) Valideren bestaan relatie informatieobject en zaak",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "6949f957-67f2-4a13-9e36-330bbf5e1b72",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "27152e99-88c1-4f71-b354-d43f8579b2fc",
												"exec": [
													"pm.test(\"Toevoegen informatieobject aan Zaak zonder bestaande relatie in DRC geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var errors = pm.response.json()[\"invalid-params\"];",
													"    pm.expect(errors[0].name).to.be.equal(\"informatieobject\");",
													"    pm.expect(errors[0].code).to.be.equal(\"inconsistent-relation\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"informatieobject\": \"{{informatieobject_url}}\"\n}"
										},
										"url": {
											"raw": "{{zaak_url}}/informatieobjecten",
											"host": [
												"{{zaak_url}}"
											],
											"path": [
												"informatieobjecten"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "95616806-2a7a-48b1-b0f6-ffb607ce0357",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "db5e7ac2-5507-417e-a995-e9ada5f231f4",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "zrc-004",
							"item": [
								{
									"name": "(zrc-004a) Valideer zaaktypeclaims",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "73450d28-96ee-475b-812b-9f1520ab28cc",
												"exec": [
													"pm.test(\"zaak_list retourneert geen Zaken met Zaaktypes buiten de Zaaktypes-claim van de gebruiker\", function() {",
													"    var jsonData = pm.response.json();",
													"    ",
													"    pm.response.to.have.status(200);",
													"",
													"    // If the Zaaktypes claim does not allow access to all possible Zaaktypes, verify that no zaken with zaaktypes that do not occur in the claim are shown",
													"    if(!pm.variables.get(\"zaaktypes_claim\").includes('*')) {",
													"        var zaaktypes_not_in_claim = jsonData.results.filter(zaak => !pm.variables.get(\"zaaktypes_claim\").includes(zaak.zaaktype));",
													"        pm.expect(zaaktypes_not_in_claim.length).to.be.equal(0);",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "26c89154-2968-447b-96e6-34a35648f4c2",
												"exec": [
													"// Decode the JWT token to retrieve the list of Zaaktype claims associated with it",
													"var parts = pm.environment.get(\"jwt_token\").split('.');",
													"pm.variables.set(\"zaaktypes_claim\", JSON.parse(atob(parts[1])).zds.zaaktypes);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Authorization",
												"value": "{{jwt_token_without_claims}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-004b) Valideer zaaktypeclaims",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "73450d28-96ee-475b-812b-9f1520ab28cc",
												"exec": [
													"pm.test(\"zaak_zoek retourneert geen Zaken met Zaaktypes buiten de Zaaktypes-claim van de gebruiker\", function() {",
													"    var jsonData = pm.response.json();",
													"",
													"    pm.response.to.have.status(200);",
													"",
													"    // If the Zaaktypes claim does not allow access to all possible Zaaktypes, verify that no zaken with zaaktypes that do not occur in the claim are shown",
													"    if(!pm.variables.get(\"zaaktypes_claim\").includes('*')) {",
													"        var zaaktypes_not_in_claim = jsonData.results.filter(zaak => !pm.variables.get(\"zaaktypes_claim\").includes(zaak.zaaktype));",
													"        pm.expect(zaaktypes_not_in_claim.length).to.be.equal(0);",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "26c89154-2968-447b-96e6-34a35648f4c2",
												"exec": [
													"// Set Geo search parameters",
													"pm.variables.set(\"request_body\", JSON.stringify({",
													"    \"zaakgeometrie\": {",
													"        \"within\": pm.variables.get(\"zaak_geometrie\")",
													"    }",
													"}));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{jwt_token_without_claims}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken/_zoek",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken",
												"_zoek"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-004c) Valideren detail-operaties op Zaaktypes niet in claim is verboden",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "79604413-f76f-47ba-935f-5c159962f352",
												"exec": [
													"pm.test(\"Detail operatie op Zaak met Zaaktype niet in zaaktypeclaim geeft 403\", function() {",
													"    pm.response.to.have.status(403);",
													"    pm.expect(pm.response.json().code).to.be.equal(\"not_authenticated\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "d77a2347-d599-47bf-98e5-376178013a34",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "{{jwt_token_without_claims}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "f2ebf15b-f3f1-400c-95ec-aa13f7e46bef",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "38d06013-8ebb-4b0f-a8aa-bccfd6af74a0",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "zrc-005 (NI)",
							"item": [
								{
									"name": "Create Zaak to close",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4c8f1f41-e776-423f-9123-4939889bec5e",
												"exec": [
													"pm.variables.set(\"created_zaak_url\", pm.response.json().url)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{zaak_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create relation between Zaak and Informatieobject with gebruiksrecht null",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fa9f354c-0464-494e-b9fa-9635b21b2d43",
												"exec": [
													"pm.variables.set(\"objectinformatieobject_url\", pm.response.json().url)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "5be8e943-844c-4786-9173-08a7e1dfb2c8",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"informatieobject\": \"{{informatieobject_url}}\",\n    \"object\": \"{{created_zaak_url}}\",\n    \"objectType\": \"zaak\"\n}"
										},
										"url": {
											"raw": "{{drc_url}}/objectinformatieobjecten",
											"host": [
												"{{drc_url}}"
											],
											"path": [
												"objectinformatieobjecten"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add Resultaat to Zaak",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "7f3ed8a2-7bc9-4c77-85b1-561482065971",
												"exec": [
													"pm.variables.set(\"resultaattype\", pm.variables.get(\"zaaktype_resultaattypen\")[0]);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "1c33254a-fe4a-4192-9108-4b6925265a80",
												"exec": [
													"pm.variables.set(\"zaak_resultaat_url\", pm.response.json().url);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"resultaatType\": \"{{resultaattype}}\"\n}"
										},
										"url": {
											"raw": "{{zrc_url}}/resultaten",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"resultaten"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add Eindstatus to Zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7226fe56-bdcc-42d9-ad16-07852570b778",
												"exec": [
													"pm.variables.set(\"eindstatus_datumStatusGezet\", pm.response.json().datumStatusGezet);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "820be47c-e617-4e5e-aa70-5e4ab1440b54",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"statusType\": \"{{eindstatustype}}\",\n\t\"datumStatusGezet\": \"2018-04-20T13:37:00\"\n}"
										},
										"url": {
											"raw": "{{zrc_url}}/statussen",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"statussen"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-005a) Zaak.einddatum volgt logisch uit eindstatus",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7226fe56-bdcc-42d9-ad16-07852570b778",
												"exec": [
													"pm.test(\"Toevoegen eindstatus aan Zaak laat Zaak.einddatum afleiden uit status.datumStatusGezet\", function(){",
													"    pm.response.to.have.status(200);",
													"    ",
													"    var einddatum = pm.response.json().einddatum;",
													"    pm.expect(pm.variables.get(\"eindstatus_datumStatusGezet\").includes(einddatum));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "820be47c-e617-4e5e-aa70-5e4ab1440b54",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-005b) Informatieobject.indicatieGebruikersrecht niet null bij afsluiten zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7226fe56-bdcc-42d9-ad16-07852570b778",
												"exec": [
													"pm.test(\"Afsluiten Zaak betekent Informatieobject.indicatieGebruiksrecht gezet voor alle gerelateerde objecten\", function(){",
													"    var jsonData = pm.response.json();",
													"    ",
													"    pm.response.to.have.status(200);",
													"    ",
													"    for (i = 0; i < jsonData.length; i++) {",
													"        pm.sendRequest({",
													"            url: jsonData[i].informatieobject,",
													"            method: \"GET\"",
													"        }, function (err, res) {",
													"                if (!err) {",
													"                    pm.expect(res.json().indicatieGebruiksrecht).to.not.be.equal(null);",
													"                }",
													"        });",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "820be47c-e617-4e5e-aa70-5e4ab1440b54",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{zaak_url}}/informatieobjecten",
											"host": [
												"{{zaak_url}}"
											],
											"path": [
												"informatieobjecten"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-005c) Afgesloten zaak bijwerken is niet toegestaan",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8dce713a-a7ea-40be-a751-6d56c1a91480",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.omschrijving = \"aanpassing\"",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "9e3dd206-12d7-43e7-ac77-8e9122340e37",
												"exec": [
													"pm.test(\"Afgesloten Zaak bijwerken geeft 403\", function() {",
													"    pm.response.to.have.status(403);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-005d) Afgesloten zaak deels bijwerken is niet toegestaan",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8dce713a-a7ea-40be-a751-6d56c1a91480",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "9e3dd206-12d7-43e7-ac77-8e9122340e37",
												"exec": [
													"pm.test(\"Afgesloten Zaak bijwerken geeft 403\", function() {",
													"    pm.response.to.have.status(403);",
													"});",
													"",
													"// TODO Tijdelijk totdat ObjectInformatieObject deletion gefixt is",
													"postman.setNextRequest(\"Create relation between Zaak and Informatieobject with gebruiksrecht not null\")"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"omschrijving\": \"aangepast\"\n}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete relation between Zaak and Informatieobject",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "f6f87cec-0d1a-4acf-b2df-2e05417272c7",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{objectinformatieobject_url}}",
											"host": [
												"{{objectinformatieobject_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create relation between Zaak and Informatieobject with gebruiksrecht not null",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fa9f354c-0464-494e-b9fa-9635b21b2d43",
												"exec": [
													"pm.variables.set(\"objectinformatieobject_url\", pm.response.json().url)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "5be8e943-844c-4786-9173-08a7e1dfb2c8",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"informatieobject\": \"{{informatieobject_gebruiksrecht_null_url}}\",\n    \"object\": \"{{created_zaak_url}}\",\n    \"objectType\": \"zaak\"\n}"
										},
										"url": {
											"raw": "{{drc_url}}/objectinformatieobjecten",
											"host": [
												"{{drc_url}}"
											],
											"path": [
												"objectinformatieobjecten"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-005e) Eindstatus toevoegen aan Zaak met Informatieobject.indicatieGebruiksrecht null",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7226fe56-bdcc-42d9-ad16-07852570b778",
												"exec": [
													"pm.test(\"Eindstatus toevoegen aan Zaak met gerelateerd Informatieobject met indicatieGebruiksrecht null geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    var error = pm.response.json()['invalid-params'][0];",
													"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
													"    pm.expect(error.code).to.be.equal(\"indicatiegebruiksrecht-unset\");",
													"});",
													"",
													"// TODO Tijdelijk totdat ObjectInformatieObject deletion gefixt is",
													"postman.setNextRequest(\"Add non-Eindstatus to Zaak\")"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "820be47c-e617-4e5e-aa70-5e4ab1440b54",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"statusType\": \"{{eindstatustype}}\",\n\t\"datumStatusGezet\": \"2018-04-20T13:37:00\"\n}"
										},
										"url": {
											"raw": "{{zrc_url}}/statussen",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"statussen"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete relation between Zaak and Informatieobject",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "f6f87cec-0d1a-4acf-b2df-2e05417272c7",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{objectinformatieobject_url}}",
											"host": [
												"{{objectinformatieobject_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add non-Eindstatus to Zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7226fe56-bdcc-42d9-ad16-07852570b778",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "820be47c-e617-4e5e-aa70-5e4ab1440b54",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"zaak\": \"{{zaak_url}}\",\n\t\"statusType\": \"{{non_eindstatustype}}\",\n\t\"datumStatusGezet\": \"2018-04-20T13:37:00\"\n}"
										},
										"url": {
											"raw": "{{zrc_url}}/statussen",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"statussen"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-005f) Zaak.einddatum leeg als geen eindstatus gezet",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7226fe56-bdcc-42d9-ad16-07852570b778",
												"exec": [
													"pm.test(\"Toevoegen status die geen eindstatus is aan Zaak betekent Zaak.einddatum leeg\", function(){",
													"    pm.response.to.have.status(200);",
													"    ",
													"    var einddatum = pm.response.json().einddatum;",
													"    pm.expect(einddatum).to.be.equal(null);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "820be47c-e617-4e5e-aa70-5e4ab1440b54",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Created Zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a4bd1602-194d-44c1-b79c-3cdeb7c43c78",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c67feddd-8a38-42e1-8e45-f489eebb36ae",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a37470a4-94cc-4d93-93bb-c6e21fcea659",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "zrc-006",
							"item": [
								{
									"name": "(zrc-006a) Valideer expliciet gedefinieerde vertrouwelijkheidaanduiding",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4d176dd2-b596-4624-bfe8-5ce952a103f5",
												"exec": [
													"pm.test(\"Expliciete vertrouwelijkheidaanduiding bij aanmaken Zaak moet toegekend worden aan Zaak\", function() {",
													"    pm.expect(pm.response.json().vertrouwelijkheidaanduiding).to.be.equal(pm.variables.get(\"expliciete_vertrouwelijkheid\"));",
													"    pm.variables.set(\"created_zaak_url\", pm.response.json().url);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f0914778-27b4-4cb3-8af8-7fce47ecc6f6",
												"exec": [
													"pm.variables.set(\"expliciete_vertrouwelijkheid\", \"zeer geheim\");",
													"",
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.vertrouwelijkheidaanduiding = pm.variables.get(\"expliciete_vertrouwelijkheid\");",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-006b) Valideer expliciet gedefinieerde vertrouwelijkheidaanduiding (PUT)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4d176dd2-b596-4624-bfe8-5ce952a103f5",
												"exec": [
													"pm.test(\"Expliciete vertrouwelijkheidaanduiding bij bijwerken Zaak moet toegekend worden aan Zaak\", function() {",
													"    pm.expect(pm.response.json().vertrouwelijkheidaanduiding).to.be.equal(pm.variables.get(\"expliciete_vertrouwelijkheid\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f0914778-27b4-4cb3-8af8-7fce47ecc6f6",
												"exec": [
													"pm.variables.set(\"expliciete_vertrouwelijkheid\", \"intern\");",
													"",
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.vertrouwelijkheidaanduiding = pm.variables.get(\"expliciete_vertrouwelijkheid\");",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-006c) Valideer expliciet gedefinieerde vertrouwelijkheidaanduiding (PATCH)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4d176dd2-b596-4624-bfe8-5ce952a103f5",
												"exec": [
													"pm.test(\"Expliciete vertrouwelijkheidaanduiding bij deels bijwerken Zaak moet toegekend worden aan Zaak\", function() {",
													"    pm.expect(pm.response.json().vertrouwelijkheidaanduiding).to.be.equal(pm.variables.get(\"expliciete_vertrouwelijkheid\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f0914778-27b4-4cb3-8af8-7fce47ecc6f6",
												"exec": [
													"pm.variables.set(\"expliciete_vertrouwelijkheid\", \"vertrouwelijk\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"vertrouwelijkheidaanduiding\": \"{{expliciete_vertrouwelijkheid}}\"\n}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Created Zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a4bd1602-194d-44c1-b79c-3cdeb7c43c78",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-006d) Valideer vertrouwelijkheidaanduiding afgeleid uit Zaaktype",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "1cc107ce-c1c0-41b7-89f3-3a26436a05ae",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = pm.variables.get(\"zaak_body\");",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "6087f02c-3a69-40f3-aca8-9e894767813c",
												"exec": [
													"pm.test(\"Vertrouwelijkheidaanduiding bij aanmaken Zaak afgeleid uit Zaaktype indien niet meegegeven\", function() {",
													"    pm.expect(pm.response.json().vertrouwelijkheidaanduiding).to.be.equal(pm.variables.get(\"zaaktype_vertrouwelijkheid\"));",
													"    pm.variables.set(\"created_zaak_url\", pm.response.json().url);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Created Zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a4bd1602-194d-44c1-b79c-3cdeb7c43c78",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e5600f83-fc3f-4922-951c-e90331cc30ac",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "f5c9649f-4e65-48e8-93c9-2f87efdf322f",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "zrc-007 (NI)",
							"item": [
								{
									"name": "(zrc-007a) (NI) Valideren communicatiekanaal url bij aanmaken Zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0bc39030-ab3a-4dd0-9996-792966daf183",
												"exec": [
													"pm.test(\"Zaak aanmaken met ongeldige communicatiekanaal url geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"communicatiekanaal\");",
													"    pm.expect(error.code).to.be.equal(\"bad-url\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f4f5279f-6c17-4d32-8022-6758173ec716",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.communicatiekanaal = pm.environment.get(\"mock_url\") + \"/404\"",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-007b) (NI) Valideren communicatiekanaal url bij bijwerken Zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0bc39030-ab3a-4dd0-9996-792966daf183",
												"exec": [
													"pm.test(\"Zaak bijwerken met ongeldige communicatiekanaal url geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"communicatiekanaal\");",
													"    pm.expect(error.code).to.be.equal(\"bad-url\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f4f5279f-6c17-4d32-8022-6758173ec716",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.communicatiekanaal = pm.environment.get(\"mock_url\") + \"/404\"",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-007c) (NI) Valideren communicatiekanaal url bij deels bijwerken Zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0bc39030-ab3a-4dd0-9996-792966daf183",
												"exec": [
													"pm.test(\"Zaak deels bijwerken met ongeldige communicatiekanaal url geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"communicatiekanaal\");",
													"    pm.expect(error.code).to.be.equal(\"bad-url\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f4f5279f-6c17-4d32-8022-6758173ec716",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"communicatiekanaal\": \"{{mock_url}}/404\"\n}"
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-007d) (NI) Valideren communicatiekanaal-resource bij aanmaken Zaak",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "c8fea466-da3a-4ed8-ac79-7b0cd10ac582",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.communicatiekanaal = pm.variables.get(\"zaak_url\");",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "b364538b-6bb5-4a95-af4b-bc86e9969068",
												"exec": [
													"pm.test(\"Zaak aanmaken met communicatiekanaal url die niet wijst naar Communicatiekanaal-resource geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"communicatiekanaal\");",
													"    pm.expect(error.code).to.be.equal(\"invalid-resource\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-007e) (NI) Valideren communicatiekanaal url bij bijwerken Zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0bc39030-ab3a-4dd0-9996-792966daf183",
												"exec": [
													"pm.test(\"Zaak bijwerken met communicatiekanaal url die niet wijst naar Communicatiekanaal-resource geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"communicatiekanaal\");",
													"    pm.expect(error.code).to.be.equal(\"bad-url\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f4f5279f-6c17-4d32-8022-6758173ec716",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.communicatiekanaal = pm.variables.get(\"zaak_url\");",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-007f) (NI) Valideren communicatiekanaal url bij deels bijwerken Zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0bc39030-ab3a-4dd0-9996-792966daf183",
												"exec": [
													"pm.test(\"Zaak deels bijwerken met communicatiekanaal url die niet wijst naar Communicatiekanaal-resource geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"communicatiekanaal\");",
													"    pm.expect(error.code).to.be.equal(\"bad-url\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f4f5279f-6c17-4d32-8022-6758173ec716",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"communicatiekanaal\": \"{{zaak_url}}\"\n}"
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-007g) Zaak aanmaken met valide communicatiekanaal is mogelijk",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "c8fea466-da3a-4ed8-ac79-7b0cd10ac582",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.communicatiekanaal = \"https://ref.tst.vng.cloud/referentielijsten/api/v1/communicatiekanalen/2b757868-45c2-42ca-b637-b63ddc87beb4\";",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "b364538b-6bb5-4a95-af4b-bc86e9969068",
												"exec": [
													"pm.test(\"Zaak aanmaken met valide communicatiekanaal geeft 201\", function() {",
													"    pm.response.to.have.status(201);",
													"    pm.variables.set(\"created_zaak_url\", pm.response.json().url);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-007h) Zaak bijwerken met valide communicatiekanaal is mogelijk",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "c8fea466-da3a-4ed8-ac79-7b0cd10ac582",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.communicatiekanaal = \"https://ref.tst.vng.cloud/referentielijsten/api/v1/communicatiekanalen/2b757868-45c2-42ca-b637-b63ddc87beb4\";",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "b364538b-6bb5-4a95-af4b-bc86e9969068",
												"exec": [
													"pm.test(\"Zaak bijwerken met valide communicatiekanaal geeft 200\", function() {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-007i) Zaak deels bijwerken met valide communicatiekanaal is mogelijk",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "c8fea466-da3a-4ed8-ac79-7b0cd10ac582",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "b364538b-6bb5-4a95-af4b-bc86e9969068",
												"exec": [
													"pm.test(\"Zaak deels bijwerken met valide communicatiekanaal geeft 200\", function() {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"communicatiekanaal\": \"https://ref.tst.vng.cloud/referentielijsten/api/v1/communicatiekanalen/2b757868-45c2-42ca-b637-b63ddc87beb4\"\n}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Created Zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a4bd1602-194d-44c1-b79c-3cdeb7c43c78",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c6c84b57-df0c-4cbd-afb8-e92614613b3f",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "9810274f-f1da-4b81-9212-86393c6c081c",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "zrc-008",
							"item": [
								{
									"name": "(zrc-008a) Valideer urls relevanteAndereZaken",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "9cdfb036-7e3a-4692-8ff5-60b906d5bad0",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.relevanteAndereZaken = [pm.variables.get(\"mock_url\") + \"/404\"];",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "3b98d08c-0556-42d2-a815-fbd008eafbac",
												"exec": [
													"pm.test(\"Zaak aanmaken met ongeldige relevanteAndereZaken url geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"relevanteAndereZaken.0\");",
													"    pm.expect(error.code).to.be.equal(\"bad-url\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-008b) Valideer urls relevanteAndereZaken bij bijwerken Zaak",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "9cdfb036-7e3a-4692-8ff5-60b906d5bad0",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.relevanteAndereZaken = [pm.variables.get(\"mock_url\") + \"/404\"];",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "3b98d08c-0556-42d2-a815-fbd008eafbac",
												"exec": [
													"pm.test(\"Zaak bijwerken met ongeldige relevanteAndereZaken url geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"relevanteAndereZaken.0\");",
													"    pm.expect(error.code).to.be.equal(\"bad-url\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-008c) Valideer urls relevanteAndereZaken bij deels bijwerken Zaak",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "9cdfb036-7e3a-4692-8ff5-60b906d5bad0",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "3b98d08c-0556-42d2-a815-fbd008eafbac",
												"exec": [
													"pm.test(\"Zaak deels bijwerken met ongeldige relevanteAndereZaken url geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"relevanteAndereZaken.0\");",
													"    pm.expect(error.code).to.be.equal(\"bad-url\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"relevanteAndereZaken\": [\n\t\t\"{{mock_url}}/404\"\t\n\t]\n}"
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-008d) (NI) Zaak aanmaken met relevanteAndereZaken is mogelijk",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "9cdfb036-7e3a-4692-8ff5-60b906d5bad0",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.relevanteAndereZaken = [pm.variables.get(\"zaak_url\")];",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "3b98d08c-0556-42d2-a815-fbd008eafbac",
												"exec": [
													"pm.test(\"Zaak aanmaken met geldige relevanteAndereZaken geeft 201\", function() {",
													"    pm.response.to.have.status(201);",
													"    pm.variables.set(\"created_zaak_url\", pm.response.json().url);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-008e) (NI) Zaak bijwerken met relevanteAndereZaken is mogelijk",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "2e67d5ff-9d5c-4135-949d-9310a4c3945e",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.relevanteAndereZaken = [pm.variables.get(\"zaak_url\")];",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "34ddadfb-4583-4c13-8b4d-eee18348ea69",
												"exec": [
													"pm.test(\"Zaak bijwerken met geldige relevanteAndereZaken geeft 200\", function() {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-008f) (NI) Zaak deels bijwerken met relevanteAndereZaken is mogelijk",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a231e003-4106-4749-a717-62969c5fac96",
												"exec": [
													"pm.test(\"Zaak deels bijwerken met geldige relevanteAndereZaken geeft 200\", function() {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"relevanteAndereZaken\": [\n\t\t\"{{zaak_url}}\"\n\t]\n}"
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Created Zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a4bd1602-194d-44c1-b79c-3cdeb7c43c78",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "zrc-009 (WIP)",
							"item": [
								{
									"name": "(zrc-009a) Valideren opschorting indien gedefinieerd",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c3d8939f-9c16-49c6-a507-bfbd34abc9b6",
												"exec": [
													"pm.test(\"Zaak aanmaken met opschorting zonder indicatie en reden geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var errors = pm.response.json()[\"invalid-params\"];",
													"    pm.expect(errors[0].name).to.be.equal(\"opschorting.indicatie\");",
													"    pm.expect(errors[0].code).to.be.equal(\"required\");",
													"    ",
													"    pm.expect(errors[1].name).to.be.equal(\"opschorting.reden\");",
													"    pm.expect(errors[1].code).to.be.equal(\"required\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "8373d66a-0c08-4e2a-90ae-3fbad96dc51a",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.opschorting = {\"wrong_field\": \"test\"};",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-009b) Valideren opschorting indien gedefinieerd",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c3d8939f-9c16-49c6-a507-bfbd34abc9b6",
												"exec": [
													"pm.test(\"Zaak bijwerken met opschorting zonder indicatie en reden geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var errors = pm.response.json()[\"invalid-params\"];",
													"    pm.expect(errors[0].name).to.be.equal(\"opschorting.indicatie\");",
													"    pm.expect(errors[0].code).to.be.equal(\"required\");",
													"    ",
													"    pm.expect(errors[1].name).to.be.equal(\"opschorting.reden\");",
													"    pm.expect(errors[1].code).to.be.equal(\"required\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "8373d66a-0c08-4e2a-90ae-3fbad96dc51a",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.opschorting = {\"wrong_field\": \"test\"};",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-009c) (NI) Valideren opschorting indien gedefinieerd",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c3d8939f-9c16-49c6-a507-bfbd34abc9b6",
												"exec": [
													"pm.test(\"Zaak deels bijwerken met opschorting zonder indicatie en reden geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var errors = pm.response.json()[\"invalid-params\"];",
													"    pm.expect(errors[0].name).to.be.equal(\"opschorting.indicatie\");",
													"    pm.expect(errors[0].code).to.be.equal(\"required\");",
													"    ",
													"    pm.expect(errors[1].name).to.be.equal(\"opschorting.reden\");",
													"    pm.expect(errors[1].code).to.be.equal(\"required\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "8373d66a-0c08-4e2a-90ae-3fbad96dc51a",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"opschorting\": {\n\t\t\"wrong_field\": \"test\"\n\t}\n}"
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-009d) Valideren verlenging indien gedefinieerd",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "82250c04-55c0-410a-b319-04edc0658119",
												"exec": [
													"pm.test(\"Zaak aanmaken met verlenging zonder reden en duur geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var errors = pm.response.json()[\"invalid-params\"];",
													"    pm.expect(errors[0].name).to.be.equal(\"verlenging.reden\");",
													"    pm.expect(errors[0].code).to.be.equal(\"required\");",
													"    ",
													"    pm.expect(errors[1].name).to.be.equal(\"verlenging.duur\");",
													"    pm.expect(errors[1].code).to.be.equal(\"required\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "448fbdcc-e7fa-4e1f-ade4-d32ea27093a1",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.verlenging = {\"wrong_field\": \"test\"};",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-009e) Valideren verlenging indien gedefinieerd",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "82250c04-55c0-410a-b319-04edc0658119",
												"exec": [
													"pm.test(\"Zaak bijwerken met verlenging zonder reden en duur geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var errors = pm.response.json()[\"invalid-params\"];",
													"    pm.expect(errors[0].name).to.be.equal(\"verlenging.reden\");",
													"    pm.expect(errors[0].code).to.be.equal(\"required\");",
													"    ",
													"    pm.expect(errors[1].name).to.be.equal(\"verlenging.duur\");",
													"    pm.expect(errors[1].code).to.be.equal(\"required\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "448fbdcc-e7fa-4e1f-ade4-d32ea27093a1",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.verlenging = {\"wrong_field\": \"test\"};",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-009f) (NI) Valideren verlenging indien gedefinieerd",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "82250c04-55c0-410a-b319-04edc0658119",
												"exec": [
													"pm.test(\"Zaak deels bijwerken met verlenging zonder reden en duur geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var errors = pm.response.json()[\"invalid-params\"];",
													"    pm.expect(errors[0].name).to.be.equal(\"verlenging.reden\");",
													"    pm.expect(errors[0].code).to.be.equal(\"required\");",
													"    ",
													"    pm.expect(errors[1].name).to.be.equal(\"verlenging.duur\");",
													"    pm.expect(errors[1].code).to.be.equal(\"required\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "448fbdcc-e7fa-4e1f-ade4-d32ea27093a1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"verlenging\": {\n\t\t\"wrong_field\": \"test\"\n\t}\n}"
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-009g) Zaak aanmaken met opschorting null is mogelijk",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "6b902589-4913-4533-b2a0-c6baa9463680",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.opschorting = null;",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "5bf1eeaf-cc9e-4dee-88e8-c4f7c551a343",
												"exec": [
													"pm.test(\"Zaak aanmaken met opschorting null geeft 201\", function() {",
													"    pm.response.to.have.status(201);",
													"    pm.variables.set(\"created_zaak_url\", pm.response.json().url);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-009h) Zaak bijwerken met opschorting null is mogelijk",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "6b902589-4913-4533-b2a0-c6baa9463680",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.opschorting = null;",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "5bf1eeaf-cc9e-4dee-88e8-c4f7c551a343",
												"exec": [
													"pm.test(\"Zaak bijwerken met opschorting null geeft 200\", function() {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-009i) Zaak deels bijwerken met opschorting null is mogelijk",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "6b902589-4913-4533-b2a0-c6baa9463680",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "5bf1eeaf-cc9e-4dee-88e8-c4f7c551a343",
												"exec": [
													"pm.test(\"Zaak deels bijwerken met opschorting null geeft 200\", function() {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"opschorting\": null\n}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Created Zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a4bd1602-194d-44c1-b79c-3cdeb7c43c78",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-009g) Zaak aanmaken met verlenging null is mogelijk",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "6b902589-4913-4533-b2a0-c6baa9463680",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.verlenging = null;",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "5bf1eeaf-cc9e-4dee-88e8-c4f7c551a343",
												"exec": [
													"pm.test(\"Zaak aanmaken met verlenging null geeft 201\", function() {",
													"    pm.response.to.have.status(201);",
													"    pm.variables.set(\"created_zaak_url\", pm.response.json().url);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-009h) Zaak bijwerken met verlenging null is mogelijk",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "6b902589-4913-4533-b2a0-c6baa9463680",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.verlenging = null;",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "5bf1eeaf-cc9e-4dee-88e8-c4f7c551a343",
												"exec": [
													"pm.test(\"Zaak bijwerken met verlenging null geeft 200\", function() {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-009i) Zaak deels bijwerken met verlenging null is mogelijk",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "6b902589-4913-4533-b2a0-c6baa9463680",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "5bf1eeaf-cc9e-4dee-88e8-c4f7c551a343",
												"exec": [
													"pm.test(\"Zaak deels bijwerken met verlenging null geeft 200\", function() {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"verlenging\": null\n}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Created Zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a4bd1602-194d-44c1-b79c-3cdeb7c43c78",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "72f0a70d-74ad-4166-8ba5-a37b0f3d0687",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "e370fa77-b348-4d3d-baf3-fb4b6c9dc87e",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "zrc-010",
							"item": [
								{
									"name": "(zrc-010a) Valideren hoofdzaak op de Zaak-resource",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ff41ef3-4e25-4c46-8bc6-a8475d587d62",
												"exec": [
													"pm.test(\"Zaak aanmaken met hoofdzaak url die niet wijst naar Zaak-resource geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var errors = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(errors.name).to.be.equal(\"hoofdzaak\");",
													"    pm.expect(errors.code).to.be.equal(\"no_match\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "0c5d309a-3da4-4cdf-a069-929f3ac9683e",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.hoofdzaak = pm.environment.get(\"mock_url\") + \"/200\";",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Deelzaak",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "6c47b7ed-840c-4638-bb93-98b9eb7ccf75",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.hoofdzaak = pm.variables.get(\"zaak_url\");",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "d0a2b3b2-27dd-42c0-989f-e84cfe6fa757",
												"exec": [
													"pm.variables.set(\"deelzaak_url\", pm.response.json().url);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-010b) Valideren opgegeven hoofdzaak is geen deelzaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ff41ef3-4e25-4c46-8bc6-a8475d587d62",
												"exec": [
													"pm.test(\"Zaak aanmaken met hoofdzaak url die wijst naar een deelzaak geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var errors = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(errors.name).to.be.equal(\"hoofdzaak\");",
													"    pm.expect(errors.code).to.be.equal(\"deelzaak-als-hoofdzaak\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "fdfe3406-a2cb-4f1d-b5c7-e2b7c8cbb623",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.hoofdzaak = pm.variables.get(\"deelzaak_url\");",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Deelzaak",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{deelzaak_url}}",
											"host": [
												"{{deelzaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-010c) Valideren deelzaak mag geen deelzaak van zichzelf zijn (PATCH)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "cf1ecb8d-7061-4189-aeef-23b05ed13b65",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ad55fa05-0d56-4d6b-9fc5-9f0fe3ff8e83",
												"exec": [
													"pm.test(\"Zaak patch met hoofdzaak url die wijst naar de zaak zelf geeft 400\", function(){",
													"    pm.response.to.have.status(400);",
													"   ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var errors = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(errors.name).to.be.equal(\"hoofdzaak\");",
													"    pm.expect(errors.code).to.be.equal(\"self-forbidden\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"hoofdzaak\": \"{{zaak_url}}\"\n}"
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-010d) Valideren deelzaak mag geen deelzaak van zichzelf zijn (PUT)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8ab5f43f-49f0-4cf8-bfb9-ea7d000888a0",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.hoofdzaak = pm.variables.get(\"zaak_url\");",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "68db0f5f-9890-425c-98f4-6dbc975540ec",
												"exec": [
													"pm.test(\"Zaak put met hoofdzaak url die wijst naar de zaak zelf geeft 400\", function(){",
													"    pm.response.to.have.status(400);",
													"   ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var errors = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(errors.name).to.be.equal(\"hoofdzaak\");",
													"    pm.expect(errors.code).to.be.equal(\"self-forbidden\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-010e) Zaak aanmaken met valide hoofdzaak is mogelijk",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ff41ef3-4e25-4c46-8bc6-a8475d587d62",
												"exec": [
													"pm.test(\"Zaak aanmaken met valide hoofdzaak geeft 201\", function() {",
													"    pm.response.to.have.status(201);",
													"    pm.variables.set(\"created_zaak_url\", pm.response.json().url);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "0c5d309a-3da4-4cdf-a069-929f3ac9683e",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.hoofdzaak = pm.variables.get(\"zaak_url\");",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-010f) Zaak bijwerken met valide hoofdzaak is mogelijk",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ff41ef3-4e25-4c46-8bc6-a8475d587d62",
												"exec": [
													"pm.test(\"Zaak bijwerken met valide hoofdzaak geeft 200\", function() {",
													"    pm.response.to.have.status(200);",
													"    pm.variables.set(\"created_zaak_url\", pm.response.json().url);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "0c5d309a-3da4-4cdf-a069-929f3ac9683e",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.hoofdzaak = pm.variables.get(\"zaak_url\");",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-010g) Zaak deels bijwerken met valide hoofdzaak is mogelijk",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ff41ef3-4e25-4c46-8bc6-a8475d587d62",
												"exec": [
													"pm.test(\"Zaak deels bijwerken met valide hoofdzaak geeft 200\", function() {",
													"    pm.response.to.have.status(200);",
													"    pm.variables.set(\"created_zaak_url\", pm.response.json().url);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "0c5d309a-3da4-4cdf-a069-929f3ac9683e",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.hoofdzaak = pm.variables.get(\"zaak_url\");",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Created Zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a4bd1602-194d-44c1-b79c-3cdeb7c43c78",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "zrc-011 (WIP) (NI)",
							"item": [
								{
									"name": "(zrc-011a) (WIP) (NI) Valideer op geen betalingswaarde en wel laatste betaaldatum",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f945f6a5-77ac-48dd-b9ba-a9b0a673471f",
												"exec": [
													"pm.test(\"Zaak aanmaken met betalingsindicatie nvt en laatsteBetaalDatum niet null geeft 400\", function(){",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // TODO valideren op juiste error codes",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "1f3b91e3-2ac0-4458-a935-c0fb88e7a871",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.betalingsindicatie = \"nvt\";",
													"body.laatsteBetaalDatum = \"2019-3-29\";",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "{{token}}"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-011b) Zaak bijwerken betalingsindicatie naar nvt moet laatsteBetaalDatum op null zetten",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f945f6a5-77ac-48dd-b9ba-a9b0a673471f",
												"exec": [
													"pm.test(\"Zaak bijwerken met betalingsindicatie nvt verandert laatsteBetaalDatum naar null\", function(){",
													"    var jsonBody = pm.response.json();",
													"    pm.expect(jsonBody.betalingsindicatie).to.be.equal(\"nvt\");",
													"    pm.expect(jsonBody.laatsteBetaaldatum).to.be.equal(null);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "1f3b91e3-2ac0-4458-a935-c0fb88e7a871",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.betalingsindicatie = \"nvt\";",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "{{token}}"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-011c) Zaak deels bijwerken betalingsindicatie naar nvt moet laatsteBetaalDatum op null zetten",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f945f6a5-77ac-48dd-b9ba-a9b0a673471f",
												"exec": [
													"pm.test(\"Zaak deels bijwerken met betalingsindicatie nvt verandert laatsteBetaalDatum naar null\", function(){",
													"    var jsonBody = pm.response.json();",
													"    pm.expect(jsonBody.betalingsindicatie).to.be.equal(\"nvt\");",
													"    pm.expect(jsonBody.laatsteBetaaldatum).to.be.equal(null);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "1f3b91e3-2ac0-4458-a935-c0fb88e7a871",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "{{token}}"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"betalingsindicatie\": \"nvt\"\n}"
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "ff8f4b99-ac17-4e7e-90e8-d81b79303808",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "96f99c67-e2fc-4eda-aad4-75da4dbed8c2",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "zrc-012",
							"item": [
								{
									"name": "(zrc-012a) Zaak productenOfDiensten validatie met Zaaktype productenOfDiensten",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "72e0fbd3-a35c-4c06-a0aa-fc9782016f71",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.productenOfDiensten = [pm.variables.get(\"zaak_url\")];",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f6878a9b-f297-4932-95b8-e31a86d7848b",
												"exec": [
													"pm.test(\"Zaak aanmaken met productenOfDiensten niet in Zaaktype gedefinieerd geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"productenOfDiensten\");",
													"    pm.expect(error.code).to.be.equal(\"invalid-products-services\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-012b) Zaak productenOfDiensten validatie met Zaaktype productenOfDiensten",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "72e0fbd3-a35c-4c06-a0aa-fc9782016f71",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.productenOfDiensten = [pm.variables.get(\"zaak_url\")];",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f6878a9b-f297-4932-95b8-e31a86d7848b",
												"exec": [
													"pm.test(\"Zaak aanmaken met productenOfDiensten niet in Zaaktype gedefinieerd geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"productenOfDiensten\");",
													"    pm.expect(error.code).to.be.equal(\"invalid-products-services\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-012c) Zaak productenOfDiensten validatie met Zaaktype productenOfDiensten",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "72e0fbd3-a35c-4c06-a0aa-fc9782016f71",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.productenOfDiensten = [pm.variables.get(\"zaak_url\")];",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f6878a9b-f297-4932-95b8-e31a86d7848b",
												"exec": [
													"pm.test(\"Zaak aanmaken met productenOfDiensten niet in Zaaktype gedefinieerd geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"productenOfDiensten\");",
													"    pm.expect(error.code).to.be.equal(\"invalid-products-services\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"productenOfDiensten\": [\n\t\t\"{{zaak_url}}\"\t\n\t]\n}"
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-012d) Zaak aanmaken met valide productenOfDiensten is mogelijk",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "72e0fbd3-a35c-4c06-a0aa-fc9782016f71",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.productenOfDiensten = [pm.variables.get(\"zaaktype_productenOfDiensten\")[0]];",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f6878a9b-f297-4932-95b8-e31a86d7848b",
												"exec": [
													"pm.test(\"Zaak aanmaken met valide productenOfDiensten geeft 201\", function() {",
													"    pm.response.to.have.status(201);",
													"    pm.variables.set(\"created_zaak_url\", pm.response.json().url);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-012e) Zaak bijwerken met valide productenOfDiensten is mogelijk",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "72e0fbd3-a35c-4c06-a0aa-fc9782016f71",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.productenOfDiensten = [pm.variables.get(\"zaaktype_productenOfDiensten\")[0]];",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f6878a9b-f297-4932-95b8-e31a86d7848b",
												"exec": [
													"pm.test(\"Zaak bijwerken met valide productenOfDiensten geeft 200\", function() {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-012f) Zaak deels bijwerken met valide productenOfDiensten is mogelijk",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "72e0fbd3-a35c-4c06-a0aa-fc9782016f71",
												"exec": [
													"pm.variables.set(\"request_body\", JSON.stringify({",
													"    \"productenOfDiensten\": [",
													"        pm.variables.get(\"zaaktype_productenOfDiensten\")[0]",
													"    ]",
													"}));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f6878a9b-f297-4932-95b8-e31a86d7848b",
												"exec": [
													"pm.test(\"Zaak deels bijwerken met valide productenOfDiensten geeft 200\", function() {",
													"    pm.response.to.have.status(200);",
													"    ",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Created Zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a4bd1602-194d-44c1-b79c-3cdeb7c43c78",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "329b00c3-7d84-4831-8896-bea87e9fa7c5",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "75a20abb-2a01-4d3e-a784-3c234b96caff",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "zrc-013 (WIP)",
							"item": [
								{
									"name": "Create Hoofdzaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4c8f1f41-e776-423f-9123-4939889bec5e",
												"exec": [
													"pm.variables.set(\"hoofdzaak_url\", pm.response.json().url);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{zaak_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add Resultaat to Hoofdzaak",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "7f3ed8a2-7bc9-4c77-85b1-561482065971",
												"exec": [
													"pm.variables.set(\"current_resultaattype\", pm.variables.get(\"zaaktype_resultaattypen\")[0]);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "1c33254a-fe4a-4192-9108-4b6925265a80",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"zaak\": \"{{hoofdzaak_url}}\",\n\t\"resultaatType\": \"{{current_resultaattype}}\"\n}"
										},
										"url": {
											"raw": "{{zrc_url}}/resultaten",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"resultaten"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add Eindstatus to Hoofdzaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7226fe56-bdcc-42d9-ad16-07852570b778",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "820be47c-e617-4e5e-aa70-5e4ab1440b54",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"zaak\": \"{{hoofdzaak_url}}\",\n\t\"statusType\": \"{{eindstatustype}}\",\n\t\"datumStatusGezet\": \"2018-04-18T13:37:00\"\n}"
										},
										"url": {
											"raw": "{{zrc_url}}/statussen",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"statussen"
											]
										}
									},
									"response": []
								},
								{
									"name": "Retrieve Hoofdzaak einddatum",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4f6ace2e-d1d5-4510-b352-7aae04427240",
												"exec": [
													"pm.variables.set(\"hoofdzaak_einddatum\", pm.response.json().einddatum);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{hoofdzaak_url}}",
											"host": [
												"{{hoofdzaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(WIP) Create Zaak without archiefnominatie",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "7f3ed8a2-7bc9-4c77-85b1-561482065971",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"delete body.archiefnominatie;",
													"body.hoofdzaak = pm.variables.get(\"hoofdzaak_url\");",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));",
													"",
													"// TODO deze zaak moet voor afleidingswijze: ",
													"// zaakobject: minstens 1 zaakinformatieobject van Resultaattype.brondatumArchiefprocedure.objecttype,",
													"// gerelateerde_zaak: ?",
													"// ingangsdatum_besluit & vervaldatum_besluit: minstens 1 gerelateerd besluit"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "46ada267-ffcf-477a-a3d6-02addbf603a2",
												"exec": [
													"pm.variables.set(\"zaak_zonder_archiefnominatie_url\", pm.response.json().url);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add Resultaat to Zaak",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "7f3ed8a2-7bc9-4c77-85b1-561482065971",
												"exec": [
													"if (!pm.variables.get(\"resultaattype_index\")) {",
													"    pm.variables.set(\"resultaattype_index\", 0);",
													"}",
													"",
													"pm.variables.set(\"current_resultaattype\", pm.variables.get(\"zaaktype_resultaattypen\")[pm.variables.get(\"resultaattype_index\")])"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "1c33254a-fe4a-4192-9108-4b6925265a80",
												"exec": [
													"pm.variables.set(\"zaak_resultaat_url\", pm.response.json().url);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"zaak\": \"{{zaak_zonder_archiefnominatie_url}}\",\n\t\"resultaatType\": \"{{current_resultaattype}}\"\n}"
										},
										"url": {
											"raw": "{{zrc_url}}/resultaten",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"resultaten"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add Eindstatus to Zaak without archiefnominatie",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7226fe56-bdcc-42d9-ad16-07852570b778",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "820be47c-e617-4e5e-aa70-5e4ab1440b54",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"zaak\": \"{{zaak_zonder_archiefnominatie_url}}\",\n\t\"statusType\": \"{{eindstatustype}}\",\n\t\"datumStatusGezet\": \"2018-04-26T13:37:00\"\n}"
										},
										"url": {
											"raw": "{{zrc_url}}/statussen",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"statussen"
											]
										}
									},
									"response": []
								},
								{
									"name": "Retrieve Resultaattype information",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f0a21fac-c424-42bf-86d4-4c905170c493",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.variables.set(\"resultaattype_archiefnominatie\", jsonData.archiefnominatie);",
													"pm.variables.set(\"resultaattype_archiefactietermijn\", jsonData.archiefactietermijn);",
													"pm.variables.set(\"resultaattype_brondatumArchiefprocedure\", jsonData.brondatumArchiefprocedure);",
													"",
													"// TODO afmaken",
													"",
													"switch(pm.variables.get(\"resultaattype_brondatumArchiefprocedure\").afleidingswijze) {",
													"    case \"afgehandeld\":",
													"        postman.setNextRequest(\"(zrc-013a) Afleidingswijze afgehandeld\");",
													"        break;",
													"    case \"hoofdzaak\":",
													"        postman.setNextRequest(\"(zrc-013b) Afleidingswijze hoofdzaak\");",
													"        break;",
													"    case \"eigenschap\":",
													"        break;",
													"    case \"ander_datumkenmerk\":",
													"        break;",
													"    case \"zaakobject\":",
													"        break;",
													"    case \"termijn\":",
													"        break;",
													"    case \"gerelateerde_zaak\":",
													"        break;",
													"    case \"ingangsdatum_besluit\":",
													"        break;",
													"    case \"vervaldatum_besluit\":",
													"        break;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{current_resultaattype}}",
											"host": [
												"{{current_resultaattype}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-013a) Afleidingswijze afgehandeld",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "211fc0ce-b5c8-486d-90cc-faf4029d3353",
												"exec": [
													"var moment = require('moment');",
													"",
													"pm.test(\"Resultaat toevoegen aan Zaak zonder archiefnominatie betekent dat archiefnominatie afgeleid wordt uit Resultaattype\", function() {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(pm.response.json().archiefnominatie).to.be.equal(pm.variables.get(\"resultaattype_archiefnominatie\"));",
													"});",
													"",
													"pm.test(\"Resultaat met afleidingswijze afgehandeld toevoegen aan Zaak zet correcte Zaak.archiefdatum\", function() {",
													"    var jsonData = pm.response.json();",
													"    ",
													"    if (pm.variables.get(\"resultaattype_archiefactietermijn\")) {",
													"        const brondatum = moment.utc(jsonData.einddatum);",
													"        const archiefactietermijn = moment.duration(pm.variables.get(\"resultaattype_archiefactietermijn\"), 'years');",
													"        var calculated_archiefactiedatum = brondatum.add(archiefactietermijn);",
													"        ",
													"        pm.expect(jsonData.archiefactiedatum).to.be.equal(calculated_archiefactiedatum.format(\"YYYY-MM-DD\"));   ",
													"    }",
													"});",
													"",
													"postman.setNextRequest(\"Delete Resultaat from Zaak\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{zaak_zonder_archiefnominatie_url}}",
											"host": [
												"{{zaak_zonder_archiefnominatie_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-013b) Afleidingswijze hoofdzaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "211fc0ce-b5c8-486d-90cc-faf4029d3353",
												"exec": [
													"var moment = require('moment');",
													"",
													"pm.test(\"Resultaat toevoegen aan Zaak zonder archiefnominatie betekent dat archiefnominatie afgeleid wordt uit Resultaattype\", function() {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(pm.response.json().archiefnominatie).to.be.equal(pm.variables.get(\"resultaattype_archiefnominatie\"));",
													"});",
													"",
													"pm.test(\"Resultaat met afleidingswijze hoofdzaak toevoegen aan Zaak zet correcte Zaak.archiefdatum\", function() {",
													"    var jsonData = pm.response.json();",
													"    ",
													"    if (pm.variables.get(\"resultaattype_archiefactietermijn\")) {",
													"        const brondatum = moment.utc(pm.variables.get(\"hoofdzaak_einddatum\"));",
													"        const archiefactietermijn = moment.duration(pm.variables.get(\"resultaattype_archiefactietermijn\"), 'years');",
													"        var calculated_archiefactiedatum = brondatum.add(archiefactietermijn);",
													"        ",
													"        pm.expect(jsonData.archiefactiedatum).to.be.equal(calculated_archiefactiedatum.format(\"YYYY-MM-DD\"));   ",
													"    }",
													"});",
													"",
													"postman.setNextRequest(\"Delete Resultaat from Zaak\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "869bc7bd-9394-4b5c-8476-217a4314851f",
												"exec": [
													"// TODO hoofdzaak opzoeken"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{zaak_zonder_archiefnominatie_url}}",
											"host": [
												"{{zaak_zonder_archiefnominatie_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Resultaat from Zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7197b242-cd4a-44d6-b322-136d37599b2f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{zaak_resultaat_url}}",
											"host": [
												"{{zaak_resultaat_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Zaak without archiefnominatie",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9c66db28-3c20-4603-9de7-b70c45fe8572",
												"exec": [
													"var index = pm.variables.get(\"resultaattype_index\");",
													"",
													"if (index == pm.variables.get(\"zaaktype_resultaattypen\").length - 1) {",
													"    postman.setNextRequest(\"Delete Hoofdzaak\");",
													"} else {",
													"    // Loop",
													"    pm.variables.set(\"resultaattype_index\", index + 1);",
													"    postman.setNextRequest(\"(WIP) Create Zaak without archiefnominatie\");",
													"    // postman.setNextRequest(\"tst\")",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{zaak_zonder_archiefnominatie_url}}",
											"host": [
												"{{zaak_zonder_archiefnominatie_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Hoofdzaak",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{hoofdzaak_url}}",
											"host": [
												"{{hoofdzaak_url}}"
											]
										}
									},
									"response": []
								}
							],
							"description": "**TODO:**\nde zaak die hier gemaakt wordt moet voor afleidingswijze: \n- hoofdzaak: een hoofdzaak met eindstatus hebben\n- zaakobject: minstens 1 zaakinformatieobject van Resultaattype.brondatumArchiefprocedure.objecttype,\n- gerelateerde_zaak: ???\n- ingangsdatum\\_besluit & vervaldatum\\_besluit: minstens 1 gerelateerd besluit\n\nzou moeten werken voor afgehandeld",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "26cd7d53-45b0-4997-b654-05337f1d4eec",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "8f5b02f0-b508-461c-af34-be787256d787",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "tearDown",
							"item": [
								{
									"name": "Delete Zaak",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "ec0d885c-e0bb-4267-bd44-d2e2e5cdf549",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "349ad68a-a9be-4caf-8e29-c8cd91108f1c",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"description": "Bevat alle business logic tests voor het Zaakregistratiecomponent",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7218a25f-3c6c-49e9-8f7c-3ba886c19111",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d79a0641-84d7-4dd6-8a34-549dcc774d17",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "drc",
					"item": [],
					"_postman_isSubFolder": true
				},
				{
					"name": "brc",
					"item": [],
					"_postman_isSubFolder": true
				},
				{
					"name": "ztc",
					"item": [],
					"_postman_isSubFolder": true
				}
			],
			"description": "Deze folder bevat de Postman test suite voor de ZGW API's, elke folder bevat tests voor de business logic zoals die gespecificeerd is in https://github.com/VNG-Realisatie/gemma-zaken/blob/master/docs/_content/standaard/standaard.md.\n\nDe variabelen voor de urls naar de individuele componenten zijn standaard gezet op http://ref.tst.vng.cloud/, maar kunnen lokaal veranderd worden naar bijv. localhost voor test doeleinden.\n\nDe namen van de folders (bijv. **zrc/zrc-001**) verwijzen naar de specificaties in de link hierboven, zo zijn de tests te koppelen aan de specificaties.\n\nAlle requests met een prefix zoals **(zrc-xxx)** (of een ander ZGW api) bevatten tests, alle andere requests zijn ter ondersteuning van die requests en bevatten dus geen tests.\n\nOm te zorgen dat de tests correct werken, moeten alle tests van een specifiek component (bijv. zrc) door de Postman Collection Runner uitgevoerd worden, tests individueel uitvoeren is dus niet mogelijk.\n\n- (WIP) houdt in dat de test nog niet correct geimplementeerd is.\n- (NI) houdt in dat de test faalt omdat de business logic nog niet geimplementeerd is in de desbetreffende API's.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "4e5907ed-d5f2-4e08-8be9-eef8649b6272",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "6e24a148-f731-4cce-886c-e0ba6df75296",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "mocks",
			"item": [
				{
					"name": "mock 404",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://postman-echo.com/404",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"404"
							]
						}
					},
					"response": [
						{
							"name": "mock 404",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://postman-echo.com/404",
									"protocol": "https",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"404"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 11 Apr 2019 07:43:11 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "set-cookie",
									"value": "sails.sid=s%3ASHwUa-bkOkJSlxkIMUftVSn1B7OSj7cm.ZDlSTE7zvQxw02Ln%2FAg4nAIhWxdjz8h4Gh0U9aF4rPs; Path=/; HttpOnly"
								},
								{
									"key": "Content-Length",
									"value": "0"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[]"
						}
					]
				},
				{
					"name": "mock 200",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://postman-echo.com/200",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"200"
							]
						}
					},
					"response": [
						{
							"name": "mock 200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://postman-echo.com/200",
									"protocol": "https",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"200"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 11 Apr 2019 07:51:21 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "set-cookie",
									"value": "sails.sid=s%3AHmD2XL9sgcf56iogzMqaHk_ubbsnVkoY.VuLs6wpZNk5L4bEZOG1fyhY4GCW75Yo8OvkQhT%2BgPM0; Path=/; HttpOnly"
								},
								{
									"key": "Content-Length",
									"value": "0"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "mock Zaaktype",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://postman-echo.com/zaaktype",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"zaaktype"
							]
						}
					},
					"response": [
						{
							"name": "mock Zaaktype",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://postman-echo.com/zaaktype",
									"protocol": "https",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"zaaktype"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 11 Apr 2019 07:55:27 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "Content-Length",
									"value": "0"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"url\": \"https://ref.tst.vng.cloud/ztc/api/v1/catalogussen/28487d3f-6a1b-489c-b03d-c75ac6693e72/zaaktypen/ede2fd28-32d2-46c9-8cde-b44bb055d3bc\",\n    \"identificatie\": 40,\n    \"omschrijving\": \"Aanvraag huwelijk behandelen\",\n    \"omschrijvingGeneriek\": \"\",\n    \"vertrouwelijkheidaanduiding\": \"intern\",\n    \"doel\": \"-\",\n    \"aanleiding\": \"-\",\n    \"toelichting\": \"\",\n    \"indicatieInternOfExtern\": \"Intern\",\n    \"handelingInitiator\": \"Indienen\",\n    \"onderwerp\": \"Huwelijk\",\n    \"handelingBehandelaar\": \"Behandelen\",\n    \"doorlooptijd\": \"P5D\",\n    \"servicenorm\": null,\n    \"opschortingEnAanhoudingMogelijk\": false,\n    \"verlengingMogelijk\": false,\n    \"verlengingstermijn\": null,\n    \"trefwoorden\": [],\n    \"publicatieIndicatie\": false,\n    \"publicatietekst\": \"\",\n    \"verantwoordingsrelatie\": [],\n    \"productenOfDiensten\": [\n        \"https://pki.utrecht.nl/Loket/product/298304036ec988f0633d839dde5b588f\"\n    ],\n    \"selectielijstProcestype\": \"https://ref.tst.vng.cloud/referentielijsten/api/v1/procestypen/39a1711c-f94b-4282-8ac3-7c545d8ecb04\",\n    \"referentieproces\": {\n        \"naam\": \"Huwelijk\",\n        \"link\": \"\"\n    },\n    \"catalogus\": \"https://ref.tst.vng.cloud/ztc/api/v1/catalogussen/28487d3f-6a1b-489c-b03d-c75ac6693e72\",\n    \"statustypen\": [\n        \"https://ref.tst.vng.cloud/ztc/api/v1/catalogussen/28487d3f-6a1b-489c-b03d-c75ac6693e72/zaaktypen/ede2fd28-32d2-46c9-8cde-b44bb055d3bc/statustypen/c48bc388-1701-44fc-bfd8-7d56279da4de\",\n        \"https://ref.tst.vng.cloud/ztc/api/v1/catalogussen/28487d3f-6a1b-489c-b03d-c75ac6693e72/zaaktypen/ede2fd28-32d2-46c9-8cde-b44bb055d3bc/statustypen/6f4b2dc8-24d6-4c69-8a42-37edec543188\",\n        \"https://ref.tst.vng.cloud/ztc/api/v1/catalogussen/28487d3f-6a1b-489c-b03d-c75ac6693e72/zaaktypen/ede2fd28-32d2-46c9-8cde-b44bb055d3bc/statustypen/75577f8c-cecb-44af-b78c-93f1d88dcbf1\"\n    ],\n    \"resultaattypen\": [\n        \"https://ref.tst.vng.cloud/ztc/api/v1/resultaattypen/9bd507ec-a151-488b-8a8a-702a0518e734\"\n    ],\n    \"eigenschappen\": [\n        \"https://ref.tst.vng.cloud/ztc/api/v1/catalogussen/28487d3f-6a1b-489c-b03d-c75ac6693e72/zaaktypen/ede2fd28-32d2-46c9-8cde-b44bb055d3bc/eigenschappen/55fbccb9-040c-4c0c-a0f0-e4045d9f2cb5\",\n        \"https://ref.tst.vng.cloud/ztc/api/v1/catalogussen/28487d3f-6a1b-489c-b03d-c75ac6693e72/zaaktypen/ede2fd28-32d2-46c9-8cde-b44bb055d3bc/eigenschappen/5354fdcf-4d73-496a-9d19-53bc22c63342\",\n        \"https://ref.tst.vng.cloud/ztc/api/v1/catalogussen/28487d3f-6a1b-489c-b03d-c75ac6693e72/zaaktypen/ede2fd28-32d2-46c9-8cde-b44bb055d3bc/eigenschappen/9d477e92-5c80-49f1-b0b8-fce6ae30f5ac\"\n    ],\n    \"informatieobjecttypen\": [\n        \"https://ref.tst.vng.cloud/ztc/api/v1/catalogussen/28487d3f-6a1b-489c-b03d-c75ac6693e72/informatieobjecttypen/1f86f196-4004-4371-868d-252f5676a092\"\n    ],\n    \"roltypen\": [\n        \"https://ref.tst.vng.cloud/ztc/api/v1/catalogussen/28487d3f-6a1b-489c-b03d-c75ac6693e72/zaaktypen/ede2fd28-32d2-46c9-8cde-b44bb055d3bc/roltypen/a550f938-1f23-4e88-a372-1d9e7ec238d0\"\n    ],\n    \"besluittypen\": [],\n    \"gerelateerdeZaaktypen\": []\n}"
						}
					]
				},
				{
					"name": "mock Zaak",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://postman-echo.com/zaak",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"zaak"
							]
						}
					},
					"response": [
						{
							"name": "mock Zaak",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://postman-echo.com/zaak",
									"protocol": "https",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"zaak"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 11 Apr 2019 08:12:23 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "set-cookie",
									"value": "sails.sid=s%3A1bi68Z50dy5lV4i1DzG_fSE3WmCN10Jo.%2BgBzfDpmNSTxL1rjkG05vCZsnO8aFijpOkS0mZJH9O8; Path=/; HttpOnly"
								},
								{
									"key": "Content-Length",
									"value": "0"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"url\": \"https://ref.tst.vng.cloud/zrc/api/v1/zaken/8bb42fd7-b8bb-4aea-b29b-e600e22fb93f\",\n    \"identificatie\": \"test identificatie 1\",\n    \"bronorganisatie\": \"000000000\",\n    \"omschrijving\": \"string\",\n    \"toelichting\": \"string\",\n    \"zaaktype\": \"https://ref.tst.vng.cloud/ztc/api/v1/catalogussen/28487d3f-6a1b-489c-b03d-c75ac6693e72/zaaktypen/ede2fd28-32d2-46c9-8cde-b44bb055d3bc\",\n    \"registratiedatum\": \"2019-04-09\",\n    \"verantwoordelijkeOrganisatie\": \"000000000\",\n    \"startdatum\": \"2019-04-09\",\n    \"einddatum\": null,\n    \"einddatumGepland\": \"2019-04-09\",\n    \"uiterlijkeEinddatumAfdoening\": \"2019-04-09\",\n    \"publicatiedatum\": \"2019-04-09\",\n    \"communicatiekanaal\": \"https://ref.tst.vng.cloud/referentielijsten/api/v1/communicatiekanalen/2b757868-45c2-42ca-b637-b63ddc87beb4\",\n    \"productenOfDiensten\": [],\n    \"vertrouwelijkheidaanduiding\": \"openbaar\",\n    \"betalingsindicatie\": \"nvt\",\n    \"betalingsindicatieWeergave\": \"Er is geen sprake van te betalen, met de zaak gemoeide, kosten.\",\n    \"laatsteBetaaldatum\": null,\n    \"zaakgeometrie\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n            53,\n            5\n        ]\n    },\n    \"verlenging\": {\n        \"reden\": \"\",\n        \"duur\": null\n    },\n    \"opschorting\": {\n        \"indicatie\": true,\n        \"reden\": \"string\"\n    },\n    \"selectielijstklasse\": \"http://example.com\",\n    \"hoofdzaak\": null,\n    \"deelzaken\": [],\n    \"relevanteAndereZaken\": [\n        \"http://example.com\"\n    ],\n    \"status\": null,\n    \"kenmerken\": [],\n    \"archiefnominatie\": \"blijvend_bewaren\",\n    \"archiefstatus\": \"nog_te_archiveren\",\n    \"archiefactiedatum\": \"2019-04-09\",\n    \"resultaat\": null\n}"
						}
					]
				},
				{
					"name": "mock Communicatiekanaal",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://postman-echo.com/communicatiekanaal",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"communicatiekanaal"
							]
						}
					},
					"response": [
						{
							"name": "mock Communicatiekanaal",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://postman-echo.com/communicatiekanaal",
									"protocol": "https",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"communicatiekanaal"
									]
								}
							},
							"status": "Accepted",
							"code": 200,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": "{\n    \"url\": \"http://example.com\",\n    \"naam\": \"string\",\n    \"omschrijving\": \"string\"\n}"
						}
					]
				}
			],
			"description": "Deze folder bevat mocks die het implementeren van de tests makkelijker maken.\n\nTODO: zit nu op gratis Postman, moet upgraden voor unlimited mock requests",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "740dc188-fe57-40c2-8ac4-abae222bf364",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "d4cac2a0-e237-4a6b-8964-02a244495aee",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Regression tests",
			"item": [
				{
					"name": "setup",
					"item": [
						{
							"name": "Retrieve Zaaktype",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "017d57e0-038d-4621-be41-11e103f859ac",
										"exec": [
											"pm.variables.set(\"zaaktype_url\", pm.response.json()[0].zaaktypen[0]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ztc_url}}/catalogussen",
									"host": [
										"{{ztc_url}}"
									],
									"path": [
										"catalogussen"
									]
								},
								"description": "Haalt een Zaaktype op uit het ZTC."
							},
							"response": []
						},
						{
							"name": "Retrieve EnkelvoudigInformatieObjecten",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "265f65b0-37e3-418b-bc59-d7cef6c08e1d",
										"exec": [
											"var informatieobjecten = pm.response.json();",
											"pm.variables.set(\"informatieobject_url\", informatieobjecten[0].url);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
									"host": [
										"{{drc_url}}"
									],
									"path": [
										"enkelvoudiginformatieobjecten"
									]
								},
								"description": "Haalt twee EnkelvoudigInformatieObjecten op uit het DRC."
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Issue #891 & #909 (NI)",
					"item": [
						{
							"name": "Create Zaak",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e70d8568-c1e8-460b-a55e-7a8f0bfa5a91",
										"exec": [
											"pm.variables.set(\"created_zaak_url\", pm.response.json().url);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept-Crs",
										"value": "EPSG:4326",
										"type": "text"
									},
									{
										"key": "Content-Crs",
										"value": "EPSG:4326",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"bronorganisatie\": \"000000000\",\n    \"omschrijving\": \"string\",\n    \"toelichting\": \"string\",\n    \"registratiedatum\": \"2019-04-09\",\n    \"verantwoordelijkeOrganisatie\": \"000000000\",\n    \"zaaktype\": \"{{zaaktype_url}}\",\n    \"startdatum\": \"2019-04-09\",\n    \"einddatumGepland\": \"2019-04-09\",\n    \"uiterlijkeEinddatumAfdoening\": \"2019-04-09\",\n    \"publicatiedatum\": \"2019-04-09\",\n\t\"vertrouwelijkheidaanduiding\": \"openbaar\",\n\t\"betalingsindicatie\": \"geheel\",\n\t\"laatsteBetaalDatum\": \"2019-01-01\",\n\t\"zaakgeometrie\": \n\t{\n\t    \"type\": \"Point\",\n\t    \"coordinates\": [53, 5]\n\t},\n\t\"opschorting\": \n\t{\n\t    \"indicatie\": true,\n\t    \"reden\": \"string\"\n\t},\n\t\"selectielijstklasse\": \"http://example.com\",\n\t\"relevanteAndereZaken\": \n\t[\n\n    \"http://example.com\"\n\n],\n    \"archiefnominatie\": \"blijvend_bewaren\",\n    \"archiefstatus\": \"nog_te_archiveren\"\n}"
								},
								"url": {
									"raw": "{{zrc_url}}/zaken",
									"host": [
										"{{zrc_url}}"
									],
									"path": [
										"zaken"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create ObjectInformatieObject relation",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "195f10c8-826a-4979-9009-e8723e14f6ac",
										"exec": [
											"// maak zaak",
											"// var data = {",
											"//     \"bronorganisatie\": \"000000000\",",
											"//     \"omschrijving\": \"string2\",",
											"//     \"toelichting\": \"string\",",
											"//     \"zaaktype\": pm.variables.get(\"existing_zaaktype\"),",
											"//     \"registratiedatum\": \"2019-04-09\",",
											"//     \"verantwoordelijkeOrganisatie\": \"000000000\",",
											"//     \"startdatum\": \"2019-04-09\",",
											"//     \"einddatumGepland\": \"2019-04-09\",",
											"//     \"uiterlijkeEinddatumAfdoening\": \"2019-04-09\",",
											"//     \"publicatiedatum\": \"2019-04-09\",",
											"// \t\"vertrouwelijkheidaanduiding\": \"openbaar\",",
											"// \t\"betalingsindicatie\": \"nvt\",",
											"// \t\"zaakgeometrie\": ",
											"// \t{",
											"// \t    \"type\": \"Point\",",
											"// \t    \"coordinates\": [53, 5]",
											"// \t},",
											"// \t\"opschorting\": ",
											"// \t{",
											"// \t    \"indicatie\": true,",
											"// \t    \"reden\": \"string\"",
											"// \t},",
											"// \t\"selectielijstklasse\": \"http://example.com\",",
											"// \t\"relevanteAndereZaken\": ",
											"// \t[",
											"",
											"//     \"http://example.com\"",
											"",
											"// ],",
											"//     \"archiefnominatie\": \"blijvend_bewaren\",",
											"//     \"archiefstatus\": \"nog_te_archiveren\",",
											"//     \"archiefactiedatum\": \"2019-04-09\",",
											"",
											"// };",
											"",
											"// // Create a Zaak",
											"// pm.sendRequest({",
											"//         url: pm.variables.get(\"zrc_url\") + \"/zaken\",",
											"//         header: {",
											"//             \"Authorization\": pm.variables.get(\"token\"),",
											"//             \"Accept-Crs\": \"EPSG:4326\",",
											"//             \"Content-Crs\": \"EPSG:4326\",",
											"//             \"content-type\": \"application/json\"",
											"//         },",
											"//         body: {",
											"//             mode: \"raw\",",
											"//             raw: JSON.stringify(data)",
											"//         },",
											"//         method: \"POST\"",
											"//     }, function(err, res) {",
											"//     if(!err) {",
											"//         // Store its url, to reference it as a deelzaak again later and to delete it afterwards",
											"//         pm.variables.set(\"zaak_url\", res.json().url);",
											"//     }",
											"// });",
											"",
											"// Retrieve existing informatieobject",
											"// pm.sendRequest({",
											"//         url: pm.variables.get(\"drc_url\") + \"/enkelvoudiginformatieobjecten\",",
											"//         header: {",
											"//             \"Authorization\": pm.variables.get(\"token\")",
											"//         },",
											"//         method: \"GET\"",
											"//     }, function(err, res) {",
											"//     if(!err) {",
											"//         // Store the zaaktype as a variable",
											"//         pm.variables.set(\"informatieobject_url\", res.json()[0].url);",
											"//     }",
											"// });",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b7197941-da21-4190-98b0-90193e43325c",
										"exec": [
											"pm.test(\"ObjectInformatieObject creation results in 201\", function() {",
											"    pm.variables.set(\"objectinformatieobject_url\", pm.response.json().url);",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"informatieobject\": \"{{informatieobject_url}}\",\n    \"object\": \"{{created_zaak_url}}\",\n    \"objectType\": \"zaak\"\n}"
								},
								"url": {
									"raw": "{{drc_url}}/objectinformatieobjecten",
									"host": [
										"{{drc_url}}"
									],
									"path": [
										"objectinformatieobjecten"
									]
								}
							},
							"response": []
						},
						{
							"name": "(NI) Delete ObjectInformatieObject relation",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ee71f907-ca42-4258-ac9d-5e443246d7c3",
										"exec": [
											"pm.test(\"ObjectInformatieObject deletion results in 204\", function() {",
											"   pm.response.to.have.status(204); ",
											"    // TODO check of relatie uit zrc weg is",
											"});",
											"",
											"// Delete the created deelzaak which was used as hoofdzaak in the main request",
											"// pm.sendRequest({",
											"//     url: pm.variables.get(\"zaak_url\"),",
											"//     header: {",
											"//         \"Authorization\": pm.variables.get(\"token\"),",
											"//         \"Accept-Crs\": \"EPSG:4326\"",
											"//     },",
											"//     method: \"DELETE\"",
											"// });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{objectinformatieobject_url}}",
									"host": [
										"{{objectinformatieobject_url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "(NI) Validate informatieobject deletion ZRC",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4065591b-a931-4159-8bfe-6106463c0e42",
										"exec": [
											"pm.test(\"ObjectInformatieObject verwijdering cascade door naar ZRC\", function() {",
											"    pm.response.to.have.status(200);",
											"    console.log(pm.response.json())",
											"    pm.expect(pm.response.json().length).to.be.equal(0);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept-Crs",
										"type": "text",
										"value": "EPSG:4326"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{created_zaak_url}}/informatieobjecten",
									"host": [
										"{{created_zaak_url}}"
									],
									"path": [
										"informatieobjecten"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Zaak",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept-Crs",
										"value": "EPSG:4326",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{created_zaak_url}}",
									"host": [
										"{{created_zaak_url}}"
									]
								}
							},
							"response": []
						}
					],
					"description": "GitHub issues:\n- https://github.com/VNG-Realisatie/gemma-zaken/issues/891\n- https://github.com/VNG-Realisatie/gemma-zaken/issues/909",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "1bca3884-93ca-45dc-9ff9-06fcb8193ae0",
								"type": "text/javascript",
								"exec": [
									"// Retrieve existing zaaktype",
									"pm.sendRequest({",
									"        url: pm.variables.get(\"ztc_url\") + \"/catalogussen\",",
									"        header: {",
									"            \"Authorization\": pm.variables.get(\"token\")",
									"        },",
									"        method: \"GET\"",
									"    }, function(err, res) {",
									"    if(!err) {",
									"        // Store the zaaktype as a variable",
									"        pm.variables.set(\"existing_zaaktype\", res.json()[0].zaaktypen[0]);",
									"    }",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "aaaeecc7-00e1-4aa9-90e4-03454d62d80b",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				}
			],
			"description": "Deze folder bevat regression tests met referenties naar GitHub issues, om aan te tonen dat de desbetreffende issues ook daadwerkelijk verholpen zijn.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "858f09cd-dc19-44bb-9026-fc1615746586",
						"type": "text/javascript",
						"exec": [
							"pm.variables.set(\"token\", \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImNsaWVudF9pZGVudGlmaWVyIjoiZGVtbyJ9.eyJpc3MiOiJkZW1vIiwiaWF0IjoxNTUzNzcxMDI1LCJ6ZHMiOnsic2NvcGVzIjpbIm5vdGlmaWNhdGllcy5zY29wZXMuY29uc3VtZXJlbiIsIm5vdGlmaWNhdGllcy5zY29wZXMucHVibGljZXJlbiIsInNjb3Blcy5kb2N1bWVudGVuLnZlcndpamRlcmVuIiwiemRzLnNjb3Blcy5zdGF0dXNzZW4udG9ldm9lZ2VuIiwiemRzLnNjb3Blcy56YWFrdHlwZXMubGV6ZW4iLCJ6ZHMuc2NvcGVzLnpha2VuLmFhbm1ha2VuIiwiemRzLnNjb3Blcy56YWtlbi5iaWp3ZXJrZW4iLCJ6ZHMuc2NvcGVzLnpha2VuLmxlemVuIiwiemRzLnNjb3Blcy56YWtlbi52ZXJ3aWpkZXJlbiJdLCJ6YWFrdHlwZXMiOlsiKiJdfX0.C3J7svfhFjIj_vzMjEu_CF5WDJD6CD30BVhRUZTPIjE\");"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "cfe2d927-ec09-4c4b-8202-263d2ee2dbf8",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{jwt_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "157b223d-1b88-4113-bed1-2412eef72a61",
				"type": "text/javascript",
				"exec": [
					"// Construct the post request to retrieve the JWT token if needed",
					"// TODO set zaaktype claim and scopes",
					"// should only be executed once in runner",
					"// const tokenRequest = {",
					"//   url: 'https://ref.tst.vng.cloud/tokens/generate-jwt/',",
					"//   method: 'POST',",
					"//   header: {",
					"//       \"Content-Type\": \"multipart/form-data\",",
					"//       \"Referer\": \"https://ref.tst.vng.cloud/tokens/generate-jwt/\",",
					"//       \"X-CSRFToken\": pm.variables.get(\"csrftoken\"),",
					"//   },",
					"//   body: {",
					"//     mode: 'formdata',",
					"//     formdata: [",
					"//         {key: \"client_id\", value: \"demo-VLUoUFAO2M1z\", disabled: false, description: {content:\"\", type:\"text/plain\"}},",
					"//         {key: \"secret\", value: \"WLICM7iw8IPJKuGVGYEBFobEe2BGBldi\", disabled: false, description: {content:\"\", type:\"text/plain\"}},",
					"//         // FIXME",
					"//         // {key: \"scopes\", value: \"[0,1,2,3,4,5,6,7,8]\", disabled: false},",
					"//         // {key: \"zaaktypes\", value: \"[0,1,2,3,4,5,6,7,8]\", disabled: false}",
					"//     ]",
					"//   }",
					"// };",
					"",
					"// If the token does not exist in the environment variables, send the request to retrieve it",
					"// if (!pm.environment.get('token')) {",
					"//     console.log('Fetching token')",
					"//     pm.sendRequest(tokenRequest, function (err, res) {",
					"//         if (err === null) {",
					"//             const $ = cheerio.load(res.text());",
					"//             var token = $(\"span[class='jwt-formatter']\").text();",
					"//             pm.environment.set('token', token);",
					"//         }",
					"//     });",
					"// }",
					"",
					"// TOKEN VOOR ref tst",
					"// pm.variables.set(\"token\", \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImNsaWVudF9pZGVudGlmaWVyIjoiZGVtby1mQURrZlRlcWI4WFIifQ.eyJpc3MiOiJkZW1vLWZBRGtmVGVxYjhYUiIsImlhdCI6MTU1NDk5NDY1NCwiemRzIjp7InNjb3BlcyI6WyJub3RpZmljYXRpZXMuc2NvcGVzLmNvbnN1bWVyZW4iLCJub3RpZmljYXRpZXMuc2NvcGVzLnB1YmxpY2VyZW4iLCJzY29wZXMuZG9jdW1lbnRlbi52ZXJ3aWpkZXJlbiIsInpkcy5zY29wZXMuc3RhdHVzc2VuLnRvZXZvZWdlbiIsInpkcy5zY29wZXMuemFha3R5cGVzLmxlemVuIiwiemRzLnNjb3Blcy56YWtlbi5hYW5tYWtlbiIsInpkcy5zY29wZXMuemFrZW4uYmlqd2Vya2VuIiwiemRzLnNjb3Blcy56YWtlbi5sZXplbiIsInpkcy5zY29wZXMuemFrZW4udmVyd2lqZGVyZW4iXSwiemFha3R5cGVzIjpbImh0dHBzOi8vcmVmLnRzdC52bmcuY2xvdWQvenRjL2FwaS92MS9jYXRhbG9ndXNzZW4vOGZmYjExZjAtYzdjYy00ZTM1LThhNjQtYTA2MzlhZWI4ZjE4L3phYWt0eXBlbi9jMmY5NTJjYS0yOThlLTQ4OGMtYjFiZS1hODdmMTFiZDVmYTIiLCJodHRwczovL3JlZi50c3Qudm5nLmNsb3VkL3p0Yy9hcGkvdjEvY2F0YWxvZ3Vzc2VuLzhmZmIxMWYwLWM3Y2MtNGUzNS04YTY0LWEwNjM5YWViOGYxOC96YWFrdHlwZW4vMGMwMWQ3M2YtZGU2NS00MTU4LWJjMGUtM2YxNzhmNmYxY2JlIiwiaHR0cHM6Ly9yZWYudHN0LnZuZy5jbG91ZC96dGMvYXBpL3YxL2NhdGFsb2d1c3Nlbi9hZGRkMWYxMS1mMjBlLTQyM2MtYmE2MC1lNjdkNWU5NzQ4MjMvemFha3R5cGVuLzc2ZmVmZGZiLTM1MmMtNDU4NC04M2Y4LWFhODA2YTgwNTdiZSIsImh0dHBzOi8vcmVmLnRzdC52bmcuY2xvdWQvenRjL2FwaS92MS9jYXRhbG9ndXNzZW4vNjlhNzRlMDgtNzkxMS00ZGYxLTk0ZDAtZWU5YTNjZDA1NGFhL3phYWt0eXBlbi8wNTI2MTFhMy04MzIyLTRiZjktYWYzMi1mYjY5YWI4MzQwZWYiLCJodHRwczovL3JlZi50c3Qudm5nLmNsb3VkL3p0Yy9hcGkvdjEvY2F0YWxvZ3Vzc2VuLzY5YTc0ZTA4LTc5MTEtNGRmMS05NGQwLWVlOWEzY2QwNTRhYS96YWFrdHlwZW4vY2NiNmY1ODktMzU4NC00OTJhLWEzNjEtMTI4NDlhMjRiN2MxIiwiaHR0cHM6Ly9yZWYudHN0LnZuZy5jbG91ZC96dGMvYXBpL3YxL2NhdGFsb2d1c3Nlbi82OWE3NGUwOC03OTExLTRkZjEtOTRkMC1lZTlhM2NkMDU0YWEvemFha3R5cGVuLzQwMjg4YzI5LTNiMDItNDdlOC1iMmFiLTVlN2EwY2FhNDJiMCIsImh0dHBzOi8vcmVmLnRzdC52bmcuY2xvdWQvenRjL2FwaS92MS9jYXRhbG9ndXNzZW4vZjdhZmQxNTYtYzhmNS00NjY2LWI4YjUtMjhhNGE5YjVkZmM3L3phYWt0eXBlbi8wMTE5ZGQ0ZS03YmU5LTQ3N2UtYmNjZi03NTAyM2IxNDUzYzEiLCJodHRwczovL3JlZi50c3Qudm5nLmNsb3VkL3p0Yy9hcGkvdjEvY2F0YWxvZ3Vzc2VuLzI4NDg3ZDNmLTZhMWItNDg5Yy1iMDNkLWM3NWFjNjY5M2U3Mi96YWFrdHlwZW4vZWRlMmZkMjgtMzJkMi00NmM5LThjZGUtYjQ0YmIwNTVkM2JjIiwiaHR0cHM6Ly9yZWYudHN0LnZuZy5jbG91ZC96dGMvYXBpL3YxL2NhdGFsb2d1c3Nlbi8yODQ4N2QzZi02YTFiLTQ4OWMtYjAzZC1jNzVhYzY2OTNlNzIvemFha3R5cGVuLzNiNzRmYmViLTFmNDctNDdjMC05ZDM3LWUxNGIyNTc5MGM1ZSJdfX0.Q1xKeN03GPgUUc_44eCZpquUz51XOUWqnYXvaxpzFaY\")",
					"",
					"// token voor localhost",
					"// pm.environment.set(\"token\", \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImNsaWVudF9pZGVudGlmaWVyIjoiZGVtbyJ9.eyJpc3MiOiJkZW1vIiwiaWF0IjoxNTUzNzcxMDI1LCJ6ZHMiOnsic2NvcGVzIjpbIm5vdGlmaWNhdGllcy5zY29wZXMuY29uc3VtZXJlbiIsIm5vdGlmaWNhdGllcy5zY29wZXMucHVibGljZXJlbiIsInNjb3Blcy5kb2N1bWVudGVuLnZlcndpamRlcmVuIiwiemRzLnNjb3Blcy5zdGF0dXNzZW4udG9ldm9lZ2VuIiwiemRzLnNjb3Blcy56YWFrdHlwZXMubGV6ZW4iLCJ6ZHMuc2NvcGVzLnpha2VuLmFhbm1ha2VuIiwiemRzLnNjb3Blcy56YWtlbi5iaWp3ZXJrZW4iLCJ6ZHMuc2NvcGVzLnpha2VuLmxlemVuIiwiemRzLnNjb3Blcy56YWtlbi52ZXJ3aWpkZXJlbiJdLCJ6YWFrdHlwZXMiOlsiKiJdfX0.C3J7svfhFjIj_vzMjEu_CF5WDJD6CD30BVhRUZTPIjE\")",
					"",
					"// pm.environment.set(\"token_without_claims\", \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImNsaWVudF9pZGVudGlmaWVyIjoiZGVtby03SDhJbUdBYlA1aTYifQ.eyJpc3MiOiJkZW1vLTdIOEltR0FiUDVpNiIsImlhdCI6MTU1NTU4MDkwOCwiemRzIjp7InNjb3BlcyI6WyJub3RpZmljYXRpZXMuc2NvcGVzLmNvbnN1bWVyZW4iLCJub3RpZmljYXRpZXMuc2NvcGVzLnB1YmxpY2VyZW4iLCJzY29wZXMuZG9jdW1lbnRlbi52ZXJ3aWpkZXJlbiIsInpkcy5zY29wZXMuc3RhdHVzc2VuLnRvZXZvZWdlbiIsInpkcy5zY29wZXMuemFha3R5cGVzLmxlemVuIiwiemRzLnNjb3Blcy56YWtlbi5hYW5tYWtlbiIsInpkcy5zY29wZXMuemFrZW4uYmlqd2Vya2VuIiwiemRzLnNjb3Blcy56YWtlbi5nZWZvcmNlZXJkLWJpandlcmtlbiIsInpkcy5zY29wZXMuemFrZW4ubGV6ZW4iLCJ6ZHMuc2NvcGVzLnpha2VuLnZlcndpamRlcmVuIl0sInphYWt0eXBlcyI6W119fQ.ijhUdaWNsH_hvsvBPaLD_kg5w5grqSewFe802K_IuLA\")"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "54e05292-2e5b-4bc5-b79f-ee708665c991",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}