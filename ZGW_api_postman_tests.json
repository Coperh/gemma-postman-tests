{
	"info": {
		"_postman_id": "0ebfbce3-5633-4436-8755-df19e0e1807e",
		"name": "ZGW api tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "standaard.md",
			"item": [
				{
					"name": "zrc",
					"item": [
						{
							"name": "setUp",
							"item": [
								{
									"name": "Retrieve Zaaktype and Besluittype from catalogus",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "017d57e0-038d-4621-be41-11e103f859ac",
												"exec": [
													"pm.variables.set(\"zaaktype_url\", pm.response.json()[0].zaaktypen[0]);",
													"pm.variables.set(\"besluittype_url\", pm.response.json()[0].besluittypen[0]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ztc_url}}/catalogussen",
											"host": [
												"{{ztc_url}}"
											],
											"path": [
												"catalogussen"
											]
										},
										"description": "Haalt een Zaaktype op uit het ZTC."
									},
									"response": []
								},
								{
									"name": "Retrieve Zaaktype information",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "ab4cebe2-5f2f-4343-9f25-42fed058ad4c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "3c58c28b-0bdd-461e-9332-086d1db0ccb9",
												"exec": [
													"var res = pm.response.json();",
													"pm.variables.set(\"zaaktype_vertrouwelijkheid\", pm.response.json().vertrouwelijkheidaanduiding);",
													"pm.variables.set(\"zaaktype_productenOfDiensten\", res.productenOfDiensten);",
													"pm.variables.set(\"zaaktype_resultaattypen\", res.resultaattypen);",
													"pm.variables.set(\"zaaktype_eigenschap\", res.eigenschappen[0]);",
													"",
													"var statustypen = res.statustypen;",
													"pm.variables.set(\"eindstatustype\", statustypen[statustypen.length-1]);",
													"pm.variables.set(\"non_eindstatustype\", statustypen[0]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{zaaktype_url}}",
											"host": [
												"{{zaaktype_url}}"
											]
										},
										"description": "Haalt enkele gegevens op van het Zaaktype, die relevant zijn voor de tests."
									},
									"response": []
								},
								{
									"name": "Retrieve Zaaktypen for archiving",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a992f5be-2cb6-4177-bc66-19da1b6214f0",
												"exec": [
													"// var zaaktypen = pm.response.json()[0].zaaktypen;",
													"// pm.variables.set(\"zaaktype_afleidingswijze_afgehandeld_url\", zaaktypen[0]);",
													"// pm.variables.set(\"zaaktype_afleidingswijze_termijn_url\", zaaktypen[1]);",
													"",
													"pm.variables.set(\"archiving_zaaktypen\", pm.response.json()[0].zaaktypen);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ztc_url}}/catalogussen",
											"host": [
												"{{ztc_url}}"
											],
											"path": [
												"catalogussen"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "01e98b0e-0bea-40a1-8485-67695fb020b3",
												"exec": [
													"var zaak = pm.response.json();",
													"pm.variables.set(\"zaak_url\", zaak.url);",
													"pm.variables.set(\"zaak_id\", zaak.identificatie);",
													"pm.variables.set(\"zaak_bronorganisatie\", zaak.bronorganisatie);",
													"pm.variables.set(\"zaak_geometrie\", zaak.zaakgeometrie);",
													"pm.variables.set(\"zaak_body\", pm.request.body.raw);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bronorganisatie\": \"000000000\",\n    \"registratiedatum\": \"2019-04-09\",\n    \"verantwoordelijkeOrganisatie\": \"000000000\",\n    \"zaaktype\": \"{{zaaktype_url}}\",\n    \"startdatum\": \"2019-04-09\",\n    \"zaakgeometrie\": \n\t{\n\t    \"type\": \"Point\",\n\t    \"coordinates\": [53, 5]\n\t}\n}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										},
										"description": "Maakt een Zaak aan die gebruikt zal worden in de tests, deze zaak wordt na de tests weer verwijderd.\n\nDe body van deze Zaak zal ook als variabele opgeslagen worden en gebruikt worden (met kleine aanpassingen iedere keer) in de requests voor de validatie tests, om te voorkomen dat telkens hetzelfde body gekopieerd moet worden."
									},
									"response": []
								},
								{
									"name": "Retrieve EnkelvoudigInformatieObjecten",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "265f65b0-37e3-418b-bc59-d7cef6c08e1d",
												"exec": [
													"var informatieobjecten = pm.response.json();",
													"pm.variables.set(\"informatieobject_url\", informatieobjecten[0].url);",
													"pm.variables.set(\"informatieobject_gebruiksrecht_null_url\", informatieobjecten[1].url);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
											"host": [
												"{{drc_url}}"
											],
											"path": [
												"enkelvoudiginformatieobjecten"
											]
										},
										"description": "Haalt twee EnkelvoudigInformatieObjecten op uit het DRC."
									},
									"response": []
								}
							],
							"description": "Bevat requests die resources ophalen of aanmaken die gebruikt worden in de tests.\n\nOmdat het nog niet mogelijk is POST requests te doen op het ZTC, worder er enkele aannames gemaakt voor het slagen van deze requests:\n\n- In het ZTC bestaat 1 Catalogus met: \n\t- 1 Zaaktype waaraan minimaal 2 Statustypen gekoppeld zijn.\n\t\t- 1 Resultaattype dat relevant is voor dit Zaaktype.\n\t- 1 Informatieobjecttype\n- In het DRC bestaat minstens 2 EnkelvoudigInformatieObjecten, waarvan een met Indicatie gebruiksrecht `onbekend` en een met Indicatie gebruiksrecht `Ja` of `Nee`.\n\nOm bij het archiveringsproces (**zrc-013**) het afleiden van Zaak.archiefdatum voor alle mogelijke afleidingswijzen te testen, dienen er 9 Resultaattypes te zijn (ieder met een andere afleidingswijze en archiefactietermijn gevuld), die relevant zijn voor het eerder genoemde Zaaktype.",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6299f822-4bd7-4175-bcb8-f448b7e89d97",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "c8fa9155-de46-4d2b-9523-02e0f1c5b349",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "zrc-001 (NI)",
							"item": [
								{
									"name": "(zrc-001a) Zaak aanmaken is mogelijk",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4db223ef-0730-4da5-81f4-2df1b0975f10",
												"exec": [
													"pm.test(\"Zaak aanmaken met valide gegevens geeft 201\", function() {",
													"    pm.response.to.have.status(201);",
													"    pm.variables.set(\"created_zaak_url\", pm.response.json().url);",
													"});",
													"",
													"if(!pm.variables.get(\"created_zaak_url\")) {",
													"    postman.setNextRequest(\"(zrc-001d) Zaak aanmaken met ongeldige zaaktype url is onmogelijk\");",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f8050155-7fe9-4dbe-bf6e-85474686a973",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{zaak_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-001b) Zaak bijwerken is mogelijk",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4db223ef-0730-4da5-81f4-2df1b0975f10",
												"exec": [
													"pm.test(\"Zaak bijwerken met valide gegevens geeft 200\", function() {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Zaak bijwerken past gegevens correct aan\", function() {",
													"    pm.expect(pm.response.json().omschrijving).to.be.equal(pm.variables.get(\"omschrijving\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f8050155-7fe9-4dbe-bf6e-85474686a973",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"pm.variables.set(\"omschrijving\", \"aangepaste omschrijving\");",
													"body.omschrijving = pm.variables.get(\"omschrijving\");",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-001c) Zaak deels bijwerken is mogelijk",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4db223ef-0730-4da5-81f4-2df1b0975f10",
												"exec": [
													"pm.test(\"Zaak deels bijwerken met valide zaaktype url geeft 200\", function() {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(pm.response.json().toelichting).to.be.equal(pm.variables.get(\"toelichting\"));",
													"});",
													"",
													"pm.test(\"Zaak deels bijwerken past gegevens correct aan\", function() {",
													"    pm.expect(pm.response.json().toelichting).to.be.equal(pm.variables.get(\"toelichting\"));",
													"});",
													"",
													"pm.variables.set(\"NEXT_REQUEST_NAME\", \"(zrc-001d) Zaak aanmaken met ongeldige zaaktype url is onmogelijk\");",
													"postman.setNextRequest(\"(COMMON) Delete Zaak\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f8050155-7fe9-4dbe-bf6e-85474686a973",
												"exec": [
													"pm.variables.set(\"toelichting\", \"aangepaste toelichting\")"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"toelichting\": \"{{toelichting}}\"\n}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-001d) Zaak aanmaken met ongeldige zaaktype url is onmogelijk",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "759de81f-fe06-48a8-9586-d495f3c77444",
												"exec": [
													"pm.test(\"Zaak aanmaken met zaaktype url die niet resulteert in 200 geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"zaaktype\");",
													"    pm.expect(error.code).to.be.equal(\"bad-url\");",
													"});",
													"",
													"// If the test failed and the Zaak was created, delete it",
													"if(pm.response.code == 201) {",
													"    pm.variables.set(\"created_zaak_url\", pm.response.json().url);",
													"    pm.variables.set(\"NEXT_REQUEST_NAME\", \"(zrc-001e) Zaak bijwerken met ongeldige zaaktype url is onmogelijk\");",
													"    postman.setNextRequest(\"(COMMON) Delete Zaak\");",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b79c193c-ee7a-46e6-979e-398d5edfa06c",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.zaaktype = pm.environment.get(\"mock_url\") + \"/404\";",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-001e) Zaak bijwerken met ongeldige zaaktype url is onmogelijk",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "759de81f-fe06-48a8-9586-d495f3c77444",
												"exec": [
													"pm.test(\"Zaak bijwerken met zaaktype url die niet resulteert in 200 geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"zaaktype\");",
													"    pm.expect(error.code).to.be.equal(\"bad-url\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b79c193c-ee7a-46e6-979e-398d5edfa06c",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.zaaktype = pm.environment.get(\"mock_url\") + \"/404\";",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-001f) Zaak deels bijwerken met ongeldige zaaktype url is onmogelijk",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "759de81f-fe06-48a8-9586-d495f3c77444",
												"exec": [
													"pm.test(\"Zaak deels bijwerken met zaaktype url die niet resulteert in 200 geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"zaaktype\");",
													"    pm.expect(error.code).to.be.equal(\"bad-url\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b79c193c-ee7a-46e6-979e-398d5edfa06c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"zaaktype\": \"{{mock_url}}/404\"\n}"
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-001g) Zaak aanmaken met zaaktype url die niet wijst naar Zaaktype is onmogelijk",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "759de81f-fe06-48a8-9586-d495f3c77444",
												"exec": [
													"pm.test.skip(\"Zaak aanmaken met zaaktype url die niet wijst naar Zaaktype-resource geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"zaaktype\");",
													"    pm.expect(error.code).to.be.equal(\"invalid-resource\");",
													"});",
													"",
													"// If the test failed and the Zaak was created, delete it",
													"if(pm.response.code == 201) {",
													"    pm.variables.set(\"created_zaak_url\", pm.response.json().url);",
													"    pm.variables.set(\"NEXT_REQUEST_NAME\", \"(zrc-001h) Zaak bijwerken met zaaktype url die niet wijst naar Zaaktype is onmogelijk\");",
													"    postman.setNextRequest(\"(COMMON) Delete Zaak\");",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b79c193c-ee7a-46e6-979e-398d5edfa06c",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.zaaktype = pm.environment.get(\"mock_url\") + \"/200\";",
													"body.zaaktype = pm.variables.get(\"zaak_url\");",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-001h) Zaak bijwerken met zaaktype url die niet wijst naar Zaaktype is onmogelijk",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "759de81f-fe06-48a8-9586-d495f3c77444",
												"exec": [
													"pm.test.skip(\"Zaak bijwerken met zaaktype url die niet wijst naar Zaaktype-resource geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"zaaktype\");",
													"    pm.expect(error.code).to.be.equal(\"invalid-resource\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b79c193c-ee7a-46e6-979e-398d5edfa06c",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.zaaktype = pm.environment.get(\"mock_url\") + \"/404\";",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-001i) Zaak deels bijwerken met zaaktype url die niet wijst naar Zaaktype is onmogelijk",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "759de81f-fe06-48a8-9586-d495f3c77444",
												"exec": [
													"pm.test.skip(\"Zaak deels bijwerken met zaaktype url die niet wijst naar Zaaktype-resource geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"zaaktype\");",
													"    pm.expect(error.code).to.be.equal(\"invalid-resource\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b79c193c-ee7a-46e6-979e-398d5edfa06c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"zaaktype\": \"{{mock_url}}/200\"\n}"
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "4bcb0e95-aa0f-4b40-864f-0ba32ceb6617",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b2b5d32b-6f4b-46e5-9722-efe1ce7bb603",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "zrc-002",
							"item": [
								{
									"name": "(zrc-002a) Uniciteit bronorganisatie en identificatie op de Zaak-resource (POST)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "27106eae-1a93-4e78-82d5-5b0d4719673f",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.identificatie = pm.variables.get(\"zaak_id\");",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "b34be4ba-bf87-4ded-8794-c3a0084faa5d",
												"exec": [
													"pm.test(\"Zaak aanmaken met bestaande combinatie bronorganisatie en identificatie geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"identificatie\");",
													"    pm.expect(error.code).to.be.equal(\"identificatie-niet-uniek\");",
													"});",
													"",
													"// If the test failed and the Zaak was created, delete it",
													"if(pm.response.code == 201) {",
													"    pm.variables.set(\"created_zaak_url\", pm.response.json().url);",
													"    pm.variables.set(\"NEXT_REQUEST_NAME\", \"Create Zaak with unique identificatie and bronorganisatie\");",
													"    postman.setNextRequest(\"(COMMON) Delete Zaak\");",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Zaak with unique identificatie and bronorganisatie",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "01e98b0e-0bea-40a1-8485-67695fb020b3",
												"exec": [
													"pm.variables.set(\"created_zaak_url\", pm.response.json().url);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{zaak_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										},
										"description": "Maakt een Zaak aan die gebruikt zal worden in de tests, deze zaak wordt na de tests weer verwijderd.\n\nDe body van deze Zaak zal ook als variabele opgeslagen worden en gebruikt worden (met kleine aanpassingen iedere keer) in de requests voor de validatie tests, om te voorkomen dat telkens hetzelfde body gekopieerd moet worden."
									},
									"response": []
								},
								{
									"name": "(zrc-002b) Uniciteit bronorganisatie en identificatie op de Zaak-resource (PUT)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "27106eae-1a93-4e78-82d5-5b0d4719673f",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.identificatie = pm.variables.get(\"zaak_id\");",
													"body.bronorganisatie = pm.variables.get(\"zaak_bronorganisatie\");",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "b34be4ba-bf87-4ded-8794-c3a0084faa5d",
												"exec": [
													"pm.test(\"Zaak aanmaken met bestaande combinatie bronorganisatie en identificatie geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"identificatie\");",
													"    pm.expect(error.code).to.be.equal(\"identificatie-niet-uniek\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-002c) Uniciteit bronorganisatie en identificatie op de Zaak-resource (PATCH)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "27106eae-1a93-4e78-82d5-5b0d4719673f",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.identificatie = pm.variables.get(\"zaak_id\");",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "b34be4ba-bf87-4ded-8794-c3a0084faa5d",
												"exec": [
													"pm.test(\"Zaak aanmaken met bestaande combinatie bronorganisatie en identificatie geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"identificatie\");",
													"    pm.expect(error.code).to.be.equal(\"identificatie-niet-uniek\");",
													"});",
													"",
													"pm.variables.set(\"NEXT_REQUEST_NAME\", \"Retrieve Zaken for bronorganisatie\");",
													"postman.setNextRequest(\"(COMMON) Delete Zaak\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"identificatie\": \"{{zaak_id}}\",\n\t\"bronorganisatie\": \"{{zaak_bronorganisatie}}\"\n}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Retrieve Zaken for bronorganisatie",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "13b55b82-8f68-47fc-82bd-3fdd1d7c0d82",
												"exec": [
													"pm.variables.set(\"zaken_for_bronorganisatie\", pm.response.json().results);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{zrc_url}}/zaken?bronorganisatie={{zaak_bronorganisatie}}",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											],
											"query": [
												{
													"key": "bronorganisatie",
													"value": "{{zaak_bronorganisatie}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-002d) Genereer unieke identificatie voor Zaak onder bronorganisatie",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "41140574-2623-42f7-88be-619ceaaa946a",
												"exec": [
													"pm.test(\"Zaak aanmaken zonder identificatie genereert unieke identificatie onder bronorganisatie\", function() {",
													"    var created_zaak_id = pm.response.json().identificatie",
													"    ",
													"    pm.variables.set(\"created_zaak_url\", pm.response.json().url);",
													"    ",
													"    pm.response.to.have.status(201);",
													"    ",
													"    // Compare the identificatie of the created Zaak with all the identificaties of other Zaken",
													"    // with the same bronorganisatie",
													"    var zaken_with_same_id = pm.variables.get(\"zaken_for_bronorganisatie\").filter(zaak => zaak.identificatie === created_zaak_id);",
													"    ",
													"    // Verify that the identificatie for the created Zaak isn't the same as any other",
													"    pm.expect(zaken_with_same_id.length).to.be.equal(0);",
													"});",
													"",
													"pm.variables.set(\"NEXT_REQUEST_NAME\", \"(zrc-003a) Valideren informatieobject op de ZaakInformatieObject-resource\");",
													"postman.setNextRequest(\"(COMMON) Delete Zaak\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "a34e2e85-35bc-4ff1-9e4c-00b9a8f1908f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{zaak_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "af5926ac-c8a4-418b-9692-ec4597986a42",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "3e69d346-d67c-40ed-a089-268403d5d202",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "zrc-003 (NI) (WIP)",
							"item": [
								{
									"name": "(zrc-003a) Valideren informatieobject op de ZaakInformatieObject-resource",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "738040bb-7752-4ebf-908a-c4b33ace22aa",
												"exec": [
													"pm.test(\"Ongeldige informatieobject-url toevoegen aan Zaak resulteert in 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var errors = pm.response.json()[\"invalid-params\"];",
													"    pm.expect(errors[0].name).to.be.equal(\"informatieobject\");",
													"    pm.expect(errors[0].code).to.be.equal(\"bad-url\");",
													"});",
													"",
													"// TODO",
													"// if(pm.response.code == 201) {",
													"//     pm.variables.set(\"created_zaak_url\", pm.response.json().url);",
													"//     pm.variables.set(\"NEXT_REQUEST_NAME\", \"(zrc-001e) Zaak bijwerken met ongeldige zaaktype url is onmogelijk\");",
													"//     postman.setNextRequest(\"(COMMON) Delete Zaak\");",
													"// }"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "771a52bd-37ba-4707-8624-aee0e2d71d5d",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"informatieobject\": \"{{mock_url}}/404\"\n}"
										},
										"url": {
											"raw": "{{zaak_url}}/informatieobjecten",
											"host": [
												"{{zaak_url}}"
											],
											"path": [
												"informatieobjecten"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create relation between Zaak and Informatieobject",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fa9f354c-0464-494e-b9fa-9635b21b2d43",
												"exec": [
													"pm.variables.set(\"objectinformatieobject_url\", pm.response.json().url);",
													"",
													"if(pm.response.code != 201) {",
													"    postman.setNextRequest(\"(zrc-003c) Valideren bestaan relatie informatieobject en zaak\");",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "5be8e943-844c-4786-9173-08a7e1dfb2c8",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"informatieobject\": \"{{informatieobject_url}}\",\n    \"object\": \"{{zaak_url}}\",\n    \"objectType\": \"zaak\"\n}"
										},
										"url": {
											"raw": "{{drc_url}}/objectinformatieobjecten",
											"host": [
												"{{drc_url}}"
											],
											"path": [
												"objectinformatieobjecten"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-003b) Geen bestaande combinatie zaak en informatieobject op de ZaakInformatieObject-resource",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "63fa26c3-95f9-4a41-99ed-89e2069dfc32",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "a796162b-88cc-4f93-a252-7d9c45e5718b",
												"exec": [
													"pm.test.skip(\"Toevoegen informatieobject aan Zaak waaraan dat object al gekoppeld is geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that error was thrown for correct reason",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"informatieobject\");",
													"    pm.expect(error.code).to.be.equal(\"unique\");",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"informatieobject\": \"{{informatieobject_url}}\"\n}"
										},
										"url": {
											"raw": "{{zaak_url}}/informatieobjecten",
											"host": [
												"{{zaak_url}}"
											],
											"path": [
												"informatieobjecten"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete relation between Zaak and Informatieobject",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "f6f87cec-0d1a-4acf-b2df-2e05417272c7",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{objectinformatieobject_url}}",
											"host": [
												"{{objectinformatieobject_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-003c) Valideren bestaan relatie informatieobject en zaak",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "6949f957-67f2-4a13-9e36-330bbf5e1b72",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "27152e99-88c1-4f71-b354-d43f8579b2fc",
												"exec": [
													"pm.test.skip(\"Toevoegen informatieobject aan Zaak zonder bestaande relatie in DRC geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var errors = pm.response.json()[\"invalid-params\"];",
													"    pm.expect(errors[0].name).to.be.equal(\"informatieobject\");",
													"    pm.expect(errors[0].code).to.be.equal(\"inconsistent-relation\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"informatieobject\": \"{{informatieobject_url}}\"\n}"
										},
										"url": {
											"raw": "{{zaak_url}}/informatieobjecten",
											"host": [
												"{{zaak_url}}"
											],
											"path": [
												"informatieobjecten"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "95616806-2a7a-48b1-b0f6-ffb607ce0357",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "db5e7ac2-5507-417e-a995-e9ada5f231f4",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "zrc-004",
							"item": [
								{
									"name": "(zrc-004a) Valideer zaaktypeclaims zaak_list",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "73450d28-96ee-475b-812b-9f1520ab28cc",
												"exec": [
													"pm.test(\"zaak_list retourneert geen Zaken met Zaaktypes buiten de Zaaktypes-claim van de gebruiker\", function() {",
													"    var jsonData = pm.response.json();",
													"    ",
													"    pm.response.to.have.status(200);",
													"",
													"    // If the Zaaktypes claim does not allow access to all possible Zaaktypes, verify that no zaken with zaaktypes that do not occur in the claim are shown",
													"    if(!pm.variables.get(\"zaaktypes_claim\").includes('*')) {",
													"        var zaaktypes_not_in_claim = jsonData.results.filter(zaak => !pm.variables.get(\"zaaktypes_claim\").includes(zaak.zaaktype));",
													"        pm.expect(zaaktypes_not_in_claim.length).to.be.equal(0);",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "26c89154-2968-447b-96e6-34a35648f4c2",
												"exec": [
													"// Decode the JWT token to retrieve the list of Zaaktype claims associated with it",
													"var parts = pm.environment.get(\"jwt_token\").split('.');",
													"pm.variables.set(\"zaaktypes_claim\", JSON.parse(atob(parts[1])).zds.zaaktypes);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Authorization",
												"value": "{{jwt_token_without_claims}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-004b) Valideer zaaktypeclaims zaak__zoek",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "73450d28-96ee-475b-812b-9f1520ab28cc",
												"exec": [
													"pm.test(\"zaak_zoek retourneert geen Zaken met Zaaktypes buiten de Zaaktypes-claim van de gebruiker\", function() {",
													"    var jsonData = pm.response.json();",
													"",
													"    pm.response.to.have.status(200);",
													"",
													"    // If the Zaaktypes claim does not allow access to all possible Zaaktypes, verify that no zaken with zaaktypes that do not occur in the claim are shown",
													"    if(!pm.variables.get(\"zaaktypes_claim\").includes('*')) {",
													"        var zaaktypes_not_in_claim = jsonData.results.filter(zaak => !pm.variables.get(\"zaaktypes_claim\").includes(zaak.zaaktype));",
													"        pm.expect(zaaktypes_not_in_claim.length).to.be.equal(0);",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "26c89154-2968-447b-96e6-34a35648f4c2",
												"exec": [
													"// Set Geo search parameters",
													"pm.variables.set(\"request_body\", JSON.stringify({",
													"    \"zaakgeometrie\": {",
													"        \"within\": pm.variables.get(\"zaak_geometrie\")",
													"    }",
													"}));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{jwt_token_without_claims}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken/_zoek",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken",
												"_zoek"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-004c) Valideren detail-operaties op Zaaktypes niet in claim is verboden",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "79604413-f76f-47ba-935f-5c159962f352",
												"exec": [
													"pm.test(\"Detail operatie op Zaak met Zaaktype niet in zaaktypeclaim geeft 403\", function() {",
													"    pm.response.to.have.status(403);",
													"    pm.expect(pm.response.json().code).to.be.equal(\"not_authenticated\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "d77a2347-d599-47bf-98e5-376178013a34",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "{{jwt_token_without_claims}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "f2ebf15b-f3f1-400c-95ec-aa13f7e46bef",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "38d06013-8ebb-4b0f-a8aa-bccfd6af74a0",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "zrc-005 (NI)",
							"item": [
								{
									"name": "Create Zaak to close",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4c8f1f41-e776-423f-9123-4939889bec5e",
												"exec": [
													"pm.variables.set(\"created_zaak_url\", pm.response.json().url)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{zaak_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create relation between Zaak and Informatieobject with gebruiksrecht not null",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fa9f354c-0464-494e-b9fa-9635b21b2d43",
												"exec": [
													"pm.variables.set(\"objectinformatieobject_url\", pm.response.json().url);",
													"",
													"if(pm.response.code != 201) {",
													"    pm.variables.set(\"NEXT_REQUEST_NAME\", \"(zrc-006a) Valideer expliciet gedefinieerde vertrouwelijkheidaanduiding\");",
													"    postman.setNextRequest(\"(COMMON) Delete Zaak\");   ",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "5be8e943-844c-4786-9173-08a7e1dfb2c8",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"informatieobject\": \"{{informatieobject_url}}\",\n    \"object\": \"{{created_zaak_url}}\",\n    \"objectType\": \"zaak\"\n}"
										},
										"url": {
											"raw": "{{drc_url}}/objectinformatieobjecten",
											"host": [
												"{{drc_url}}"
											],
											"path": [
												"objectinformatieobjecten"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add Resultaat to Zaak",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "7f3ed8a2-7bc9-4c77-85b1-561482065971",
												"exec": [
													"pm.variables.set(\"resultaattype\", pm.variables.get(\"zaaktype_resultaattypen\")[0]);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "1c33254a-fe4a-4192-9108-4b6925265a80",
												"exec": [
													"pm.variables.set(\"zaak_resultaat_url\", pm.response.json().url);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"resultaatType\": \"{{resultaattype}}\"\n}"
										},
										"url": {
											"raw": "{{zrc_url}}/resultaten",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"resultaten"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add Eindstatus to Zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7226fe56-bdcc-42d9-ad16-07852570b778",
												"exec": [
													"pm.variables.set(\"eindstatus_datumStatusGezet\", pm.response.json().datumStatusGezet);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "820be47c-e617-4e5e-aa70-5e4ab1440b54",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"statusType\": \"{{eindstatustype}}\",\n\t\"datumStatusGezet\": \"2018-04-20T13:37:00\"\n}"
										},
										"url": {
											"raw": "{{zrc_url}}/statussen",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"statussen"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-005a) Zaak.einddatum volgt logisch uit eindstatus",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7226fe56-bdcc-42d9-ad16-07852570b778",
												"exec": [
													"pm.test(\"Toevoegen eindstatus aan Zaak laat Zaak.einddatum afleiden uit status.datumStatusGezet\", function(){",
													"    pm.response.to.have.status(200);",
													"    ",
													"    // TODO error handling voor split",
													"    var einddatum = pm.response.json().einddatum;",
													"    pm.expect(pm.variables.get(\"eindstatus_datumStatusGezet\").split(\"T\")[0]).to.be.equal(einddatum);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "820be47c-e617-4e5e-aa70-5e4ab1440b54",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Retrieve related Informatieobjecten",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d96bd2c6-5ee1-420c-b88d-022a0a69671c",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"var related_informatieobjecten_urls = [];",
													"for(i=0; i<jsonData.length; i++) {",
													"    related_informatieobjecten_urls.add(jsonData[i].informatieobject);",
													"}",
													"",
													"pm.variables.set(\"related_informatieobjecten_urls\", related_informatieobjecten_urls);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{created_zaak_url}}/informatieobjecten",
											"host": [
												"{{created_zaak_url}}"
											],
											"path": [
												"informatieobjecten"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-005b) Informatieobject.indicatieGebruikersrecht niet null bij afsluiten zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7226fe56-bdcc-42d9-ad16-07852570b778",
												"exec": [
													"pm.test(\"Afsluiten Zaak betekent Informatieobject.indicatieGebruiksrecht gezet voor alle gerelateerde objecten\", function(){",
													"    pm.response.to.have.status(200);",
													"    pm.expect(pm.response.json().indicatieGebruiksrecht).to.not.be.equal(null);",
													"});",
													"",
													"var index = pm.variables.get(\"current_related_informatieobject_index\");",
													"",
													"if (index == pm.variables.get(\"related_informatieobjecten_urls\").length - 1) {",
													"    postman.setNextRequest(\"(zrc-005c) Afgesloten zaak bijwerken is niet toegestaan\");",
													"} else {",
													"    // Loop",
													"    pm.variables.set(\"current_related_informatieobject_index\", index + 1);",
													"    postman.setNextRequest(\"(zrc-005b) Informatieobject.indicatieGebruikersrecht niet null bij afsluiten zaak\");",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "820be47c-e617-4e5e-aa70-5e4ab1440b54",
												"exec": [
													"if(!pm.variables.get(\"current_related_informatieobject_index\")) {",
													"    pm.variables.set(\"current_related_informatieobject_index\", 0);",
													"}",
													"",
													"console.log(pm.variables.get(\"related_informatieobjecten_urls\"), pm.variables.get(\"current_related_informatieobject_index\"))",
													"pm.variables.set(\"current_related_informatieobject_url\", pm.variables.get(\"related_informatieobjecten_urls\")[pm.variables.get(\"current_related_informatieobject_index\")]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{current_related_informatieobject_url}}",
											"host": [
												"{{current_related_informatieobject_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-005c) Afgesloten zaak bijwerken is niet toegestaan",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8dce713a-a7ea-40be-a751-6d56c1a91480",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.omschrijving = \"aanpassing\"",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "9e3dd206-12d7-43e7-ac77-8e9122340e37",
												"exec": [
													"pm.test(\"Afgesloten Zaak bijwerken geeft 403\", function() {",
													"    pm.response.to.have.status(403);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Authorization",
												"value": "{{jwt_token_no_geforceerd_bijwerken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-005d) Afgesloten zaak deels bijwerken is niet toegestaan",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8dce713a-a7ea-40be-a751-6d56c1a91480",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "9e3dd206-12d7-43e7-ac77-8e9122340e37",
												"exec": [
													"pm.test(\"Afgesloten Zaak bijwerken geeft 403\", function() {",
													"    pm.response.to.have.status(403);",
													"});",
													"",
													"pm.variables.set(\"NEXT_REQUEST_NAME\", \"Create relation between Zaak and Informatieobject with gebruiksrecht null\");",
													"postman.setNextRequest(\"(COMMON) Delete relation between Zaak and Informatieobject\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Authorization",
												"value": "{{jwt_token_no_geforceerd_bijwerken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"omschrijving\": \"aangepast\"\n}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create relation between Zaak and Informatieobject with gebruiksrecht null",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fa9f354c-0464-494e-b9fa-9635b21b2d43",
												"exec": [
													"pm.variables.set(\"objectinformatieobject_url\", pm.response.json().url)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "5be8e943-844c-4786-9173-08a7e1dfb2c8",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"informatieobject\": \"{{informatieobject_gebruiksrecht_null_url}}\",\n    \"object\": \"{{created_zaak_url}}\",\n    \"objectType\": \"zaak\"\n}"
										},
										"url": {
											"raw": "{{drc_url}}/objectinformatieobjecten",
											"host": [
												"{{drc_url}}"
											],
											"path": [
												"objectinformatieobjecten"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-005e) Eindstatus toevoegen aan Zaak met Informatieobject.indicatieGebruiksrecht null",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7226fe56-bdcc-42d9-ad16-07852570b778",
												"exec": [
													"pm.test(\"Eindstatus toevoegen aan Zaak met gerelateerd Informatieobject met indicatieGebruiksrecht null geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    var error = pm.response.json()['invalid-params'][0];",
													"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
													"    pm.expect(error.code).to.be.equal(\"indicatiegebruiksrecht-unset\");",
													"});",
													"",
													"pm.variables.set(\"NEXT_REQUEST_NAME\", \"Add non-Eindstatus to Zaak\");",
													"postman.setNextRequest(\"(COMMON) Delete relation between Zaak and Informatieobject\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "820be47c-e617-4e5e-aa70-5e4ab1440b54",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"statusType\": \"{{eindstatustype}}\",\n\t\"datumStatusGezet\": \"2018-04-20T13:37:00\"\n}"
										},
										"url": {
											"raw": "{{zrc_url}}/statussen",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"statussen"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add non-Eindstatus to Zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7226fe56-bdcc-42d9-ad16-07852570b778",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "820be47c-e617-4e5e-aa70-5e4ab1440b54",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"statusType\": \"{{non_eindstatustype}}\",\n\t\"datumStatusGezet\": \"2018-04-20T13:37:00\"\n}"
										},
										"url": {
											"raw": "{{zrc_url}}/statussen",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"statussen"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-005f) Zaak.einddatum leeg als geen eindstatus gezet",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7226fe56-bdcc-42d9-ad16-07852570b778",
												"exec": [
													"pm.test(\"Toevoegen status die geen eindstatus is aan Zaak betekent Zaak.einddatum leeg\", function(){",
													"    pm.response.to.have.status(200);",
													"    ",
													"    var einddatum = pm.response.json().einddatum;",
													"    pm.expect(einddatum).to.be.equal(null);",
													"});",
													"",
													"pm.variables.set(\"NEXT_REQUEST_NAME\", \"(zrc-006a) Valideer expliciet gedefinieerde vertrouwelijkheidaanduiding\");",
													"// pm.variables.set(\"NEXT_REQUEST_NAME\", \"Delete Zaak\");",
													"postman.setNextRequest(\"(COMMON) Delete Zaak\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "820be47c-e617-4e5e-aa70-5e4ab1440b54",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c67feddd-8a38-42e1-8e45-f489eebb36ae",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a37470a4-94cc-4d93-93bb-c6e21fcea659",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "zrc-006",
							"item": [
								{
									"name": "(zrc-006a) Valideer expliciet gedefinieerde vertrouwelijkheidaanduiding",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4d176dd2-b596-4624-bfe8-5ce952a103f5",
												"exec": [
													"pm.test(\"Expliciete vertrouwelijkheidaanduiding bij aanmaken Zaak moet toegekend worden aan Zaak\", function() {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.vertrouwelijkheidaanduiding).to.be.equal(pm.variables.get(\"expliciete_vertrouwelijkheid\"));",
													"    ",
													"    pm.variables.set(\"created_zaak_url\", jsonData.url);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f0914778-27b4-4cb3-8af8-7fce47ecc6f6",
												"exec": [
													"pm.variables.set(\"expliciete_vertrouwelijkheid\", \"zeer geheim\");",
													"",
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.vertrouwelijkheidaanduiding = pm.variables.get(\"expliciete_vertrouwelijkheid\");",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-006b) Valideer expliciet gedefinieerde vertrouwelijkheidaanduiding (PUT)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4d176dd2-b596-4624-bfe8-5ce952a103f5",
												"exec": [
													"pm.test(\"Expliciete vertrouwelijkheidaanduiding bij bijwerken Zaak moet toegekend worden aan Zaak\", function() {",
													"    pm.expect(pm.response.json().vertrouwelijkheidaanduiding).to.be.equal(pm.variables.get(\"expliciete_vertrouwelijkheid\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f0914778-27b4-4cb3-8af8-7fce47ecc6f6",
												"exec": [
													"pm.variables.set(\"expliciete_vertrouwelijkheid\", \"intern\");",
													"",
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.vertrouwelijkheidaanduiding = pm.variables.get(\"expliciete_vertrouwelijkheid\");",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-006c) Valideer expliciet gedefinieerde vertrouwelijkheidaanduiding (PATCH)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4d176dd2-b596-4624-bfe8-5ce952a103f5",
												"exec": [
													"pm.test(\"Expliciete vertrouwelijkheidaanduiding bij deels bijwerken Zaak moet toegekend worden aan Zaak\", function() {",
													"    pm.expect(pm.response.json().vertrouwelijkheidaanduiding).to.be.equal(pm.variables.get(\"expliciete_vertrouwelijkheid\"));",
													"});",
													"",
													"",
													"if(pm.variables.get(\"created_zaak_url\")) {",
													"    pm.variables.set(\"NEXT_REQUEST_NAME\", \"(zrc-006d) Valideer vertrouwelijkheidaanduiding afgeleid uit Zaaktype\");",
													"    postman.setNextRequest(\"(COMMON) Delete Zaak\");",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f0914778-27b4-4cb3-8af8-7fce47ecc6f6",
												"exec": [
													"pm.variables.set(\"expliciete_vertrouwelijkheid\", \"vertrouwelijk\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"vertrouwelijkheidaanduiding\": \"{{expliciete_vertrouwelijkheid}}\"\n}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-006d) Valideer vertrouwelijkheidaanduiding afgeleid uit Zaaktype",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "1cc107ce-c1c0-41b7-89f3-3a26436a05ae",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = pm.variables.get(\"zaak_body\");",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "6087f02c-3a69-40f3-aca8-9e894767813c",
												"exec": [
													"pm.test(\"Vertrouwelijkheidaanduiding bij aanmaken Zaak afgeleid uit Zaaktype indien niet meegegeven\", function() {",
													"    pm.expect(pm.response.json().vertrouwelijkheidaanduiding).to.be.equal(pm.variables.get(\"zaaktype_vertrouwelijkheid\"));",
													"    pm.variables.set(\"created_zaak_url\", pm.response.json().url);",
													"});",
													"",
													"if(pm.variables.get(\"created_zaak_url\")) {",
													"    pm.variables.set(\"NEXT_REQUEST_NAME\", \"(zrc-007a) Valideren communicatiekanaal url bij aanmaken Zaak\");",
													"    postman.setNextRequest(\"(COMMON) Delete Zaak\");",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e5600f83-fc3f-4922-951c-e90331cc30ac",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "f5c9649f-4e65-48e8-93c9-2f87efdf322f",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "zrc-007 (NI)",
							"item": [
								{
									"name": "(zrc-007a) Valideren communicatiekanaal url bij aanmaken Zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0bc39030-ab3a-4dd0-9996-792966daf183",
												"exec": [
													"pm.test.skip(\"Zaak aanmaken met ongeldige communicatiekanaal url geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"communicatiekanaal\");",
													"    pm.expect(error.code).to.be.equal(\"bad-url\");",
													"});",
													"",
													"// If the test failed and the Zaak was created, delete it",
													"if(pm.response.code == 201) {",
													"    pm.variables.set(\"created_zaak_url\", pm.response.json().url);",
													"    pm.variables.set(\"NEXT_REQUEST_NAME\", \"(zrc-007b) Valideren communicatiekanaal url bij bijwerken Zaak\");",
													"    postman.setNextRequest(\"(COMMON) Delete Zaak\");",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f4f5279f-6c17-4d32-8022-6758173ec716",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.communicatiekanaal = pm.environment.get(\"mock_url\") + \"/404\"",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-007b) Valideren communicatiekanaal url bij bijwerken Zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0bc39030-ab3a-4dd0-9996-792966daf183",
												"exec": [
													"pm.test.skip(\"Zaak bijwerken met ongeldige communicatiekanaal url geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"communicatiekanaal\");",
													"    pm.expect(error.code).to.be.equal(\"bad-url\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f4f5279f-6c17-4d32-8022-6758173ec716",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.communicatiekanaal = pm.environment.get(\"mock_url\") + \"/404\"",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-007c) Valideren communicatiekanaal url bij deels bijwerken Zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0bc39030-ab3a-4dd0-9996-792966daf183",
												"exec": [
													"pm.test.skip(\"Zaak deels bijwerken met ongeldige communicatiekanaal url geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"communicatiekanaal\");",
													"    pm.expect(error.code).to.be.equal(\"bad-url\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f4f5279f-6c17-4d32-8022-6758173ec716",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"communicatiekanaal\": \"{{mock_url}}/404\"\n}"
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-007d) Valideren communicatiekanaal-resource bij aanmaken Zaak",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "c8fea466-da3a-4ed8-ac79-7b0cd10ac582",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.communicatiekanaal = pm.variables.get(\"zaak_url\");",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "b364538b-6bb5-4a95-af4b-bc86e9969068",
												"exec": [
													"pm.test.skip(\"Zaak aanmaken met communicatiekanaal url die niet wijst naar Communicatiekanaal-resource geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"communicatiekanaal\");",
													"    pm.expect(error.code).to.be.equal(\"invalid-resource\");",
													"});",
													"",
													"// If the test failed and the Zaak was created, delete it",
													"if(pm.response.code == 201) {",
													"    pm.variables.set(\"created_zaak_url\", pm.response.json().url);",
													"    pm.variables.set(\"NEXT_REQUEST_NAME\", \"(zrc-007e) Valideren communicatiekanaal url bij bijwerken Zaak\");",
													"    postman.setNextRequest(\"(COMMON) Delete Zaak\");",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-007e) Valideren communicatiekanaal url bij bijwerken Zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0bc39030-ab3a-4dd0-9996-792966daf183",
												"exec": [
													"pm.test.skip(\"Zaak bijwerken met communicatiekanaal url die niet wijst naar Communicatiekanaal-resource geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"communicatiekanaal\");",
													"    pm.expect(error.code).to.be.equal(\"bad-url\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f4f5279f-6c17-4d32-8022-6758173ec716",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.communicatiekanaal = pm.variables.get(\"zaak_url\");",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-007f) Valideren communicatiekanaal url bij deels bijwerken Zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0bc39030-ab3a-4dd0-9996-792966daf183",
												"exec": [
													"pm.test.skip(\"Zaak deels bijwerken met communicatiekanaal url die niet wijst naar Communicatiekanaal-resource geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"communicatiekanaal\");",
													"    pm.expect(error.code).to.be.equal(\"bad-url\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f4f5279f-6c17-4d32-8022-6758173ec716",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"communicatiekanaal\": \"{{zaak_url}}\"\n}"
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-007g) Zaak aanmaken met valide communicatiekanaal is mogelijk",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "c8fea466-da3a-4ed8-ac79-7b0cd10ac582",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.communicatiekanaal = \"https://ref.tst.vng.cloud/referentielijsten/api/v1/communicatiekanalen/2b757868-45c2-42ca-b637-b63ddc87beb4\";",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "b364538b-6bb5-4a95-af4b-bc86e9969068",
												"exec": [
													"pm.test(\"Zaak aanmaken met valide communicatiekanaal geeft 201\", function() {",
													"    pm.response.to.have.status(201);",
													"    pm.variables.set(\"created_zaak_url\", pm.response.json().url);",
													"});",
													"",
													"// If the test failed and the Zaak was created, delete it",
													"if(!pm.variables.get(\"created_zaak_url\")) {",
													"    pm.variables.set(\"NEXT_REQUEST_NAME\", \"(zrc-008a) Valideer urls relevanteAndereZaken\");",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-007h) Zaak bijwerken met valide communicatiekanaal is mogelijk",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "c8fea466-da3a-4ed8-ac79-7b0cd10ac582",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.communicatiekanaal = \"https://ref.tst.vng.cloud/referentielijsten/api/v1/communicatiekanalen/2b757868-45c2-42ca-b637-b63ddc87beb4\";",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "b364538b-6bb5-4a95-af4b-bc86e9969068",
												"exec": [
													"pm.test(\"Zaak bijwerken met valide communicatiekanaal geeft 200\", function() {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-007i) Zaak deels bijwerken met valide communicatiekanaal is mogelijk",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "c8fea466-da3a-4ed8-ac79-7b0cd10ac582",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "b364538b-6bb5-4a95-af4b-bc86e9969068",
												"exec": [
													"pm.test(\"Zaak deels bijwerken met valide communicatiekanaal geeft 200\", function() {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"if(pm.variables.get(\"created_zaak_url\")) {",
													"    pm.variables.set(\"NEXT_REQUEST_NAME\", \"(zrc-008a) Valideer urls relevanteAndereZaken\");",
													"    postman.setNextRequest(\"(COMMON) Delete Zaak\");   ",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"communicatiekanaal\": \"https://ref.tst.vng.cloud/referentielijsten/api/v1/communicatiekanalen/2b757868-45c2-42ca-b637-b63ddc87beb4\"\n}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c6c84b57-df0c-4cbd-afb8-e92614613b3f",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "9810274f-f1da-4b81-9212-86393c6c081c",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "zrc-008 (NI)",
							"item": [
								{
									"name": "(zrc-008a) Valideer urls relevanteAndereZaken",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "9cdfb036-7e3a-4692-8ff5-60b906d5bad0",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.relevanteAndereZaken = [pm.variables.get(\"mock_url\") + \"/404\"];",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "3b98d08c-0556-42d2-a815-fbd008eafbac",
												"exec": [
													"pm.test(\"Zaak aanmaken met ongeldige relevanteAndereZaken url geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"relevanteAndereZaken.0\");",
													"    pm.expect(error.code).to.be.equal(\"bad-url\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-008b) Valideer urls relevanteAndereZaken bij bijwerken Zaak",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "9cdfb036-7e3a-4692-8ff5-60b906d5bad0",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.relevanteAndereZaken = [pm.variables.get(\"mock_url\") + \"/404\"];",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "3b98d08c-0556-42d2-a815-fbd008eafbac",
												"exec": [
													"pm.test(\"Zaak bijwerken met ongeldige relevanteAndereZaken url geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"relevanteAndereZaken.0\");",
													"    pm.expect(error.code).to.be.equal(\"bad-url\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-008c) Valideer urls relevanteAndereZaken bij deels bijwerken Zaak",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "9cdfb036-7e3a-4692-8ff5-60b906d5bad0",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "3b98d08c-0556-42d2-a815-fbd008eafbac",
												"exec": [
													"pm.test(\"Zaak deels bijwerken met ongeldige relevanteAndereZaken url geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"relevanteAndereZaken.0\");",
													"    pm.expect(error.code).to.be.equal(\"bad-url\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"relevanteAndereZaken\": [\n\t\t\"{{mock_url}}/404\"\t\n\t]\n}"
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-008d) Zaak aanmaken met relevanteAndereZaken is mogelijk",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "9cdfb036-7e3a-4692-8ff5-60b906d5bad0",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.relevanteAndereZaken = [pm.variables.get(\"zaak_url\")];",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "3b98d08c-0556-42d2-a815-fbd008eafbac",
												"exec": [
													"pm.test.skip(\"Zaak aanmaken met geldige relevanteAndereZaken geeft 201\", function() {",
													"    pm.response.to.have.status(201);",
													"    pm.variables.set(\"created_zaak_url\", pm.response.json().url);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-008e) Zaak bijwerken met relevanteAndereZaken is mogelijk",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "2e67d5ff-9d5c-4135-949d-9310a4c3945e",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.relevanteAndereZaken = [pm.variables.get(\"zaak_url\")];",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "34ddadfb-4583-4c13-8b4d-eee18348ea69",
												"exec": [
													"pm.test.skip(\"Zaak bijwerken met geldige relevanteAndereZaken geeft 200\", function() {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-008f) Zaak deels bijwerken met relevanteAndereZaken is mogelijk",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a231e003-4106-4749-a717-62969c5fac96",
												"exec": [
													"pm.test.skip(\"Zaak deels bijwerken met geldige relevanteAndereZaken geeft 200\", function() {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"if(pm.variables.get(\"created_zaak_url\")) {",
													"    pm.variables.set(\"NEXT_REQUEST_NAME\", \"(zrc-009a) Valideren opschorting indien gedefinieerd\");",
													"    postman.setNextRequest(\"(COMMON) Delete Zaak\");   ",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"relevanteAndereZaken\": [\n\t\t\"{{zaak_url}}\"\n\t]\n}"
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "135cfef4-79cc-4e2e-abd1-811439e893f6",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "e31d0882-f1c5-4fe6-8360-ac7e1ea69a94",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "zrc-009 (WIP)",
							"item": [
								{
									"name": "(zrc-009a) Valideren opschorting indien gedefinieerd",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c3d8939f-9c16-49c6-a507-bfbd34abc9b6",
												"exec": [
													"pm.test(\"Zaak aanmaken met opschorting zonder indicatie en reden geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var errors = pm.response.json()[\"invalid-params\"];",
													"    pm.expect(errors[0].name).to.be.equal(\"opschorting.indicatie\");",
													"    pm.expect(errors[0].code).to.be.equal(\"required\");",
													"    ",
													"    pm.expect(errors[1].name).to.be.equal(\"opschorting.reden\");",
													"    pm.expect(errors[1].code).to.be.equal(\"required\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "8373d66a-0c08-4e2a-90ae-3fbad96dc51a",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.opschorting = {\"wrong_field\": \"test\"};",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-009b) Valideren opschorting indien gedefinieerd",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c3d8939f-9c16-49c6-a507-bfbd34abc9b6",
												"exec": [
													"pm.test(\"Zaak bijwerken met opschorting zonder indicatie en reden geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var errors = pm.response.json()[\"invalid-params\"];",
													"    pm.expect(errors[0].name).to.be.equal(\"opschorting.indicatie\");",
													"    pm.expect(errors[0].code).to.be.equal(\"required\");",
													"    ",
													"    pm.expect(errors[1].name).to.be.equal(\"opschorting.reden\");",
													"    pm.expect(errors[1].code).to.be.equal(\"required\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "8373d66a-0c08-4e2a-90ae-3fbad96dc51a",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.opschorting = {\"wrong_field\": \"test\"};",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-009c) Valideren opschorting indien gedefinieerd",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c3d8939f-9c16-49c6-a507-bfbd34abc9b6",
												"exec": [
													"pm.test.skip(\"Zaak deels bijwerken met opschorting zonder indicatie en reden geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var errors = pm.response.json()[\"invalid-params\"];",
													"    pm.expect(errors[0].name).to.be.equal(\"opschorting.indicatie\");",
													"    pm.expect(errors[0].code).to.be.equal(\"required\");",
													"    ",
													"    pm.expect(errors[1].name).to.be.equal(\"opschorting.reden\");",
													"    pm.expect(errors[1].code).to.be.equal(\"required\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "8373d66a-0c08-4e2a-90ae-3fbad96dc51a",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"opschorting\": {\n\t\t\"wrong_field\": \"test\"\n\t}\n}"
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-009d) Valideren verlenging indien gedefinieerd",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "82250c04-55c0-410a-b319-04edc0658119",
												"exec": [
													"pm.test(\"Zaak aanmaken met verlenging zonder reden en duur geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var errors = pm.response.json()[\"invalid-params\"];",
													"    pm.expect(errors[0].name).to.be.equal(\"verlenging.reden\");",
													"    pm.expect(errors[0].code).to.be.equal(\"required\");",
													"    ",
													"    pm.expect(errors[1].name).to.be.equal(\"verlenging.duur\");",
													"    pm.expect(errors[1].code).to.be.equal(\"required\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "448fbdcc-e7fa-4e1f-ade4-d32ea27093a1",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.verlenging = {\"wrong_field\": \"test\"};",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-009e) Valideren verlenging indien gedefinieerd",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "82250c04-55c0-410a-b319-04edc0658119",
												"exec": [
													"pm.test(\"Zaak bijwerken met verlenging zonder reden en duur geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var errors = pm.response.json()[\"invalid-params\"];",
													"    pm.expect(errors[0].name).to.be.equal(\"verlenging.reden\");",
													"    pm.expect(errors[0].code).to.be.equal(\"required\");",
													"    ",
													"    pm.expect(errors[1].name).to.be.equal(\"verlenging.duur\");",
													"    pm.expect(errors[1].code).to.be.equal(\"required\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "448fbdcc-e7fa-4e1f-ade4-d32ea27093a1",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.verlenging = {\"wrong_field\": \"test\"};",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-009f) Valideren verlenging indien gedefinieerd",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "82250c04-55c0-410a-b319-04edc0658119",
												"exec": [
													"pm.test.skip(\"Zaak deels bijwerken met verlenging zonder reden en duur geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var errors = pm.response.json()[\"invalid-params\"];",
													"    pm.expect(errors[0].name).to.be.equal(\"verlenging.reden\");",
													"    pm.expect(errors[0].code).to.be.equal(\"required\");",
													"    ",
													"    pm.expect(errors[1].name).to.be.equal(\"verlenging.duur\");",
													"    pm.expect(errors[1].code).to.be.equal(\"required\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "448fbdcc-e7fa-4e1f-ade4-d32ea27093a1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"verlenging\": {\n\t\t\"wrong_field\": \"test\"\n\t}\n}"
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-009g) Zaak aanmaken met opschorting null is mogelijk",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "6b902589-4913-4533-b2a0-c6baa9463680",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.opschorting = null;",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "5bf1eeaf-cc9e-4dee-88e8-c4f7c551a343",
												"exec": [
													"pm.test(\"Zaak aanmaken met opschorting null geeft 201\", function() {",
													"    pm.response.to.have.status(201);",
													"    pm.variables.set(\"created_zaak_url\", pm.response.json().url);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-009h) Zaak bijwerken met opschorting null is mogelijk",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "6b902589-4913-4533-b2a0-c6baa9463680",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.opschorting = null;",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "5bf1eeaf-cc9e-4dee-88e8-c4f7c551a343",
												"exec": [
													"pm.test(\"Zaak bijwerken met opschorting null geeft 200\", function() {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-009i) Zaak deels bijwerken met opschorting null is mogelijk",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "6b902589-4913-4533-b2a0-c6baa9463680",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "5bf1eeaf-cc9e-4dee-88e8-c4f7c551a343",
												"exec": [
													"pm.test(\"Zaak deels bijwerken met opschorting null geeft 200\", function() {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.variables.set(\"NEXT_REQUEST_NAME\", \"(zrc-009j) Zaak aanmaken met verlenging null is mogelijk\");",
													"postman.setNextRequest(\"(COMMON) Delete Zaak\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"opschorting\": null\n}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-009j) Zaak aanmaken met verlenging null is mogelijk",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "6b902589-4913-4533-b2a0-c6baa9463680",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.verlenging = null;",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "5bf1eeaf-cc9e-4dee-88e8-c4f7c551a343",
												"exec": [
													"pm.test(\"Zaak aanmaken met verlenging null geeft 201\", function() {",
													"    pm.response.to.have.status(201);",
													"    pm.variables.set(\"created_zaak_url\", pm.response.json().url);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-009k) Zaak bijwerken met verlenging null is mogelijk",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "6b902589-4913-4533-b2a0-c6baa9463680",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.verlenging = null;",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "5bf1eeaf-cc9e-4dee-88e8-c4f7c551a343",
												"exec": [
													"pm.test(\"Zaak bijwerken met verlenging null geeft 200\", function() {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-009l) Zaak deels bijwerken met verlenging null is mogelijk",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "6b902589-4913-4533-b2a0-c6baa9463680",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "5bf1eeaf-cc9e-4dee-88e8-c4f7c551a343",
												"exec": [
													"pm.test(\"Zaak deels bijwerken met verlenging null geeft 200\", function() {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.variables.set(\"NEXT_REQUEST_NAME\", \"(zrc-010a) Valideren hoofdzaak op de Zaak-resource\");",
													"postman.setNextRequest(\"(COMMON) Delete Zaak\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"verlenging\": null\n}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "72f0a70d-74ad-4166-8ba5-a37b0f3d0687",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "e370fa77-b348-4d3d-baf3-fb4b6c9dc87e",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "zrc-010",
							"item": [
								{
									"name": "(zrc-010a) Valideren hoofdzaak op de Zaak-resource",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ff41ef3-4e25-4c46-8bc6-a8475d587d62",
												"exec": [
													"pm.test(\"Zaak aanmaken met hoofdzaak url die niet wijst naar Zaak-resource geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var errors = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(errors.name).to.be.equal(\"hoofdzaak\");",
													"    pm.expect(errors.code).to.be.equal(\"no_match\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "0c5d309a-3da4-4cdf-a069-929f3ac9683e",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.hoofdzaak = pm.environment.get(\"mock_url\") + \"/200\";",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Deelzaak",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "6c47b7ed-840c-4638-bb93-98b9eb7ccf75",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.hoofdzaak = pm.variables.get(\"zaak_url\");",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "d0a2b3b2-27dd-42c0-989f-e84cfe6fa757",
												"exec": [
													"pm.variables.set(\"created_zaak_url\", pm.response.json().url);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-010b) Valideren opgegeven hoofdzaak is geen deelzaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ff41ef3-4e25-4c46-8bc6-a8475d587d62",
												"exec": [
													"pm.test(\"Zaak aanmaken met hoofdzaak url die wijst naar een deelzaak geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var errors = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(errors.name).to.be.equal(\"hoofdzaak\");",
													"    pm.expect(errors.code).to.be.equal(\"deelzaak-als-hoofdzaak\");",
													"});",
													"",
													"pm.variables.set(\"NEXT_REQUEST_NAME\", \"(zrc-010c) Valideren deelzaak mag geen deelzaak van zichzelf zijn\");",
													"postman.setNextRequest(\"(COMMON) Delete Zaak\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "fdfe3406-a2cb-4f1d-b5c7-e2b7c8cbb623",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.hoofdzaak = pm.variables.get(\"created_zaak_url\");",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-010c) Valideren deelzaak mag geen deelzaak van zichzelf zijn",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8ab5f43f-49f0-4cf8-bfb9-ea7d000888a0",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.hoofdzaak = pm.variables.get(\"zaak_url\");",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "68db0f5f-9890-425c-98f4-6dbc975540ec",
												"exec": [
													"pm.test(\"Zaak bijwerken met hoofdzaak url die wijst naar de zaak zelf geeft 400\", function(){",
													"    pm.response.to.have.status(400);",
													"   ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var errors = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(errors.name).to.be.equal(\"hoofdzaak\");",
													"    pm.expect(errors.code).to.be.equal(\"self-forbidden\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-010d) Valideren deelzaak mag geen deelzaak van zichzelf zijn",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "cf1ecb8d-7061-4189-aeef-23b05ed13b65",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ad55fa05-0d56-4d6b-9fc5-9f0fe3ff8e83",
												"exec": [
													"pm.test(\"Zaak deels bijwerken met hoofdzaak url die wijst naar de zaak zelf geeft 400\", function(){",
													"    pm.response.to.have.status(400);",
													"   ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var errors = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(errors.name).to.be.equal(\"hoofdzaak\");",
													"    pm.expect(errors.code).to.be.equal(\"self-forbidden\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"hoofdzaak\": \"{{zaak_url}}\"\n}"
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-010e) Zaak aanmaken met valide hoofdzaak is mogelijk",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ff41ef3-4e25-4c46-8bc6-a8475d587d62",
												"exec": [
													"pm.test(\"Zaak aanmaken met valide hoofdzaak geeft 201\", function() {",
													"    pm.response.to.have.status(201);",
													"    pm.variables.set(\"created_zaak_url\", pm.response.json().url);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "0c5d309a-3da4-4cdf-a069-929f3ac9683e",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.hoofdzaak = pm.variables.get(\"zaak_url\");",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-010f) Zaak bijwerken met valide hoofdzaak is mogelijk",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ff41ef3-4e25-4c46-8bc6-a8475d587d62",
												"exec": [
													"pm.test(\"Zaak bijwerken met valide hoofdzaak geeft 200\", function() {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "0c5d309a-3da4-4cdf-a069-929f3ac9683e",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.hoofdzaak = pm.variables.get(\"zaak_url\");",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-010g) Zaak deels bijwerken met valide hoofdzaak is mogelijk",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2ff41ef3-4e25-4c46-8bc6-a8475d587d62",
												"exec": [
													"pm.test(\"Zaak deels bijwerken met valide hoofdzaak geeft 200\", function() {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.variables.set(\"NEXT_REQUEST_NAME\", \"(zrc-011a) Valideer op geen betalingswaarde en wel laatste betaaldatum\");",
													"postman.setNextRequest(\"(COMMON) Delete Zaak\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "0c5d309a-3da4-4cdf-a069-929f3ac9683e",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.hoofdzaak = pm.variables.get(\"zaak_url\");",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "zrc-011 (WIP) (NI)",
							"item": [
								{
									"name": "(zrc-011a) Valideer op geen betalingswaarde en wel laatste betaaldatum",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f945f6a5-77ac-48dd-b9ba-a9b0a673471f",
												"exec": [
													"pm.test.skip(\"Zaak aanmaken met betalingsindicatie nvt en laatsteBetaalDatum niet null geeft 400\", function(){",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"// If the test failed and the Zaak was created, delete it",
													"if(pm.response.code == 201) {",
													"    pm.variables.set(\"created_zaak_url\", pm.response.json().url);",
													"    pm.variables.set(\"NEXT_REQUEST_NAME\", \"(zrc-011b) Zaak bijwerken betalingsindicatie naar nvt moet laatsteBetaalDatum op null zetten\");",
													"    postman.setNextRequest(\"(COMMON) Delete Zaak\");",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "1f3b91e3-2ac0-4458-a935-c0fb88e7a871",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.betalingsindicatie = \"nvt\";",
													"body.laatsteBetaalDatum = \"2019-3-29\";",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "{{token}}"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-011b) Zaak bijwerken betalingsindicatie naar nvt moet laatsteBetaalDatum op null zetten",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f945f6a5-77ac-48dd-b9ba-a9b0a673471f",
												"exec": [
													"pm.test(\"Zaak bijwerken met betalingsindicatie nvt verandert laatsteBetaalDatum naar null\", function(){",
													"    var jsonBody = pm.response.json();",
													"    pm.expect(jsonBody.betalingsindicatie).to.be.equal(\"nvt\");",
													"    pm.expect(jsonBody.laatsteBetaaldatum).to.be.equal(null);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "1f3b91e3-2ac0-4458-a935-c0fb88e7a871",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.betalingsindicatie = \"nvt\";",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "{{token}}"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-011c) Zaak deels bijwerken betalingsindicatie naar nvt moet laatsteBetaalDatum op null zetten",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f945f6a5-77ac-48dd-b9ba-a9b0a673471f",
												"exec": [
													"pm.test(\"Zaak deels bijwerken met betalingsindicatie nvt verandert laatsteBetaalDatum naar null\", function(){",
													"    var jsonBody = pm.response.json();",
													"    pm.expect(jsonBody.betalingsindicatie).to.be.equal(\"nvt\");",
													"    pm.expect(jsonBody.laatsteBetaaldatum).to.be.equal(null);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "1f3b91e3-2ac0-4458-a935-c0fb88e7a871",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "{{token}}"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"betalingsindicatie\": \"nvt\"\n}"
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "ff8f4b99-ac17-4e7e-90e8-d81b79303808",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "96f99c67-e2fc-4eda-aad4-75da4dbed8c2",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "zrc-012",
							"item": [
								{
									"name": "(zrc-012a) Zaak productenOfDiensten validatie met Zaaktype productenOfDiensten",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "72e0fbd3-a35c-4c06-a0aa-fc9782016f71",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.productenOfDiensten = [pm.variables.get(\"zaak_url\")];",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f6878a9b-f297-4932-95b8-e31a86d7848b",
												"exec": [
													"pm.test(\"Zaak aanmaken met productenOfDiensten niet in Zaaktype gedefinieerd geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"productenOfDiensten\");",
													"    pm.expect(error.code).to.be.equal(\"invalid-products-services\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-012b) Zaak productenOfDiensten validatie met Zaaktype productenOfDiensten",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "72e0fbd3-a35c-4c06-a0aa-fc9782016f71",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.productenOfDiensten = [pm.variables.get(\"zaak_url\")];",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f6878a9b-f297-4932-95b8-e31a86d7848b",
												"exec": [
													"pm.test(\"Zaak bijwerken met productenOfDiensten niet in Zaaktype gedefinieerd geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"productenOfDiensten\");",
													"    pm.expect(error.code).to.be.equal(\"invalid-products-services\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-012c) Zaak productenOfDiensten validatie met Zaaktype productenOfDiensten",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "72e0fbd3-a35c-4c06-a0aa-fc9782016f71",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.productenOfDiensten = [pm.variables.get(\"zaak_url\")];",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f6878a9b-f297-4932-95b8-e31a86d7848b",
												"exec": [
													"pm.test(\"Zaak deels bijwerken met productenOfDiensten niet in Zaaktype gedefinieerd geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"productenOfDiensten\");",
													"    pm.expect(error.code).to.be.equal(\"invalid-products-services\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"productenOfDiensten\": [\n\t\t\"{{zaak_url}}\"\t\n\t]\n}"
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-012d) Zaak aanmaken met valide productenOfDiensten is mogelijk",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "72e0fbd3-a35c-4c06-a0aa-fc9782016f71",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.productenOfDiensten = [pm.variables.get(\"zaaktype_productenOfDiensten\")[0]];",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f6878a9b-f297-4932-95b8-e31a86d7848b",
												"exec": [
													"pm.test(\"Zaak aanmaken met valide productenOfDiensten geeft 201\", function() {",
													"    pm.response.to.have.status(201);",
													"    pm.variables.set(\"created_zaak_url\", pm.response.json().url);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-012e) Zaak bijwerken met valide productenOfDiensten is mogelijk",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "72e0fbd3-a35c-4c06-a0aa-fc9782016f71",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.productenOfDiensten = [pm.variables.get(\"zaaktype_productenOfDiensten\")[0]];",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f6878a9b-f297-4932-95b8-e31a86d7848b",
												"exec": [
													"pm.test(\"Zaak bijwerken met valide productenOfDiensten geeft 200\", function() {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-012f) Zaak deels bijwerken met valide productenOfDiensten is mogelijk",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "72e0fbd3-a35c-4c06-a0aa-fc9782016f71",
												"exec": [
													"pm.variables.set(\"request_body\", JSON.stringify({",
													"    \"productenOfDiensten\": [",
													"        pm.variables.get(\"zaaktype_productenOfDiensten\")[0]",
													"    ]",
													"}));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f6878a9b-f297-4932-95b8-e31a86d7848b",
												"exec": [
													"pm.test(\"Zaak deels bijwerken met valide productenOfDiensten geeft 200\", function() {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.variables.set(\"NEXT_REQUEST_NAME\", \"Create Hoofdzaak\");",
													"postman.setNextRequest(\"(COMMON) Delete Zaak\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "329b00c3-7d84-4831-8896-bea87e9fa7c5",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "75a20abb-2a01-4d3e-a784-3c234b96caff",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "zrc-013 (WIP) (NI)",
							"item": [
								{
									"name": "Create Hoofdzaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4c8f1f41-e776-423f-9123-4939889bec5e",
												"exec": [
													"pm.variables.set(\"hoofdzaak_url\", pm.response.json().url);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{zaak_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add Resultaat to Hoofdzaak",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "7f3ed8a2-7bc9-4c77-85b1-561482065971",
												"exec": [
													"pm.variables.set(\"resultaattype\", pm.variables.get(\"zaaktype_resultaattypen\")[0]);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "1c33254a-fe4a-4192-9108-4b6925265a80",
												"exec": [
													"pm.variables.set(\"hoofdzaak_resultaat_url\", pm.response.json().url);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"zaak\": \"{{hoofdzaak_url}}\",\n\t\"resultaatType\": \"{{resultaattype}}\"\n}"
										},
										"url": {
											"raw": "{{zrc_url}}/resultaten",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"resultaten"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add Eindstatus to Hoofdzaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7226fe56-bdcc-42d9-ad16-07852570b778",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "820be47c-e617-4e5e-aa70-5e4ab1440b54",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"zaak\": \"{{hoofdzaak_url}}\",\n\t\"statusType\": \"{{eindstatustype}}\",\n\t\"datumStatusGezet\": \"2018-04-18T13:37:00\"\n}"
										},
										"url": {
											"raw": "{{zrc_url}}/statussen",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"statussen"
											]
										}
									},
									"response": []
								},
								{
									"name": "Retrieve Hoofdzaak einddatum",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4f6ace2e-d1d5-4510-b352-7aae04427240",
												"exec": [
													"pm.variables.set(\"hoofdzaak_einddatum\", pm.response.json().einddatum);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{hoofdzaak_url}}",
											"host": [
												"{{hoofdzaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Zaak without archiefnominatie",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "7f3ed8a2-7bc9-4c77-85b1-561482065971",
												"exec": [
													"if (!pm.variables.get(\"zaaktype_index\")) {",
													"    pm.variables.set(\"zaaktype_index\", 0);",
													"}",
													"",
													"pm.variables.set(\"current_zaaktype\", pm.variables.get(\"archiving_zaaktypen\")[pm.variables.get(\"zaaktype_index\")]);",
													"",
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"delete body.archiefnominatie;",
													"body.hoofdzaak = pm.variables.get(\"hoofdzaak_url\");",
													"body.zaaktype = pm.variables.get(\"current_zaaktype\");",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));",
													"",
													"// TODO deze zaak moet voor afleidingswijze: ",
													"// zaakobject: minstens 1 zaakinformatieobject van Resultaattype.brondatumArchiefprocedure.objecttype,",
													"// gerelateerde_zaak: ?",
													"// ingangsdatum_besluit & vervaldatum_besluit: minstens 1 gerelateerd besluit"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "46ada267-ffcf-477a-a3d6-02addbf603a2",
												"exec": [
													"pm.variables.set(\"zaak_zonder_archiefnominatie_url\", pm.response.json().url);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add Besluit to Zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "23bc2897-511c-416d-b48d-c8aa46adba28",
												"exec": [
													"pm.variables.set(\"besluit_url\", pm.response.json().url);",
													"pm.variables.set(\"besluit_ingangsdatum\", pm.response.json().ingangsdatum);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"verantwoordelijkeOrganisatie\": \"{{zaak_bronorganisatie}}\",\n\t\"besluittype\": \"{{besluittype_url}}\",\n\t\"zaak\": \"{{zaak_zonder_archiefnominatie_url}}\",\n\t\"datum\": \"2019-04-25\",\n\t\"ingangsdatum\": \"2019-04-26\",\n\t\"vervaldatum\": \"2019-04-28\"\n}"
										},
										"url": {
											"raw": "{{brc_url}}/besluiten",
											"host": [
												"{{brc_url}}"
											],
											"path": [
												"besluiten"
											]
										}
									},
									"response": []
								},
								{
									"name": "Retrieve Resultaattype for current Zaaktype",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "efc7477c-72f1-4f81-9c97-8be750824a6c",
												"exec": [
													"pm.variables.set(\"current_resultaattype\", pm.response.json().resultaattypen[0]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{current_zaaktype}}",
											"host": [
												"{{current_zaaktype}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add Resultaat to Zaak",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "7f3ed8a2-7bc9-4c77-85b1-561482065971",
												"exec": [
													"// if (!pm.variables.get(\"resultaattype_index\")) {",
													"//     pm.variables.set(\"resultaattype_index\", 0);",
													"// }",
													"",
													"// pm.variables.set(\"current_resultaattype\", pm.variables.get(\"zaaktype_resultaattypen\")[pm.variables.get(\"resultaattype_index\")])"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "1c33254a-fe4a-4192-9108-4b6925265a80",
												"exec": [
													"pm.variables.set(\"zaak_resultaat_url\", pm.response.json().url);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"zaak\": \"{{zaak_zonder_archiefnominatie_url}}\",\n\t\"resultaatType\": \"{{current_resultaattype}}\"\n}"
										},
										"url": {
											"raw": "{{zrc_url}}/resultaten",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"resultaten"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add Eindstatus to Zaak without archiefnominatie",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7226fe56-bdcc-42d9-ad16-07852570b778",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "820be47c-e617-4e5e-aa70-5e4ab1440b54",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"zaak\": \"{{zaak_zonder_archiefnominatie_url}}\",\n\t\"statusType\": \"{{eindstatustype}}\",\n\t\"datumStatusGezet\": \"2018-04-26T13:37:00\"\n}"
										},
										"url": {
											"raw": "{{zrc_url}}/statussen",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"statussen"
											]
										}
									},
									"response": []
								},
								{
									"name": "Retrieve Resultaattype information",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f0a21fac-c424-42bf-86d4-4c905170c493",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.variables.set(\"resultaattype_archiefnominatie\", jsonData.archiefnominatie);",
													"pm.variables.set(\"resultaattype_archiefactietermijn\", jsonData.archiefactietermijn);",
													"pm.variables.set(\"resultaattype_brondatumArchiefprocedure\", jsonData.brondatumArchiefprocedure);",
													"",
													"switch(pm.variables.get(\"resultaattype_brondatumArchiefprocedure\").afleidingswijze) {",
													"    case \"afgehandeld\":",
													"        postman.setNextRequest(\"(zrc-013a) Afleidingswijze afgehandeld\");",
													"        break;",
													"    case \"hoofdzaak\":",
													"        postman.setNextRequest(\"(zrc-013b) Afleidingswijze hoofdzaak\");",
													"        break;",
													"    case \"eigenschap\":",
													"        postman.setNextRequest(\"(zrc-013c) Afleidingswijze eigenschap\");",
													"        break;",
													"    case \"ander_datumkenmerk\":",
													"        postman.setNextRequest(\"(zrc-013g) Afleidingswijze ander_datumkenmerk\");",
													"        break;",
													"    case \"zaakobject\":",
													"        break;",
													"    case \"termijn\":",
													"        postman.setNextRequest(\"(zrc-013f) Afleidingswijze termijn\");",
													"        break;",
													"    case \"gerelateerde_zaak\":",
													"        postman.setNextRequest(\"(zrc-013i) Afleidingswijze gerelateerde_zaak\");",
													"        break;",
													"    case \"ingangsdatum_besluit\":",
													"        postman.setNextRequest(\"Retrieve max Besluit.ingangsdatum\");",
													"        break;",
													"    case \"vervaldatum_besluit\":",
													"        postman.setNextRequest(\"Retrieve max Besluit.vervaldatum\");",
													"        break;",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{current_resultaattype}}",
											"host": [
												"{{current_resultaattype}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Retrieve max Besluit.ingangsdatum",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "efc69da9-c4b5-4461-a3ca-9757bb2dbd84",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"var ingangsdata = [];",
													"for(i = 0; i < jsonData.length; i++) {",
													"    ingangsdata.add(jsonData[i].ingangsdatum);",
													"}",
													"",
													"pm.variables.set(\"max_ingangsdatum\", ingangsdata.reduce(function(a, b) { return a > b ? a : b; }));",
													"",
													"postman.setNextRequest(\"(zrc-013d) Afleidingswijze ingangsdatum_besluit\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{brc_url}}/besluiten?zaak={{zaak_zonder_archiefnominatie_url}}",
											"host": [
												"{{brc_url}}"
											],
											"path": [
												"besluiten"
											],
											"query": [
												{
													"key": "zaak",
													"value": "{{zaak_zonder_archiefnominatie_url}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Retrieve max Besluit.vervaldatum",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "efc69da9-c4b5-4461-a3ca-9757bb2dbd84",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"var vervaldata = [];",
													"for(i = 0; i < jsonData.length; i++) {",
													"    vervaldata.add(jsonData[i].vervaldatum);",
													"}",
													"",
													"pm.variables.set(\"max_vervaldatum\", vervaldata.reduce(function(a, b) { return a > b ? a : b; }));",
													"",
													"postman.setNextRequest(\"(zrc-013e) Afleidingswijze vervaldatum_besluit\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{brc_url}}/besluiten?zaak={{zaak_zonder_archiefnominatie_url}}",
											"host": [
												"{{brc_url}}"
											],
											"path": [
												"besluiten"
											],
											"query": [
												{
													"key": "zaak",
													"value": "{{zaak_zonder_archiefnominatie_url}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-013a) Afleidingswijze afgehandeld",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "211fc0ce-b5c8-486d-90cc-faf4029d3353",
												"exec": [
													"var moment = require('moment');",
													"",
													"pm.test(\"Resultaat toevoegen aan Zaak zonder archiefnominatie betekent dat archiefnominatie afgeleid wordt uit Resultaattype\", function() {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(pm.response.json().archiefnominatie).to.be.equal(pm.variables.get(\"resultaattype_archiefnominatie\"));",
													"});",
													"",
													"pm.test(\"Resultaat met afleidingswijze afgehandeld toevoegen aan Zaak zet correcte Zaak.archiefdatum\", function() {",
													"    var jsonData = pm.response.json();",
													"    ",
													"    if (pm.variables.get(\"resultaattype_archiefactietermijn\")) {",
													"        const brondatum = moment.utc(jsonData.einddatum);",
													"        const archiefactietermijn = moment.duration(pm.variables.get(\"resultaattype_archiefactietermijn\"), 'years');",
													"        var calculated_archiefactiedatum = brondatum.add(archiefactietermijn);",
													"        ",
													"        pm.expect(jsonData.archiefactiedatum).to.be.equal(calculated_archiefactiedatum.format(\"YYYY-MM-DD\"));   ",
													"    }",
													"});",
													"",
													"postman.setNextRequest(\"Delete Resultaat from Zaak\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{zaak_zonder_archiefnominatie_url}}",
											"host": [
												"{{zaak_zonder_archiefnominatie_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-013b) Afleidingswijze hoofdzaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "211fc0ce-b5c8-486d-90cc-faf4029d3353",
												"exec": [
													"var moment = require('moment');",
													"",
													"pm.test(\"Resultaat toevoegen aan Zaak zonder archiefnominatie betekent dat archiefnominatie afgeleid wordt uit Resultaattype\", function() {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(pm.response.json().archiefnominatie).to.be.equal(pm.variables.get(\"resultaattype_archiefnominatie\"));",
													"});",
													"",
													"pm.test(\"Resultaat met afleidingswijze hoofdzaak toevoegen aan Zaak zet correcte Zaak.archiefdatum\", function() {",
													"    var jsonData = pm.response.json();",
													"    ",
													"    if (pm.variables.get(\"resultaattype_archiefactietermijn\")) {",
													"        const brondatum = moment.utc(pm.variables.get(\"hoofdzaak_einddatum\"));",
													"        const archiefactietermijn = moment.duration(pm.variables.get(\"resultaattype_archiefactietermijn\"), 'years');",
													"        var calculated_archiefactiedatum = brondatum.add(archiefactietermijn);",
													"        ",
													"        pm.expect(jsonData.archiefactiedatum).to.be.equal(calculated_archiefactiedatum.format(\"YYYY-MM-DD\"));   ",
													"    }",
													"});",
													"",
													"postman.setNextRequest(\"Delete Resultaat from Zaak\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "869bc7bd-9394-4b5c-8476-217a4314851f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{zaak_zonder_archiefnominatie_url}}",
											"host": [
												"{{zaak_zonder_archiefnominatie_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-013c) Afleidingswijze eigenschap",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "211fc0ce-b5c8-486d-90cc-faf4029d3353",
												"exec": [
													"var moment = require('moment');",
													"",
													"pm.test(\"Resultaat toevoegen aan Zaak zonder archiefnominatie betekent dat archiefnominatie afgeleid wordt uit Resultaattype\", function() {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(pm.response.json().archiefnominatie).to.be.equal(pm.variables.get(\"resultaattype_archiefnominatie\"));",
													"});",
													"",
													"pm.test(\"Resultaat met afleidingswijze eigenschap toevoegen aan Zaak zet correcte Zaak.archiefdatum\", function() {",
													"    var jsonData = pm.response.json();",
													"    ",
													"    if (pm.variables.get(\"resultaattype_archiefactietermijn\")) {",
													"        const brondatum = moment.utc(pm.variables.get(\"hoofdzaak_einddatum\"));",
													"        const archiefactietermijn = moment.duration(pm.variables.get(\"resultaattype_archiefactietermijn\"), 'years');",
													"        var calculated_archiefactiedatum = brondatum.add(archiefactietermijn);",
													"        ",
													"        pm.expect(jsonData.archiefactiedatum).to.be.equal(calculated_archiefactiedatum.format(\"YYYY-MM-DD\"));   ",
													"    }",
													"});",
													"",
													"postman.setNextRequest(\"Delete Resultaat from Zaak\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "869bc7bd-9394-4b5c-8476-217a4314851f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{zaak_zonder_archiefnominatie_url}}",
											"host": [
												"{{zaak_zonder_archiefnominatie_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-013d) Afleidingswijze ingangsdatum_besluit",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "211fc0ce-b5c8-486d-90cc-faf4029d3353",
												"exec": [
													"var moment = require('moment');",
													"",
													"pm.test(\"Resultaat toevoegen aan Zaak zonder archiefnominatie betekent dat archiefnominatie afgeleid wordt uit Resultaattype\", function() {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(pm.response.json().archiefnominatie).to.be.equal(pm.variables.get(\"resultaattype_archiefnominatie\"));",
													"});",
													"",
													"pm.test(\"Resultaat met afleidingswijze ingangsdatum_besluit toevoegen aan Zaak zet correcte Zaak.archiefdatum\", function() {",
													"    var jsonData = pm.response.json();",
													"    ",
													"    if (pm.variables.get(\"resultaattype_archiefactietermijn\")) {",
													"        const brondatum = moment.utc(pm.variables.get(\"max_ingangsdatum\"));",
													"        console.log(brondatum);",
													"        const archiefactietermijn = moment.duration(pm.variables.get(\"resultaattype_archiefactietermijn\"), 'years');",
													"        var calculated_archiefactiedatum = brondatum.add(archiefactietermijn);",
													"        ",
													"        pm.expect(jsonData.archiefactiedatum).to.be.equal(calculated_archiefactiedatum.format(\"YYYY-MM-DD\"));   ",
													"    }",
													"});",
													"",
													"postman.setNextRequest(\"Delete Resultaat from Zaak\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "869bc7bd-9394-4b5c-8476-217a4314851f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{zaak_zonder_archiefnominatie_url}}",
											"host": [
												"{{zaak_zonder_archiefnominatie_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-013e) Afleidingswijze vervaldatum_besluit",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "211fc0ce-b5c8-486d-90cc-faf4029d3353",
												"exec": [
													"var moment = require('moment');",
													"",
													"pm.test(\"Resultaat toevoegen aan Zaak zonder archiefnominatie betekent dat archiefnominatie afgeleid wordt uit Resultaattype\", function() {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(pm.response.json().archiefnominatie).to.be.equal(pm.variables.get(\"resultaattype_archiefnominatie\"));",
													"});",
													"",
													"pm.test(\"Resultaat met afleidingswijze vervaldatum_besluit toevoegen aan Zaak zet correcte Zaak.archiefdatum\", function() {",
													"    var jsonData = pm.response.json();",
													"    ",
													"    if (pm.variables.get(\"resultaattype_archiefactietermijn\")) {",
													"        const brondatum = moment.utc(pm.variables.get(\"max_vervaldatum\"));",
													"        const archiefactietermijn = moment.duration(pm.variables.get(\"resultaattype_archiefactietermijn\"), 'years');",
													"        var calculated_archiefactiedatum = brondatum.add(archiefactietermijn);",
													"        ",
													"        pm.expect(jsonData.archiefactiedatum).to.be.equal(calculated_archiefactiedatum.format(\"YYYY-MM-DD\"));   ",
													"    }",
													"});",
													"",
													"postman.setNextRequest(\"Delete Resultaat from Zaak\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "869bc7bd-9394-4b5c-8476-217a4314851f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{zaak_zonder_archiefnominatie_url}}",
											"host": [
												"{{zaak_zonder_archiefnominatie_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-013f) Afleidingswijze termijn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "211fc0ce-b5c8-486d-90cc-faf4029d3353",
												"exec": [
													"var moment = require('moment');",
													"",
													"pm.test(\"Resultaat toevoegen aan Zaak zonder archiefnominatie betekent dat archiefnominatie afgeleid wordt uit Resultaattype\", function() {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(pm.response.json().archiefnominatie).to.be.equal(pm.variables.get(\"resultaattype_archiefnominatie\"));",
													"});",
													"",
													"pm.test(\"Resultaat met afleidingswijze termijn toevoegen aan Zaak zet correcte Zaak.archiefdatum\", function() {",
													"    var jsonData = pm.response.json();",
													"    ",
													"    if (pm.variables.get(\"resultaattype_archiefactietermijn\")) {",
													"        var procestermijn = moment.duration(pm.variables.get(\"resultaattype_brondatumArchiefprocedure\").procestermijn);",
													"        const brondatum = moment.utc(jsonData.einddatum).add(procestermijn);",
													"        ",
													"        const archiefactietermijn = moment.duration(pm.variables.get(\"resultaattype_archiefactietermijn\"), 'years');",
													"        var calculated_archiefactiedatum = brondatum.add(archiefactietermijn);",
													"        ",
													"        pm.expect(jsonData.archiefactiedatum).to.be.equal(calculated_archiefactiedatum.format(\"YYYY-MM-DD\"));   ",
													"    }",
													"});",
													"",
													"postman.setNextRequest(\"Delete Resultaat from Zaak\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{zaak_zonder_archiefnominatie_url}}",
											"host": [
												"{{zaak_zonder_archiefnominatie_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-013g) Afleidingswijze ander_datumkenmerk",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "211fc0ce-b5c8-486d-90cc-faf4029d3353",
												"exec": [
													"var moment = require('moment');",
													"",
													"pm.test(\"Resultaat toevoegen aan Zaak zonder archiefnominatie betekent dat archiefnominatie afgeleid wordt uit Resultaattype\", function() {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(pm.response.json().archiefnominatie).to.be.equal(pm.variables.get(\"resultaattype_archiefnominatie\"));",
													"});",
													"",
													"pm.test.skip(\"Resultaat met afleidingswijze ander_datumkenmerk toevoegen aan Zaak zet correcte Zaak.archiefdatum\", function() {",
													"    var jsonData = pm.response.json();",
													"    ",
													"    if (pm.variables.get(\"resultaattype_archiefactietermijn\")) {",
													"        var procestermijn = moment.utc(pm.variables.get(\"resultaattype_brondatumArchiefprocedure\").procestermijn);",
													"        const brondatum = moment.utc(jsonData.einddatum).add(procestermijn);",
													"        ",
													"        const archiefactietermijn = moment.duration(pm.variables.get(\"resultaattype_archiefactietermijn\"), 'years');",
													"        var calculated_archiefactiedatum = brondatum.add(archiefactietermijn);",
													"        ",
													"        pm.expect(jsonData.archiefactiedatum).to.be.equal(calculated_archiefactiedatum.format(\"YYYY-MM-DD\"));   ",
													"    }",
													"});",
													"",
													"postman.setNextRequest(\"Delete Resultaat from Zaak\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{zaak_zonder_archiefnominatie_url}}",
											"host": [
												"{{zaak_zonder_archiefnominatie_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-013h) Afleidingswijze zaakobject",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "211fc0ce-b5c8-486d-90cc-faf4029d3353",
												"exec": [
													"var moment = require('moment');",
													"",
													"pm.test(\"Resultaat toevoegen aan Zaak zonder archiefnominatie betekent dat archiefnominatie afgeleid wordt uit Resultaattype\", function() {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(pm.response.json().archiefnominatie).to.be.equal(pm.variables.get(\"resultaattype_archiefnominatie\"));",
													"});",
													"",
													"pm.test(\"Resultaat met afleidingswijze zaakobject toevoegen aan Zaak zet correcte Zaak.archiefdatum\", function() {",
													"    var jsonData = pm.response.json();",
													"    ",
													"    if (pm.variables.get(\"resultaattype_archiefactietermijn\")) {",
													"        const brondatum = moment.utc(jsonData.einddatum);",
													"        const archiefactietermijn = moment.duration(pm.variables.get(\"resultaattype_archiefactietermijn\"), 'years');",
													"        var calculated_archiefactiedatum = brondatum.add(archiefactietermijn);",
													"        ",
													"        pm.expect(jsonData.archiefactiedatum).to.be.equal(calculated_archiefactiedatum.format(\"YYYY-MM-DD\"));   ",
													"    }",
													"});",
													"",
													"postman.setNextRequest(\"Delete Resultaat from Zaak\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{zaak_zonder_archiefnominatie_url}}",
											"host": [
												"{{zaak_zonder_archiefnominatie_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-013i) Afleidingswijze gerelateerde_zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "211fc0ce-b5c8-486d-90cc-faf4029d3353",
												"exec": [
													"var moment = require('moment');",
													"",
													"pm.test(\"Resultaat toevoegen aan Zaak zonder archiefnominatie betekent dat archiefnominatie afgeleid wordt uit Resultaattype\", function() {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(pm.response.json().archiefnominatie).to.be.equal(pm.variables.get(\"resultaattype_archiefnominatie\"));",
													"});",
													"",
													"pm.test(\"Resultaat met afleidingswijze gerelateerde_zaak toevoegen aan Zaak zet correcte Zaak.archiefdatum\", function() {",
													"    var jsonData = pm.response.json();",
													"    ",
													"    if (pm.variables.get(\"resultaattype_archiefactietermijn\")) {",
													"        const brondatum = moment.utc(jsonData.einddatum);",
													"        const archiefactietermijn = moment.duration(pm.variables.get(\"resultaattype_archiefactietermijn\"), 'years');",
													"        var calculated_archiefactiedatum = brondatum.add(archiefactietermijn);",
													"        ",
													"        pm.expect(jsonData.archiefactiedatum).to.be.equal(calculated_archiefactiedatum.format(\"YYYY-MM-DD\"));   ",
													"    }",
													"});",
													"",
													"postman.setNextRequest(\"Delete Resultaat from Zaak\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{zaak_zonder_archiefnominatie_url}}",
											"host": [
												"{{zaak_zonder_archiefnominatie_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Resultaat from Zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7197b242-cd4a-44d6-b322-136d37599b2f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{zaak_resultaat_url}}",
											"host": [
												"{{zaak_resultaat_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Besluit",
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{besluit_url}}",
											"host": [
												"{{besluit_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Zaak without archiefnominatie",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9c66db28-3c20-4603-9de7-b70c45fe8572",
												"exec": [
													"var index = pm.variables.get(\"zaaktype_index\");",
													"",
													"pm.variables.unset(\"zaak_zonder_archiefnominatie_url\");",
													"if (index == pm.variables.get(\"archiving_zaaktypen\").length - 1) {",
													"    postman.setNextRequest(\"Delete Hoofdzaak\");",
													"} else {",
													"    // Loop",
													"    pm.variables.set(\"zaaktype_index\", index + 1);",
													"    postman.setNextRequest(\"Create Zaak without archiefnominatie\");",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{zaak_zonder_archiefnominatie_url}}",
											"host": [
												"{{zaak_zonder_archiefnominatie_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Resultaat from Hoofdzaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7197b242-cd4a-44d6-b322-136d37599b2f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{hoofdzaak_resultaat_url}}",
											"host": [
												"{{hoofdzaak_resultaat_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Hoofdzaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b696684c-6ace-4c34-9e6a-e323a185ef82",
												"exec": [
													"pm.variables.unset(\"hoofdzaak_url\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{hoofdzaak_url}}",
											"host": [
												"{{hoofdzaak_url}}"
											]
										}
									},
									"response": []
								}
							],
							"description": "**TODO:**\nde zaak die hier gemaakt wordt moet voor afleidingswijze: \n- hoofdzaak: een hoofdzaak met eindstatus hebben\n- zaakobject: minstens 1 zaakinformatieobject van Resultaattype.brondatumArchiefprocedure.objecttype,\n- gerelateerde_zaak: ???\n- ingangsdatum\\_besluit & vervaldatum\\_besluit: minstens 1 gerelateerd besluit\n\nzou moeten werken voor afgehandeld",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "26cd7d53-45b0-4997-b654-05337f1d4eec",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "8f5b02f0-b508-461c-af34-be787256d787",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "zrc-014",
							"item": [
								{
									"name": "(zrc-014a) Zaak aanmaken geeft voor archiefstatus standaardwaarde nog_te_archiveren",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "267bd317-64b5-4159-b146-c4666750db37",
												"exec": [
													"pm.test(\"Zaak aanmaken geeft voor archiefstatus standaardwaarde nog_te_archiveren\", function(){",
													"    pm.expect(pm.response.json().archiefstatus).to.be.equal(\"nog_te_archiveren\");",
													"});",
													"",
													"// If the Zaak was created, delete it",
													"if(pm.response.code == 201) {",
													"    pm.variables.set(\"created_zaak_url\", pm.response.json().url);",
													"    pm.variables.set(\"NEXT_REQUEST_NAME\", \"Create Zaak to be archived\");",
													"    postman.setNextRequest(\"(COMMON) Delete Zaak\");",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{zaak_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Zaak to be archived",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "7f3ed8a2-7bc9-4c77-85b1-561482065971",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "46ada267-ffcf-477a-a3d6-02addbf603a2",
												"exec": [
													"pm.variables.set(\"created_zaak_url\", pm.response.json().url);",
													"",
													"pm.variables.set(\"NEXT_REQUEST_NAME\", \"(zrc-014b) Zaak bijwerken archiefstatus niet nog_te_archiveren is onmogelijk als informatieobjecten nog niet gearchiveerd\");",
													"postman.setNextRequest(\"(COMMON) Create relation between Zaak and Informatieobject\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{zaak_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-014b) Zaak bijwerken archiefstatus niet nog_te_archiveren is onmogelijk als informatieobjecten nog niet gearchiveerd",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fbbe81ee-3688-4065-a2a5-793e9a2fff42",
												"exec": [
													"pm.test(\"Zaak bijwerken archiefstatus zetten op niet nog_te_archiveren terwijl gerelateerde objecten geen archiefstatus gearchiveerd hebben geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
													"    pm.expect(error.code).to.be.equal(\"documents-not-archived\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "81b03d36-f405-4e6a-9948-de361d6e1b28",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"pm.variables.set(\"archiefstatussen\", [\"gearchiveerd\", \"gearchiveerd_procestermijn_onbekend\", \"overgedragen\"]);",
													"",
													"if (!pm.variables.get(\"archiefstatus_index\")) {",
													"    pm.variables.set(\"archiefstatus_index\", 0);",
													"} ",
													"",
													"pm.variables.set(\"current_archiefstatus\", pm.variables.get(\"archiefstatussen\")[pm.variables.get(\"archiefstatus_index\")])",
													"",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.archiefstatus = pm.variables.get(\"current_archiefstatus\");",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-014c) Zaak deels bijwerken archiefstatus niet nog_te_archiveren is onmogelijk als informatieobjecten nog niet gearchiveerd",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fbbe81ee-3688-4065-a2a5-793e9a2fff42",
												"exec": [
													"pm.test(\"Zaak deels bijwerken archiefstatus zetten op niet nog_te_archiveren terwijl gerelateerde objecten geen archiefstatus gearchiveerd hebben geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
													"    pm.expect(error.code).to.be.equal(\"documents-not-archived\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"archiefstatus\": \"{{current_archiefstatus}}\"\n}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Change Informatieobject status to gearchiveerd",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"status\": \"gearchiveerd\"\n}"
										},
										"url": {
											"raw": "{{informatieobject_url}}",
											"host": [
												"{{informatieobject_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-014d) Zaak bijwerken archiefstatus niet nog_te_archiveren is onmogelijk als archiefnominatie niet gezet",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fbbe81ee-3688-4065-a2a5-793e9a2fff42",
												"exec": [
													"pm.test(\"Zaak bijwerken archiefstatus zetten op niet nog_te_archiveren zonder waarde voor archiefnominatie geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"archiefnominatie\");",
													"    pm.expect(error.code).to.be.equal(\"archiefnominatie-not-set\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "81b03d36-f405-4e6a-9948-de361d6e1b28",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.archiefstatus = pm.variables.get(\"current_archiefstatus\");",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-014e) Zaak deels bijwerken archiefstatus niet nog_te_archiveren is onmogelijk als archiefnominatie niet gezet",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fbbe81ee-3688-4065-a2a5-793e9a2fff42",
												"exec": [
													"pm.test(\"Zaak bijwerken archiefstatus zetten op niet nog_te_archiveren zonder waarde voor archiefnominatie geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"archiefnominatie\");",
													"    pm.expect(error.code).to.be.equal(\"archiefnominatie-not-set\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "81b03d36-f405-4e6a-9948-de361d6e1b28",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"archiefstatus\": \"{{current_archiefstatus}}\"\n}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-014f) Zaak bijwerken archiefstatus niet nog_te_archiveren is onmogelijk als archiefactiedatum niet gezet",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fbbe81ee-3688-4065-a2a5-793e9a2fff42",
												"exec": [
													"pm.test(\"Zaak bijwerken archiefstatus zetten op niet nog_te_archiveren zonder waarde voor archiefactiedatum geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"archiefactiedatum\");",
													"    pm.expect(error.code).to.be.equal(\"archiefactiedatum-not-set\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "81b03d36-f405-4e6a-9948-de361d6e1b28",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.archiefstatus = pm.variables.get(\"current_archiefstatus\");",
													"body.archiefnominatie = \"blijvend_bewaren\";",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-014g) Zaak deels bijwerken archiefstatus niet nog_te_archiveren is onmogelijk als archiefactiedatum niet gezet",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fbbe81ee-3688-4065-a2a5-793e9a2fff42",
												"exec": [
													"pm.test(\"Zaak deels bijwerken archiefstatus zetten op niet nog_te_archiveren zonder waarde voor archiefactiedatum geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"archiefactiedatum\");",
													"    pm.expect(error.code).to.be.equal(\"archiefactiedatum-not-set\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "81b03d36-f405-4e6a-9948-de361d6e1b28",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"archiefstatus\": \"{{current_archiefstatus}}\",\n\t\"archiefnominatie\": \"blijvend_bewaren\"\n}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-014h) Zaak bijwerken archiefstatus niet nog_te_archiveren is mogelijk",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "febaa10d-27c5-454c-a124-7606cca90a7f",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"zaak_body\"));",
													"body.archiefstatus = pm.variables.get(\"current_archiefstatus\");",
													"body.archiefnominatie = \"blijvend_bewaren\";",
													"body.archiefactiedatum = \"2020-01-01\";",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "75e90a59-ec6c-4fd2-8577-d8e2e3525742",
												"exec": [
													"pm.test(\"Zaak bijwerken archiefstatus zetten op niet nog_te_archiveren met archiefactiedatum en archiefnominatie gezet geef 200\", function() {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(pm.response.json().archiefstatus).to.be.equal(pm.variables.get(\"current_archiefstatus\"));",
													"});",
													"",
													"pm.variables.set(\"NEXT_REQUEST_NAME\", \"Change Informatieobject status to not gearchiveerd\");",
													"postman.setNextRequest(\"(COMMON) Delete Zaak\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Change Informatieobject status to not gearchiveerd",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6e820332-c9e5-4d25-bcee-66ceb45fb195",
												"exec": [
													"var index = pm.variables.get(\"archiefstatus_index\");",
													"",
													"if (index == pm.variables.get(\"archiefstatussen\").length - 1) {",
													"    postman.setNextRequest(\"Create Zaak to delete\");",
													"} else {",
													"    // Loop",
													"    pm.variables.set(\"archiefstatus_index\", index + 1);",
													"    if (pm.variables.get(\"created_objectinformatieobject_url\")) {",
													"        pm.variables.set(\"NEXT_REQUEST_NAME\", \"Create Zaak to be archived\");",
													"        postman.setNextRequest(\"(COMMON) Delete relation between Zaak and Informatieobject\");",
													"    } else {",
													"        postman.setNextRequest(\"Create Zaak to be archived\");",
													"    }",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"status\": \"\"\n}"
										},
										"url": {
											"raw": "{{informatieobject_url}}",
											"host": [
												"{{informatieobject_url}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "93ce8524-5561-4ec9-8543-d05f233cbfc2",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "c0ff52a8-3e35-45c6-846e-e456faa1837d",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "zrc-015 (NI)",
							"item": [
								{
									"name": "Create Zaak to delete",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a64c1a05-ff2c-4a48-9f85-2251ef5548cd",
												"exec": [
													"pm.variables.set(\"created_zaak_url\", pm.response.json().url);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{zaak_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add Resultaat to Zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7226fe56-bdcc-42d9-ad16-07852570b778",
												"exec": [
													"pm.variables.set(\"resultaat_url\", pm.response.json().url);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "820be47c-e617-4e5e-aa70-5e4ab1440b54",
												"exec": [
													"pm.variables.set(\"resultaattype\", pm.variables.get(\"zaaktype_resultaattypen\")[0]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"resultaatType\": \"{{resultaattype}}\"\n}"
										},
										"url": {
											"raw": "{{zrc_url}}/resultaten",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"resultaten"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add Status to Zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7226fe56-bdcc-42d9-ad16-07852570b778",
												"exec": [
													"pm.variables.set(\"status_url\", pm.response.json().url);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "820be47c-e617-4e5e-aa70-5e4ab1440b54",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"statusType\": \"{{non_eindstatustype}}\",\n\t\"datumStatusGezet\": \"2018-04-20T13:37:00\"\n}"
										},
										"url": {
											"raw": "{{zrc_url}}/statussen",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"statussen"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add Rol to Zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7226fe56-bdcc-42d9-ad16-07852570b778",
												"exec": [
													"pm.variables.set(\"rol_url\", pm.response.json().url);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "820be47c-e617-4e5e-aa70-5e4ab1440b54",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"betrokkene\": \"http://example.com\",\n\t\"betrokkeneType\": \"Natuurlijk persoon\",\n\t\"rolomschrijving\": \"Behandelaar\",\n\t\"roltoelichting\": \"testrol\"\n}"
										},
										"url": {
											"raw": "{{zrc_url}}/rollen",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"rollen"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Zaakobject",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "426a1b11-f44f-40ef-a9fa-6e05e461c2dc",
												"exec": [
													"pm.variables.set(\"zaakobject_url\", pm.response.json().url);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"object\": \"{{informatieobject_url}}\",\n\t\"type\": \"VerblijfsObject\"\n}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaakobjecten",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaakobjecten"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add Zaakeigenschap to Zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7226fe56-bdcc-42d9-ad16-07852570b778",
												"exec": [
													"pm.variables.set(\"zaakeigenschap_url\", pm.response.json().url);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "820be47c-e617-4e5e-aa70-5e4ab1440b54",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"eigenschap\": \"{{zaaktype_eigenschap}}\",\n\t\"waarde\": \"test\"\n}"
										},
										"url": {
											"raw": "{{created_zaak_url}}/zaakeigenschappen",
											"host": [
												"{{created_zaak_url}}"
											],
											"path": [
												"zaakeigenschappen"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create relation between Zaak and Informatieobject",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fa9f354c-0464-494e-b9fa-9635b21b2d43",
												"exec": [
													"pm.variables.set(\"objectinformatieobject_url\", pm.response.json().url);",
													"",
													"if(pm.response.code != 201) {",
													"    postman.setNextRequest(\"Add Klantcontact to Zaak\");",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "5be8e943-844c-4786-9173-08a7e1dfb2c8",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"informatieobject\": \"{{informatieobject_url}}\",\n    \"object\": \"{{created_zaak_url}}\",\n    \"objectType\": \"zaak\"\n}"
										},
										"url": {
											"raw": "{{drc_url}}/objectinformatieobjecten",
											"host": [
												"{{drc_url}}"
											],
											"path": [
												"objectinformatieobjecten"
											]
										}
									},
									"response": []
								},
								{
									"name": "Retrieve Zaakinformatieobject url",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6195d7e2-4e74-425d-8135-f92287a13d76",
												"exec": [
													"pm.variables.set(\"zaakinformatieobject_url\", pm.response.json()[0].url);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{created_zaak_url}}/informatieobjecten",
											"host": [
												"{{created_zaak_url}}"
											],
											"path": [
												"informatieobjecten"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add Klantcontact to Zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7226fe56-bdcc-42d9-ad16-07852570b778",
												"exec": [
													"pm.variables.set(\"klantcontact_url\", pm.response.json().url);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "820be47c-e617-4e5e-aa70-5e4ab1440b54",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"datumtijd\": \"2019-02-20T00:00:00\"\n}"
										},
										"url": {
											"raw": "{{zrc_url}}/klantcontacten",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"klantcontacten"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-015a) Zaak verwijderen is mogelijk",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a4bd1602-194d-44c1-b79c-3cdeb7c43c78",
												"exec": [
													"pm.test(\"Zaak verwijderen geeft 204\", function() {",
													"   pm.response.to.have.status(204); ",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-015b) Zaak verdwijnt uit zrc na verwijdering",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1c927c06-054f-4cb2-8bd9-1d7577fcff37",
												"exec": [
													"pm.test(\"Zaak ophalen uit zrc na verwijdering geeft 404\", function() {",
													"    pm.response.to.have.status(404); ",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-015c) Resultaat verdwijnt uit zrc na Zaak verwijdering",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1c927c06-054f-4cb2-8bd9-1d7577fcff37",
												"exec": [
													"pm.test(\"Resultaat ophalen uit zrc na Zaak verwijdering geeft 404\", function() {",
													"    pm.response.to.have.status(404); ",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{resultaat_url}}",
											"host": [
												"{{resultaat_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-015d) Status verdwijnt uit zrc na Zaak verwijdering",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1c927c06-054f-4cb2-8bd9-1d7577fcff37",
												"exec": [
													"pm.test(\"Status ophalen uit zrc na Zaak verwijdering geeft 404\", function() {",
													"    pm.response.to.have.status(404); ",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{status_url}}",
											"host": [
												"{{status_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-015e) Rol verdwijnt uit zrc na Zaak verwijdering",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1c927c06-054f-4cb2-8bd9-1d7577fcff37",
												"exec": [
													"pm.test(\"Rol ophalen uit zrc na Zaak verwijdering geeft 404\", function() {",
													"    pm.response.to.have.status(404); ",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{rol_url}}",
											"host": [
												"{{rol_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-015f) Zaakobject verdwijnt uit zrc na Zaak verwijdering",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1c927c06-054f-4cb2-8bd9-1d7577fcff37",
												"exec": [
													"pm.test(\"Zaakobject ophalen uit zrc na Zaak verwijdering geeft 404\", function() {",
													"    pm.response.to.have.status(404); ",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{zaakobject_url}}",
											"host": [
												"{{zaakobject_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-015g) Zaakeigenschap verdwijnt uit zrc na Zaak verwijdering",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1c927c06-054f-4cb2-8bd9-1d7577fcff37",
												"exec": [
													"pm.test(\"Zaakeigenschap ophalen uit zrc na Zaak verwijdering geeft 404\", function() {",
													"    pm.response.to.have.status(404); ",
													"});",
													"",
													"if(!pm.variables.get(\"objectinformatieobject_url\")) {",
													"    postman.setNextRequest(\"(zrc-015j) Klantcontact verdwijnt uit zrc na Zaak verwijdering\");",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{zaakeigenschap_url}}",
											"host": [
												"{{zaakeigenschap_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-015h) ObjectInformatieObject verdwijnt uit drc na Zaak verwijdering",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1c927c06-054f-4cb2-8bd9-1d7577fcff37",
												"exec": [
													"pm.test.skip(\"ObjectInformatieObject ophalen uit drc na Zaak verwijdering geeft 404\", function() {",
													"    pm.response.to.have.status(404); ",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{objectinformatieobject_url}}",
											"host": [
												"{{objectinformatieobject_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-015i) Zaakinformatieobject verdwijnt uit zrc na Zaak verwijdering",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1c927c06-054f-4cb2-8bd9-1d7577fcff37",
												"exec": [
													"pm.test(\"Zaakinformatieobject ophalen uit zrc na Zaak verwijdering geeft 404\", function() {",
													"    pm.response.to.have.status(404); ",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{zaakinformatieobject_url}}",
											"host": [
												"{{zaakinformatieobject_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(zrc-015j) Klantcontact verdwijnt uit zrc na Zaak verwijdering",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1c927c06-054f-4cb2-8bd9-1d7577fcff37",
												"exec": [
													"pm.test(\"Klantcontact ophalen uit zrc na Zaak verwijdering geeft 404\", function() {",
													"    pm.response.to.have.status(404); ",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{klantcontact_url}}",
											"host": [
												"{{klantcontact_url}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "76b6d9dc-a267-4a10-88b8-43038e699bd4",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "5693684a-48cc-47ac-b187-2124ab33f7fc",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "tearDown",
							"item": [
								{
									"name": "Delete Zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d119b2b8-8897-4495-8802-ab28c4f43d05",
												"exec": [
													"// Continue to the drc tests",
													"postman.setNextRequest(\"Retrieve Informatieobjecttype, Zaaktype and Besluittype\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "ec0d885c-e0bb-4267-bd44-d2e2e5cdf549",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "349ad68a-a9be-4caf-8e29-c8cd91108f1c",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "common requests",
							"item": [
								{
									"name": "(COMMON) Delete Zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a4bd1602-194d-44c1-b79c-3cdeb7c43c78",
												"exec": [
													"pm.variables.unset(\"created_zaak_url\");",
													"postman.setNextRequest(pm.variables.get(\"NEXT_REQUEST_NAME\"));",
													"pm.variables.unset(\"NEXT_REQUEST_NAME\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(COMMON) Create relation between Zaak and Informatieobject",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fa9f354c-0464-494e-b9fa-9635b21b2d43",
												"exec": [
													"pm.variables.set(\"objectinformatieobject_url\", pm.response.json().url);",
													"postman.setNextRequest(pm.variables.get(\"NEXT_REQUEST_NAME\"));",
													"pm.variables.unset(\"NEXT_REQUEST_NAME\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "5be8e943-844c-4786-9173-08a7e1dfb2c8",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"informatieobject\": \"{{informatieobject_url}}\",\n    \"object\": \"{{created_zaak_url}}\",\n    \"objectType\": \"zaak\"\n}"
										},
										"url": {
											"raw": "{{drc_url}}/objectinformatieobjecten",
											"host": [
												"{{drc_url}}"
											],
											"path": [
												"objectinformatieobjecten"
											]
										}
									},
									"response": []
								},
								{
									"name": "(COMMON) Delete relation between Zaak and Informatieobject",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "f6f87cec-0d1a-4acf-b2df-2e05417272c7",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "e92fad8c-68f7-4837-bf55-1d6f2ab479ec",
												"exec": [
													"pm.variables.unset(\"objectinformatieobject_url\");",
													"postman.setNextRequest(pm.variables.get(\"NEXT_REQUEST_NAME\"));",
													"pm.variables.unset(\"NEXT_REQUEST_NAME\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{objectinformatieobject_url}}",
											"host": [
												"{{objectinformatieobject_url}}"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"description": "Bevat alle business logic tests voor het Zaakregistratiecomponent",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7218a25f-3c6c-49e9-8f7c-3ba886c19111",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d79a0641-84d7-4dd6-8a34-549dcc774d17",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "drc",
					"item": [
						{
							"name": "setUp",
							"item": [
								{
									"name": "Retrieve Informatieobjecttype, Zaaktype and Besluittype",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "75c656ba-6fd2-4a7a-94e3-7485eed53d6f",
												"exec": [
													"pm.variables.set(\"zaaktype_url\", pm.response.json()[0].zaaktypen[0]);",
													"pm.variables.set(\"informatieobjecttype_url\", pm.response.json()[0].informatieobjecttypen[0]);",
													"pm.variables.set(\"besluittype_url\", pm.response.json()[0].besluittypen[0]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ztc_url}}/catalogussen",
											"host": [
												"{{ztc_url}}"
											],
											"path": [
												"catalogussen"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create EnkelvoudigInformatieObject",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ccc02e3a-7f7d-4e1d-98b8-c5445106fc49",
												"exec": [
													"pm.variables.set(\"informatieobject_url\", pm.response.json().url);",
													"pm.variables.set(\"informatieobject_body\", pm.request.body.raw);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"bronorganisatie\": \"000000000\",\n\t\"creatiedatum\": \"2019-01-01\",\n\t\"titel\": \"testobject\",\n\t\"auteur\": \"testauteur\",\n\t\"taal\": \"eng\",\n\t\"inhoud\": \"http://example.com\",\n\t\"informatieobjecttype\": \"{{informatieobjecttype_url}}\"\n}"
										},
										"url": {
											"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
											"host": [
												"{{drc_url}}"
											],
											"path": [
												"enkelvoudiginformatieobjecten"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "01e98b0e-0bea-40a1-8485-67695fb020b3",
												"exec": [
													"var zaak = pm.response.json();",
													"pm.variables.set(\"zaak_url\", zaak.url);",
													"pm.variables.set(\"zaak_id\", zaak.identificatie);",
													"pm.variables.set(\"zaak_bronorganisatie\", zaak.bronorganisatie);",
													"pm.variables.set(\"zaak_geometrie\", zaak.zaakgeometrie);",
													"pm.variables.set(\"zaak_body\", pm.request.body.raw);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bronorganisatie\": \"000000000\",\n    \"omschrijving\": \"string\",\n    \"toelichting\": \"string\",\n    \"registratiedatum\": \"2019-04-09\",\n    \"verantwoordelijkeOrganisatie\": \"000000000\",\n    \"zaaktype\": \"{{zaaktype_url}}\",\n    \"startdatum\": \"2019-04-09\",\n    \"einddatumGepland\": \"2019-04-20\",\n    \"uiterlijkeEinddatumAfdoening\": \"2019-04-09\",\n    \"publicatiedatum\": \"2019-04-09\",\n\t\"vertrouwelijkheidaanduiding\": \"openbaar\",\n\t\"betalingsindicatie\": \"geheel\",\n\t\"laatsteBetaalDatum\": \"2019-01-01\",\n\t\"zaakgeometrie\": \n\t{\n\t    \"type\": \"Point\",\n\t    \"coordinates\": [53, 5]\n\t},\n\t\"opschorting\": \n\t{\n\t    \"indicatie\": true,\n\t    \"reden\": \"string\"\n\t},\n\t\"selectielijstklasse\": \"http://example.com\",\n\t\"relevanteAndereZaken\": \n\t[\n\n    \"http://example.com\"\n\n],\n    \"archiefstatus\": \"nog_te_archiveren\"\n}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										},
										"description": "Maakt een Zaak aan die gebruikt zal worden in de tests, deze zaak wordt na de tests weer verwijderd.\n\nDe body van deze Zaak zal ook als variabele opgeslagen worden en gebruikt worden (met kleine aanpassingen iedere keer) in de requests voor de validatie tests, om te voorkomen dat telkens hetzelfde body gekopieerd moet worden."
									},
									"response": []
								},
								{
									"name": "Create Besluit",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "23bc2897-511c-416d-b48d-c8aa46adba28",
												"exec": [
													"pm.variables.set(\"besluit_url\", pm.response.json().url);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"verantwoordelijkeOrganisatie\": \"000000000\",\n\t\"besluittype\": \"{{besluittype_url}}\",\n\t\"datum\": \"2019-04-25\",\n\t\"ingangsdatum\": \"2019-04-26\",\n\t\"vervaldatum\": \"2019-04-28\"\n}"
										},
										"url": {
											"raw": "{{brc_url}}/besluiten",
											"host": [
												"{{brc_url}}"
											],
											"path": [
												"besluiten"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "drc-001",
							"item": [
								{
									"name": "(drc-001a) EnkelvoudigInformatieObject aanmaken is mogelijk",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9c297a8c-30f1-428b-88ec-a6d6dc8800c1",
												"exec": [
													"pm.test(\"EnkelvoudigInformatieObject aanmaken met valide gegevens geeft 201\", function() {",
													"    pm.response.to.have.status(201);",
													"    pm.variables.set(\"created_informatieobject_url\", pm.response.json().url);",
													"});",
													"",
													"if(pm.response.code != 201) {",
													"    postman.setNextRequest(\"(drc-001d) EnkelvoudigInformatieObject aanmaken met ongeldige informatieobjecttype url is onmogelijk\");",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "d5457b08-8cbf-4f6b-aa5f-db290fffd7fd",
												"exec": [
													"// var body = JSON.parse(pm.variables.get(\"informatieobject_body\"));",
													"// body.informatieobjecttype = pm.variables.get(\"informatieobjecttype_url\");",
													"",
													"// pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{informatieobject_body}}"
										},
										"url": {
											"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
											"host": [
												"{{drc_url}}"
											],
											"path": [
												"enkelvoudiginformatieobjecten"
											]
										}
									},
									"response": []
								},
								{
									"name": "(drc-001b) EnkelvoudigInformatieObject bijwerken is mogelijk",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9c297a8c-30f1-428b-88ec-a6d6dc8800c1",
												"exec": [
													"pm.test(\"EnkelvoudigInformatieObject bijwerken met valide gegevens geeft 200\", function() {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"EnkelvoudigInformatieObject bijwerken past gegevens correct aan\", function() {",
													"    pm.expect(pm.response.json().titel).to.be.equal(pm.variables.get(\"aangepaste_titel\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "d5457b08-8cbf-4f6b-aa5f-db290fffd7fd",
												"exec": [
													"var body = JSON.parse(pm.variables.get(\"informatieobject_body\"));",
													"pm.variables.set(\"aangepaste_titel\", \"aangepast\");",
													"body.titel = pm.variables.get(\"aangepaste_titel\");",
													"",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{created_informatieobject_url}}",
											"host": [
												"{{created_informatieobject_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(drc-001c) EnkelvoudigInformatieObject deels bijwerken is mogelijk",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9c297a8c-30f1-428b-88ec-a6d6dc8800c1",
												"exec": [
													"pm.test(\"EnkelvoudigInformatieObject deels bijwerken met valide gegevens geeft 200\", function() {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"EnkelvoudigInformatieObject deels bijwerken past gegevens correct aan\", function() {",
													"    pm.expect(pm.response.json().auteur).to.be.equal(pm.variables.get(\"aangepaste_auteur\"));",
													"});",
													"",
													"pm.variables.set(\"NEXT_REQUEST_NAME\", \"(drc-001d) EnkelvoudigInformatieObject aanmaken met ongeldige informatieobjecttype url is onmogelijk\");",
													"postman.setNextRequest(\"(COMMON) Delete EnkelvoudigInformatieObject\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "d5457b08-8cbf-4f6b-aa5f-db290fffd7fd",
												"exec": [
													"pm.variables.set(\"aangepaste_auteur\", \"aangepaste auteur\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"auteur\": \"{{aangepaste_auteur}}\"\n}"
										},
										"url": {
											"raw": "{{created_informatieobject_url}}",
											"host": [
												"{{created_informatieobject_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(drc-001d) EnkelvoudigInformatieObject aanmaken met ongeldige informatieobjecttype url is onmogelijk",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9983c33d-404e-4f04-9abc-82a130620b5e",
												"exec": [
													"pm.test(\"EnkelvoudigInformatieObject aanmaken met informatieobjecttype url die niet resulteert in 200 geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"informatieobjecttype\");",
													"    pm.expect(error.code).to.be.equal(\"bad-url\");",
													"});",
													"",
													"if (pm.response.code == 201) {",
													"    pm.variables.set(\"created_informatieobject_url\", pm.response.json().url);",
													"    pm.variables.set(\"NEXT_REQUEST_NAME\", \"(drc-001e) EnkelvoudigInformatieObject bijwerken met ongeldige informatieobjecttype url is onmogelijk\");",
													"    postman.setNextRequest(\"(COMMON) Delete EnkelvoudigInformatieObject\");",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "fd1337e3-0ddd-49ef-b62c-d098dbec6c32",
												"exec": [
													"var body = JSON.parse(pm.variables.get(\"informatieobject_body\"));",
													"body.informatieobjecttype = pm.variables.get(\"mock_url\") + \"/404\";",
													"",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
											"host": [
												"{{drc_url}}"
											],
											"path": [
												"enkelvoudiginformatieobjecten"
											]
										}
									},
									"response": []
								},
								{
									"name": "(drc-001e) EnkelvoudigInformatieObject bijwerken met ongeldige informatieobjecttype url is onmogelijk",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9c297a8c-30f1-428b-88ec-a6d6dc8800c1",
												"exec": [
													"pm.test(\"EnkelvoudigInformatieObject bijwerken met informatieobjecttype url die niet resulteert in 200 geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"informatieobjecttype\");",
													"    pm.expect(error.code).to.be.equal(\"bad-url\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "d5457b08-8cbf-4f6b-aa5f-db290fffd7fd",
												"exec": [
													"var body = JSON.parse(pm.variables.get(\"informatieobject_body\"));",
													"body.informatieobjecttype = pm.variables.get(\"mock_url\") + \"/404\";",
													"",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{informatieobject_url}}",
											"host": [
												"{{informatieobject_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(drc-001f) EnkelvoudigInformatieObject deels bijwerken met ongeldige informatieobjecttype url is onmogelijk",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9c297a8c-30f1-428b-88ec-a6d6dc8800c1",
												"exec": [
													"pm.test(\"EnkelvoudigInformatieObject deels bijwerken met informatieobjecttype url die niet resulteert in 200 geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"informatieobjecttype\");",
													"    pm.expect(error.code).to.be.equal(\"bad-url\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "d5457b08-8cbf-4f6b-aa5f-db290fffd7fd",
												"exec": [
													"pm.variables.set(\"aangepaste_auteur\", \"aangepaste auteur\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"informatieobjecttype\": \"{{mock_url}}/404\"\n}"
										},
										"url": {
											"raw": "{{informatieobject_url}}",
											"host": [
												"{{informatieobject_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(drc-001g) EnkelvoudigInformatieObject aanmaken met informatieobjecttype url die niet wijst naar informatieobjecttype is onmogelijk",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9983c33d-404e-4f04-9abc-82a130620b5e",
												"exec": [
													"pm.test.skip(\"EnkelvoudigInformatieObject aanmaken met informatieobjecttype url die niet wijst naar Informatieobjecttype geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"informatieobjecttype\");",
													"    pm.expect(error.code).to.be.equal(\"invalid-resource\");",
													"});",
													"",
													"if (pm.response.code == 201) {",
													"    pm.variables.set(\"created_informatieobject_url\", pm.response.json().url);",
													"    pm.variables.set(\"NEXT_REQUEST_NAME\", \"(drc-001h) EnkelvoudigInformatieObject bijwerken met informatieobjecttype url die niet wijst naar informatieobjecttype is onmogelijk\");",
													"    postman.setNextRequest(\"(COMMON) Delete EnkelvoudigInformatieObject\");",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "7efcc0f7-8bcc-435b-afa0-581b4b34f42d",
												"exec": [
													"var body = JSON.parse(pm.variables.get(\"informatieobject_body\"));",
													"body.informatieobjecttype = pm.variables.get(\"mock_url\") + \"/200\";",
													"",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
											"host": [
												"{{drc_url}}"
											],
											"path": [
												"enkelvoudiginformatieobjecten"
											]
										}
									},
									"response": []
								},
								{
									"name": "(drc-001h) EnkelvoudigInformatieObject bijwerken met informatieobjecttype url die niet wijst naar informatieobjecttype is onmogelijk",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9c297a8c-30f1-428b-88ec-a6d6dc8800c1",
												"exec": [
													"pm.test.skip(\"EnkelvoudigInformatieObject bijwerken met informatieobjecttype url die niet wijst naar Informatieobjecttype geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"informatieobjecttype\");",
													"    pm.expect(error.code).to.be.equal(\"invalid-resource\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "d5457b08-8cbf-4f6b-aa5f-db290fffd7fd",
												"exec": [
													"var body = JSON.parse(pm.variables.get(\"informatieobject_body\"));",
													"body.informatieobjecttype = pm.variables.get(\"mock_url\") + \"/200\";",
													"",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{informatieobject_url}}",
											"host": [
												"{{informatieobject_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(drc-001i) EnkelvoudigInformatieObject deels bijwerken met informatieobjecttype url die niet wijst naar informatieobjecttype is onmogelijk",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9c297a8c-30f1-428b-88ec-a6d6dc8800c1",
												"exec": [
													"pm.test.skip(\"EnkelvoudigInformatieObject deels bijwerken met informatieobjecttype url die niet wijst naar Informatieobjecttype geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"informatieobjecttype\");",
													"    pm.expect(error.code).to.be.equal(\"invalid-resource\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "d5457b08-8cbf-4f6b-aa5f-db290fffd7fd",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"informatieobjecttype\": \"{{mock_url}}/200\"\n}"
										},
										"url": {
											"raw": "{{informatieobject_url}}",
											"host": [
												"{{informatieobject_url}}"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "drc-002",
							"item": [
								{
									"name": "(drc-002a) ObjectInformatieObject aanmaken met objecttype Zaak is mogelijk",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "069de5e5-b099-45d2-af4c-17009b2ec3be",
												"exec": [
													"pm.test(\"ObjectInformatieObject aanmaken met objecttype zaak en correcte object url geeft 201\", function() {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"pm.variables.set(\"zaakinformatieobject_body\", pm.request.body.raw);",
													"pm.variables.set(\"created_objectinformatieobject_url\", pm.response.json().url);",
													"",
													"if (pm.response.code != 201) {",
													"    postman.setNextRequest(\"(drc-002d) ObjectInformatieObject aanmaken met objecttype Besluit is mogelijk\");",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"informatieobject\": \"{{informatieobject_url}}\",\n\t\"object\": \"{{zaak_url}}\",\n\t\"objectType\": \"zaak\"\n}"
										},
										"url": {
											"raw": "{{drc_url}}/objectinformatieobjecten",
											"host": [
												"{{drc_url}}"
											],
											"path": [
												"objectinformatieobjecten"
											]
										}
									},
									"response": []
								},
								{
									"name": "(drc-002b) ObjectInformatieObject bijwerken is mogelijk",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "069de5e5-b099-45d2-af4c-17009b2ec3be",
												"exec": [
													"pm.test(\"ObjectInformatieObject bijwerken met valide gegevens geeft 200\", function() {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"ObjectInformatieObject bijwerken past gegevens correct aan\", function() {",
													"    pm.expect(pm.response.json().titel).to.be.equal(pm.variables.get(\"aangepaste_titel\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "8cadfd97-1f3d-459f-a1fa-9d42ab37d016",
												"exec": [
													"var body = JSON.parse(pm.variables.get(\"zaakinformatieobject_body\"));",
													"pm.variables.set(\"aangepaste_titel\", \"aangepast\");",
													"body.titel = pm.variables.get(\"aangepaste_titel\");",
													"",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{created_objectinformatieobject_url}}",
											"host": [
												"{{created_objectinformatieobject_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(drc-002c) ObjectInformatieObject deels bijwerken is mogelijk",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "069de5e5-b099-45d2-af4c-17009b2ec3be",
												"exec": [
													"pm.test(\"ObjectInformatieObject deels bijwerken met valide gegevens geeft 200\", function() {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"ObjectInformatieObject deels bijwerken past gegevens correct aan\", function() {",
													"    pm.expect(pm.response.json().beschrijving).to.be.equal(pm.variables.get(\"aangepaste_beschrijving\"));",
													"});",
													"",
													"pm.variables.set(\"NEXT_REQUEST_NAME\", \"(drc-002d) ObjectInformatieObject aanmaken met objecttype Besluit is mogelijk\");",
													"postman.setNextRequest(\"(COMMON) Delete ObjectInformatieObject\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "8cadfd97-1f3d-459f-a1fa-9d42ab37d016",
												"exec": [
													"pm.variables.set(\"aangepaste_beschrijving\", \"aangepaste beschrijving\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"beschrijving\": \"{{aangepaste_beschrijving}}\"\n}"
										},
										"url": {
											"raw": "{{created_objectinformatieobject_url}}",
											"host": [
												"{{created_objectinformatieobject_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(drc-002d) ObjectInformatieObject aanmaken met objecttype Besluit is mogelijk",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "069de5e5-b099-45d2-af4c-17009b2ec3be",
												"exec": [
													"pm.test(\"ObjectInformatieObject aanmaken met objecttype besluit en correcte object url geeft 201\", function() {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"if (pm.response.code == 201) {",
													"    pm.variables.set(\"created_objectinformatieobject_url\", pm.response.json().url);",
													"    pm.variables.set(\"NEXT_REQUEST_NAME\", \"(drc-002e) Valideren object url met objectType zaak op de ObjectInformatieObject-resource\");",
													"    postman.setNextRequest(\"(COMMON) Delete ObjectInformatieObject\");",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"informatieobject\": \"{{informatieobject_url}}\",\n\t\"object\": \"{{besluit_url}}\",\n\t\"objectType\": \"besluit\"\n}"
										},
										"url": {
											"raw": "{{drc_url}}/objectinformatieobjecten",
											"host": [
												"{{drc_url}}"
											],
											"path": [
												"objectinformatieobjecten"
											]
										}
									},
									"response": []
								},
								{
									"name": "(drc-002e) Valideren object url met objectType zaak op de ObjectInformatieObject-resource",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "069de5e5-b099-45d2-af4c-17009b2ec3be",
												"exec": [
													"pm.test(\"ObjectInformatieObject aanmaken met object url die niet resulteert in 200 geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"object\");",
													"    pm.expect(error.code).to.be.equal(\"bad-url\");",
													"});",
													"",
													"if (pm.response.code == 201) {",
													"    pm.variables.set(\"created_objectinformatieobject_url\", pm.response.json().url);",
													"    pm.variables.set(\"NEXT_REQUEST_NAME\", \"(drc-002d) Valideren object url met objectType besluit op de ObjectInformatieObject-resource\");",
													"    postman.setNextRequest(\"(COMMON) Delete ObjectInformatieObject\");",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"informatieobject\": \"{{informatieobject_url}}\",\n\t\"object\": \"{{mock_url}}/404\",\n\t\"objectType\": \"zaak\"\n}"
										},
										"url": {
											"raw": "{{drc_url}}/objectinformatieobjecten",
											"host": [
												"{{drc_url}}"
											],
											"path": [
												"objectinformatieobjecten"
											]
										}
									},
									"response": []
								},
								{
									"name": "(drc-002f) Valideren object url met objectType besluit op de ObjectInformatieObject-resource",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "069de5e5-b099-45d2-af4c-17009b2ec3be",
												"exec": [
													"pm.test(\"ObjectInformatieObject aanmaken met object url die niet resulteert in 200 geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"object\");",
													"    pm.expect(error.code).to.be.equal(\"bad-url\");",
													"});",
													"",
													"if (pm.response.code == 201) {",
													"    pm.variables.set(\"created_objectinformatieobject_url\", pm.response.json().url);",
													"    pm.variables.set(\"NEXT_REQUEST_NAME\", \"(drc-002e) Valideren object wijst naar Zaak op de ObjectInformatieObject-resource\");",
													"    postman.setNextRequest(\"(COMMON) Delete ObjectInformatieObject\");",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"informatieobject\": \"{{informatieobject_url}}\",\n\t\"object\": \"{{mock_url}}/404\",\n\t\"objectType\": \"besluit\"\n}"
										},
										"url": {
											"raw": "{{drc_url}}/objectinformatieobjecten",
											"host": [
												"{{drc_url}}"
											],
											"path": [
												"objectinformatieobjecten"
											]
										}
									},
									"response": []
								},
								{
									"name": "(drc-002g) Valideren object wijst naar Zaak op de ObjectInformatieObject-resource",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "069de5e5-b099-45d2-af4c-17009b2ec3be",
												"exec": [
													"pm.test.skip(\"ObjectInformatieObject aanmaken met objecttype zaak en object url die niet wijst naar Zaak geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"object\");",
													"    pm.expect(error.code).to.be.equal(\"invalid-resource\");",
													"});",
													"",
													"if (pm.response.code == 201) {",
													"    pm.variables.set(\"created_objectinformatieobject_url\", pm.response.json().url);",
													"    pm.variables.set(\"NEXT_REQUEST_NAME\", \"(drc-002f) Valideren object wijst naar Besluit op de ObjectInformatieObject-resource\");",
													"    postman.setNextRequest(\"(COMMON) Delete ObjectInformatieObject\");",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"informatieobject\": \"{{informatieobject_url}}\",\n\t\"object\": \"{{mock_url}}/200\",\n\t\"objectType\": \"zaak\"\n}"
										},
										"url": {
											"raw": "{{drc_url}}/objectinformatieobjecten",
											"host": [
												"{{drc_url}}"
											],
											"path": [
												"objectinformatieobjecten"
											]
										}
									},
									"response": []
								},
								{
									"name": "(drc-002h) Valideren object wijst naar Besluit op de ObjectInformatieObject-resource",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "069de5e5-b099-45d2-af4c-17009b2ec3be",
												"exec": [
													"pm.test.skip(\"ObjectInformatieObject aanmaken met objecttype besluit en object url die niet wijst naar Besluit geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"object\");",
													"    pm.expect(error.code).to.be.equal(\"invalid-resource\");",
													"});",
													"",
													"if (pm.response.code == 201) {",
													"    pm.variables.set(\"created_objectinformatieobject_url\", pm.response.json().url);",
													"    pm.variables.set(\"NEXT_REQUEST_NAME\", \"(drc-003a) ObjectInformatieObject aanmaken met objectType zaak zet juiste aardRelatie\");",
													"    postman.setNextRequest(\"(COMMON) Delete ObjectInformatieObject\");",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"informatieobject\": \"{{informatieobject_url}}\",\n\t\"object\": \"{{mock_url}}/200\",\n\t\"objectType\": \"besluit\"\n}"
										},
										"url": {
											"raw": "{{drc_url}}/objectinformatieobjecten",
											"host": [
												"{{drc_url}}"
											],
											"path": [
												"objectinformatieobjecten"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "drc-003 (NI)",
							"item": [
								{
									"name": "(drc-003a) ObjectInformatieObject aanmaken met objectType zaak zet juiste aardRelatie",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dfd556ab-917f-454d-8c90-3f9ee3bf685e",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"ObjectInformatieObject aanmaken met objectType zaak zet aardRelatie op hoort_bij\", function() {",
													"    pm.expect(jsonData.aardRelatieWeergave).to.include(\"Hoort bij\");",
													"});",
													"",
													"pm.test(\"ObjectInformatieObject aanmaken met objectType zaak gebruikt gegeven titel en beschrijving\", function() {",
													"    pm.expect(jsonData.titel).to.be.equal(pm.variables.get(\"titel\"));",
													"    pm.expect(jsonData.beschrijving).to.be.equal(pm.variables.get(\"beschrijving\"));",
													"});",
													"",
													"pm.test(\"ObjectInformatieObject aanmaken met objectType zaak zet registratiedatum op moment van aanmaken\", function() {",
													"    var timestamp = new Date();",
													"    var date_today = timestamp.toISOString().split(\"T\")[0];",
													"    pm.expect(jsonData.registratiedatum.split(\"T\")[0]).to.be.equal(date_today);",
													"});",
													"",
													"if(pm.response.code == 201) {",
													"    pm.variables.set(\"created_objectinformatieobject_url\", pm.response.json().url);",
													"    pm.variables.set(\"NEXT_REQUEST_NAME\", \"(drc-003b) ObjectInformatieObject aanmaken met objectType besluit zet juiste aardRelatie\");",
													"    postman.setNextRequest(\"(COMMON) Delete ObjectInformatieObject\");   ",
													"}",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "e46ef878-1136-4610-8936-b0b8dbbc3818",
												"exec": [
													"pm.variables.set(\"titel\", \"testtitel\");",
													"pm.variables.set(\"beschrijving\", \"testbijschrijving\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"informatieobject\": \"{{informatieobject_url}}\",\n\t\"object\": \"{{zaak_url}}\",\n\t\"objectType\": \"zaak\",\n\t\"titel\": \"{{titel}}\",\n\t\"beschrijving\": \"{{beschrijving}}\"\n}"
										},
										"url": {
											"raw": "{{drc_url}}/objectinformatieobjecten",
											"host": [
												"{{drc_url}}"
											],
											"path": [
												"objectinformatieobjecten"
											]
										}
									},
									"response": []
								},
								{
									"name": "(drc-003b) ObjectInformatieObject aanmaken met objectType besluit zet juiste aardRelatie",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dfd556ab-917f-454d-8c90-3f9ee3bf685e",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test.skip(\"ObjectInformatieObject aanmaken met objectType besluit zet aardRelatie op legt_vast\", function() {",
													"    pm.expect(jsonData.aardRelatieWeergave).to.include(\"Legt vast\");",
													"});",
													"",
													"pm.test.skip(\"ObjectInformatieObject aanmaken met objectType besluit negeert titel, beschrijving en registratiedatum\", function() {",
													"    pm.expect(jsonData.titel).to.be.equal(undefined);",
													"    pm.expect(jsonData.beschrijving).to.be.equal(undefined);",
													"    pm.expect(jsonData.registratiedatum).to.be.equal(undefined); ",
													"});",
													"",
													"pm.variables.set(\"besluitinformatieobject_body\", pm.request.body.raw);",
													"pm.variables.set(\"created_objectinformatieobject_url\", pm.response.json().url);",
													"",
													"if(pm.response.code != 201) {",
													"    postman.setNextRequest(\"Create ZaakInformatieObject\");",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "e46ef878-1136-4610-8936-b0b8dbbc3818",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"informatieobject\": \"{{informatieobject_url}}\",\n\t\"object\": \"{{besluit_url}}\",\n\t\"objectType\": \"besluit\",\n\t\"titel\": \"titel\",\n\t\"beschrijving\": \"beschrijving\"\n}"
										},
										"url": {
											"raw": "{{drc_url}}/objectinformatieobjecten",
											"host": [
												"{{drc_url}}"
											],
											"path": [
												"objectinformatieobjecten"
											]
										}
									},
									"response": []
								},
								{
									"name": "(drc-003c) ObjectInformatieObject met objectType besluit bijwerken titel, registratiedatum en beschrijving worden genegeerd",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dfd556ab-917f-454d-8c90-3f9ee3bf685e",
												"exec": [
													"pm.test(\"ObjectInformatieObject bijwerken met objectType besluit negeert titel, beschrijving en registratiedatum\", function() {",
													"    var jsonData = pm.response.json();",
													"    ",
													"    pm.expect(jsonData.titel).to.be.equal(undefined);",
													"    pm.expect(jsonData.beschrijving).to.be.equal(undefined);",
													"    pm.expect(jsonData.registratiedatum).to.be.equal(undefined); ",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "e46ef878-1136-4610-8936-b0b8dbbc3818",
												"exec": [
													"var body = JSON.parse(pm.variables.get(\"besluitinformatieobject_body\"));",
													"body.titel = \"test\";",
													"body.beschrijving = \"test\";",
													"body.registratiedatum = \"2019-01-01T00:00:00\";",
													"",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{created_objectinformatieobject_url}}",
											"host": [
												"{{created_objectinformatieobject_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(drc-003d) ObjectInformatieObject met objectType besluit deels bijwerken titel, registratiedatum en beschrijving worden genegeerd",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dfd556ab-917f-454d-8c90-3f9ee3bf685e",
												"exec": [
													"pm.test.skip(\"ObjectInformatieObject deels bijwerken met objectType besluit negeert titel, beschrijving en registratiedatum\", function() {",
													"    var jsonData = pm.response.json();",
													"    ",
													"    pm.expect(jsonData.titel).to.be.equal(undefined);",
													"    pm.expect(jsonData.beschrijving).to.be.equal(undefined);",
													"    pm.expect(jsonData.registratiedatum).to.be.equal(undefined); ",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "e46ef878-1136-4610-8936-b0b8dbbc3818",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"titel\": \"test\",\n\t\"beschrijving\": \"test\",\n\t\"registratiedatum\": \"2019-01-01T00:00:00\"\n}"
										},
										"url": {
											"raw": "{{created_objectinformatieobject_url}}",
											"host": [
												"{{created_objectinformatieobject_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(drc-003e) ObjectInformatieObject bijwerken relatie aanpassen niet toegestaan",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0e5f1290-a48b-437c-bd82-48e5c9fef244",
												"exec": [
													"pm.test.skip(\"ObjectInformatieObject bijwerken relatie aanpassen geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "58ddc1f5-036d-4ed6-aa24-db9c31b9f2b5",
												"exec": [
													"var body = JSON.parse(pm.variables.get(\"besluitinformatieobject_body\"));",
													"body.aardRelatieWeergave = \"aangepast\";",
													"",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{created_objectinformatieobject_url}}",
											"host": [
												"{{created_objectinformatieobject_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(drc-003f) ObjectInformatieObject deels bijwerken relatie aanpassen niet toegestaan",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0e5f1290-a48b-437c-bd82-48e5c9fef244",
												"exec": [
													"pm.test.skip(\"ObjectInformatieObject deels bijwerken relatie aanpassen geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "58ddc1f5-036d-4ed6-aa24-db9c31b9f2b5",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"aardRelatieWeergave\": \"aangepast\"\n}"
										},
										"url": {
											"raw": "{{created_objectinformatieobject_url}}",
											"host": [
												"{{created_objectinformatieobject_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create another Zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "01e98b0e-0bea-40a1-8485-67695fb020b3",
												"exec": [
													"pm.variables.set(\"created_zaak_url\", pm.response.json().url);",
													"",
													"if(pm.response.code != 201) {",
													"    postman.setNextRequest(\"(drc-003i) ObjectInformatieObject bijwerken objectType aanpassen niet toegestaan\");",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{zaak_body}}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										},
										"description": "Maakt een Zaak aan die gebruikt zal worden in de tests, deze zaak wordt na de tests weer verwijderd.\n\nDe body van deze Zaak zal ook als variabele opgeslagen worden en gebruikt worden (met kleine aanpassingen iedere keer) in de requests voor de validatie tests, om te voorkomen dat telkens hetzelfde body gekopieerd moet worden."
									},
									"response": []
								},
								{
									"name": "(drc-003g) ObjectInformatieObject bijwerken object aanpassen niet toegestaan",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0e5f1290-a48b-437c-bd82-48e5c9fef244",
												"exec": [
													"pm.test(\"ObjectInformatieObject bijwerken object aanpassen geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"object\");",
													"    pm.expect(error.code).to.be.equal(\"wijzigen-niet-toegelaten\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "58ddc1f5-036d-4ed6-aa24-db9c31b9f2b5",
												"exec": [
													"var body = JSON.parse(pm.variables.get(\"besluitinformatieobject_body\"));",
													"body.object = pm.variables.get(\"created_zaak_url\");",
													"",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{created_objectinformatieobject_url}}",
											"host": [
												"{{created_objectinformatieobject_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(drc-003h) ObjectInformatieObject deels bijwerken object aanpassen niet toegestaan",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0e5f1290-a48b-437c-bd82-48e5c9fef244",
												"exec": [
													"pm.test(\"ObjectInformatieObject deels bijwerken object aanpassen geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"object\");",
													"    pm.expect(error.code).to.be.equal(\"wijzigen-niet-toegelaten\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "58ddc1f5-036d-4ed6-aa24-db9c31b9f2b5",
												"exec": [
													"var body = JSON.parse(pm.variables.get(\"besluitinformatieobject_body\"));",
													"body.object = pm.variables.get(\"created_zaak_url\");",
													"",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{created_objectinformatieobject_url}}",
											"host": [
												"{{created_objectinformatieobject_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Created Zaak",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(drc-003i) ObjectInformatieObject bijwerken objectType aanpassen niet toegestaan",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0e5f1290-a48b-437c-bd82-48e5c9fef244",
												"exec": [
													"pm.test(\"ObjectInformatieObject bijwerken objectType aanpassen geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"objectType\");",
													"    pm.expect(error.code).to.be.equal(\"wijzigen-niet-toegelaten\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "58ddc1f5-036d-4ed6-aa24-db9c31b9f2b5",
												"exec": [
													"var body = JSON.parse(pm.variables.get(\"besluitinformatieobject_body\"));",
													"body.objectType = \"zaak\";",
													"",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{created_objectinformatieobject_url}}",
											"host": [
												"{{created_objectinformatieobject_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(drc-003j) ObjectInformatieObject deels bijwerken objectType aanpassen niet toegestaan",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0e5f1290-a48b-437c-bd82-48e5c9fef244",
												"exec": [
													"pm.test(\"ObjectInformatieObject bijwerken objectType aanpassen geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"objectType\");",
													"    pm.expect(error.code).to.be.equal(\"wijzigen-niet-toegelaten\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "58ddc1f5-036d-4ed6-aa24-db9c31b9f2b5",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"objectType\": \"zaak\"\n}"
										},
										"url": {
											"raw": "{{created_objectinformatieobject_url}}",
											"host": [
												"{{created_objectinformatieobject_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create EnkelvoudigInformatieObject",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ccc02e3a-7f7d-4e1d-98b8-c5445106fc49",
												"exec": [
													"pm.variables.set(\"created_informatieobject_url\", pm.response.json().url);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{informatieobject_body}}"
										},
										"url": {
											"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
											"host": [
												"{{drc_url}}"
											],
											"path": [
												"enkelvoudiginformatieobjecten"
											]
										}
									},
									"response": []
								},
								{
									"name": "(drc-003k) ObjectInformatieObject bijwerken informatieobject aanpassen niet toegestaan",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0e5f1290-a48b-437c-bd82-48e5c9fef244",
												"exec": [
													"pm.test(\"ObjectInformatieObject bijwerken informatieobject aanpassen geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"informatieobject\");",
													"    pm.expect(error.code).to.be.equal(\"wijzigen-niet-toegelaten\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "58ddc1f5-036d-4ed6-aa24-db9c31b9f2b5",
												"exec": [
													"var body = JSON.parse(pm.variables.get(\"besluitinformatieobject_body\"));",
													"body.informatieobject = pm.variables.get(\"created_informatieobject_url\");",
													"",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{created_objectinformatieobject_url}}",
											"host": [
												"{{created_objectinformatieobject_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(drc-003l) ObjectInformatieObject bijwerken informatieobject aanpassen niet toegestaan",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0e5f1290-a48b-437c-bd82-48e5c9fef244",
												"exec": [
													"pm.test(\"ObjectInformatieObject bijwerken informatieobject aanpassen geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"informatieobject\");",
													"    pm.expect(error.code).to.be.equal(\"wijzigen-niet-toegelaten\");",
													"});",
													"",
													"if(pm.variables.get(\"created_objectinformatieobject_url\")) {",
													"    pm.variables.set(\"NEXT_REQUEST_NAME\", \"Create ZaakInformatieObject\");",
													"    postman.setNextRequest(\"(COMMON) Delete ObjectInformatieObject\");",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "58ddc1f5-036d-4ed6-aa24-db9c31b9f2b5",
												"exec": [
													"var body = JSON.parse(pm.variables.get(\"besluitinformatieobject_body\"));",
													"body.informatieobject = pm.variables.get(\"created_informatieobject_url\");",
													"",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"informatieobject\": \"{{created_informatieobject_url}}\"\n}"
										},
										"url": {
											"raw": "{{created_objectinformatieobject_url}}",
											"host": [
												"{{created_objectinformatieobject_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete EnkelvoudigInformatieObject",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0d74cea4-7022-449e-9cbd-5b4f52258d7b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{created_informatieobject_url}}",
											"host": [
												"{{created_informatieobject_url}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "cea89e31-0249-4665-a54d-95c87df3dd69",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "e0054702-694e-4828-ba3d-90d229fda371",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "drc-004",
							"item": [
								{
									"name": "Create ZaakInformatieObject",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bf989785-8208-4f87-b2b4-d3f27af2119c",
												"exec": [
													"pm.variables.set(\"created_objectinformatieobject_url\", pm.response.json().url);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"informatieobject\": \"{{informatieobject_url}}\",\n\t\"object\": \"{{zaak_url}}\",\n\t\"objectType\": \"zaak\",\n\t\"titel\": \"{{titel}}\",\n\t\"beschrijving\": \"{{beschrijving}}\"\n}"
										},
										"url": {
											"raw": "{{drc_url}}/objectinformatieobjecten",
											"host": [
												"{{drc_url}}"
											],
											"path": [
												"objectinformatieobjecten"
											]
										}
									},
									"response": []
								},
								{
									"name": "(drc-004a) ZaakInformatieObject aanmaken maakt relatie ook in zrc",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cd5a5665-361e-4953-8337-85365d286ea5",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test.skip(\"ZaakInformatieObject aanmaken maakt relatie ook in zrc\", function() {",
													"    pm.expect(jsonData.length).to.be.equal(1);",
													"});",
													"",
													"pm.test.skip(\"Zaakinformatieobject in zrc heeft alleen velden url en informatieobject\", function() {",
													"    pm.expect(jsonData[0]).to.have.property(\"url\");",
													"    pm.expect(jsonData[0]).to.have.property(\"informatieobject\");",
													"    pm.expect(Object.keys(jsonData[0]).length).to.be.equal(2);",
													"});",
													"",
													"pm.test.skip(\"Zaakinformatieobject in zrc wijst naar juiste EnkelvoudigInformatieObject\", function() {",
													"    pm.expect(jsonData[0].informatieobject).to.be.equal(pm.variables.get(\"informatieobject_url\"));",
													"});",
													"",
													"if(pm.variables.get(\"created_objectinformatieobject_url\")) {",
													"    pm.variables.set(\"NEXT_REQUEST_NAME\", \"Create BesluitInformatieObject\");",
													"    postman.setNextRequest(\"(COMMON) Delete ObjectInformatieObject\");",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{zaak_url}}/informatieobjecten",
											"host": [
												"{{zaak_url}}"
											],
											"path": [
												"informatieobjecten"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create BesluitInformatieObject",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bf989785-8208-4f87-b2b4-d3f27af2119c",
												"exec": [
													"pm.variables.set(\"created_objectinformatieobject_url\", pm.response.json().url);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"informatieobject\": \"{{informatieobject_url}}\",\n\t\"object\": \"{{besluit_url}}\",\n\t\"objectType\": \"besluit\"\n}"
										},
										"url": {
											"raw": "{{drc_url}}/objectinformatieobjecten",
											"host": [
												"{{drc_url}}"
											],
											"path": [
												"objectinformatieobjecten"
											]
										}
									},
									"response": []
								},
								{
									"name": "(drc-004b) BesluitInformatieObject aanmaken maakt relatie ook in zrc",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cd5a5665-361e-4953-8337-85365d286ea5",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"BesluitInformatieObject aanmaken maakt relatie ook in brc\", function() {",
													"    pm.expect(jsonData.length).to.be.equal(1);",
													"});",
													"",
													"pm.test(\"Besluitinformatieobject in brc heeft alleen velden url en informatieobject\", function() {",
													"    pm.expect(jsonData[0]).to.have.property(\"url\");",
													"    pm.expect(jsonData[0]).to.have.property(\"informatieobject\");",
													"    pm.expect(Object.keys(jsonData[0]).length).to.be.equal(2);",
													"});",
													"",
													"pm.test.skip(\"Besluitinformatieobject in brc wijst naar juiste EnkelvoudigInformatieObject\", function() {",
													"    pm.expect(jsonData[0].informatieobject).to.be.equal(pm.variables.get(\"informatieobject_url\"));",
													"});",
													"",
													"if(pm.variables.get(\"created_objectinformatieobject_url\")) {",
													"    pm.variables.set(\"NEXT_REQUEST_NAME\", \"Create EnkelvoudigInformatieObject with status in bewerking\");",
													"    postman.setNextRequest(\"(COMMON) Delete ObjectInformatieObject\");",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{besluit_url}}/informatieobjecten",
											"host": [
												"{{besluit_url}}"
											],
											"path": [
												"informatieobjecten"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "drc-005 (WIP) (NI)",
							"item": [
								{
									"name": "Create EnkelvoudigInformatieObject with status in bewerking",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "52592cd1-86f0-4bbd-8bfb-7a641b89cedd",
												"exec": [
													"var body = JSON.parse(pm.variables.get(\"informatieobject_body\"));",
													"body.status = \"in bewerking\";",
													"",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "728ef173-68ae-4bd0-a484-852e477b5999",
												"exec": [
													"pm.variables.set(\"created_informatieobject_url\", pm.response.json().url);",
													"",
													"// TODO is dit handig?",
													"if(pm.response.code != 201) {",
													"    postman.setNextRequest(\"Create EnkelvoudigInformatieObject with status ter vaststelling\");",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
											"host": [
												"{{drc_url}}"
											],
											"path": [
												"enkelvoudiginformatieobjecten"
											]
										}
									},
									"response": []
								},
								{
									"name": "(drc-005a) EnkelvoudigInformatieObject bijwerken verzenddatum zetten als status in bewerking is niet toegestaan",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "4fe7f30d-9def-45d9-aa11-a296125f4ff3",
												"exec": [
													"var body = JSON.parse(pm.variables.get(\"informatieobject_body\"));",
													"body.status = \"in bewerking\";",
													"body.verzenddatum = \"2019-01-01\";",
													"",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "210802e1-bb4f-4d17-8aeb-8351fc60997b",
												"exec": [
													"pm.test.skip(\"EnkelvoudigInformatieObject verzenddatum zetten als status in bewerking geeft 400\", function() {",
													"    pm.response.to.have.status(400); ",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{created_informatieobject_url}}",
											"host": [
												"{{created_informatieobject_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(drc-005b) EnkelvoudigInformatieObject deels bijwerken verzenddatum zetten als status in bewerking is niet toegestaan",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "4fe7f30d-9def-45d9-aa11-a296125f4ff3",
												"exec": [
													"var body = JSON.parse(pm.variables.get(\"informatieobject_body\"));",
													"body.status = \"in bewerking\";",
													"body.verzenddatum = \"2019-01-01\";",
													"",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "210802e1-bb4f-4d17-8aeb-8351fc60997b",
												"exec": [
													"pm.test.skip(\"EnkelvoudigInformatieObject verzenddatum zetten als status in bewerking geeft 400\", function() {",
													"    pm.response.to.have.status(400); ",
													"});",
													"",
													"if(pm.variables.get(\"created_informatieobject_url\")) {",
													"    pm.variables.set(\"NEXT_REQUEST_NAME\", \"Create EnkelvoudigInformatieObject with status ter vaststelling\");",
													"    postman.setNextRequest(\"(COMMON) Delete EnkelvoudigInformatieObject\");",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{created_informatieobject_url}}",
											"host": [
												"{{created_informatieobject_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create EnkelvoudigInformatieObject with status ter vaststelling",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "52592cd1-86f0-4bbd-8bfb-7a641b89cedd",
												"exec": [
													"var body = JSON.parse(pm.variables.get(\"informatieobject_body\"));",
													"body.status = \"in bewerking\";",
													"",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "728ef173-68ae-4bd0-a484-852e477b5999",
												"exec": [
													"pm.variables.set(\"created_informatieobject_url\", pm.response.json().url);",
													"",
													"// TODO is dit handig?",
													"if(pm.response.code != 201) {",
													"    postman.setNextRequest(\"(drc-006a) Valideren default indicatie gebruiksrecht bij aanmaken EnkelvoudigInformatieObject\");",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
											"host": [
												"{{drc_url}}"
											],
											"path": [
												"enkelvoudiginformatieobjecten"
											]
										}
									},
									"response": []
								},
								{
									"name": "(drc-005c) EnkelvoudigInformatieObject bijwerken verzenddatum zetten als status ter vaststelling is niet toegestaan",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "4fe7f30d-9def-45d9-aa11-a296125f4ff3",
												"exec": [
													"var body = JSON.parse(pm.variables.get(\"informatieobject_body\"));",
													"body.status = \"ter vaststelling\";",
													"body.verzenddatum = \"2019-01-01\";",
													"",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "98c02693-1303-4ef4-8569-7a8af71ace58",
												"exec": [
													"pm.test.skip(\"EnkelvoudigInformatieObject verzenddatum zetten als status ter vaststelling geeft 400\", function() {",
													"    pm.response.to.have.status(400); ",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{created_informatieobject_url}}",
											"host": [
												"{{created_informatieobject_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(drc-005d) EnkelvoudigInformatieObject deels bijwerken verzenddatum zetten als status ter vaststelling is niet toegestaan",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "4fe7f30d-9def-45d9-aa11-a296125f4ff3",
												"exec": [
													"var body = JSON.parse(pm.variables.get(\"informatieobject_body\"));",
													"body.status = \"ter vaststelling\";",
													"body.verzenddatum = \"2019-01-01\";",
													"",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "98c02693-1303-4ef4-8569-7a8af71ace58",
												"exec": [
													"pm.test.skip(\"EnkelvoudigInformatieObject verzenddatum zetten als status ter vaststelling geeft 400\", function() {",
													"    pm.response.to.have.status(400); ",
													"});",
													"",
													"if(pm.variables.get(\"created_informatieobject_url\")) {",
													"    pm.variables.set(\"NEXT_REQUEST_NAME\", \"(drc-006a) Valideren default indicatie gebruiksrecht bij aanmaken EnkelvoudigInformatieObject\");",
													"    postman.setNextRequest(\"(COMMON) Delete EnkelvoudigInformatieObject\");",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{created_informatieobject_url}}",
											"host": [
												"{{created_informatieobject_url}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7590e3e9-e6c8-4cba-8915-9f11b7ad32af",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "f572b8fb-27fc-42b3-9228-2eff2807a99c",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "drc-006",
							"item": [
								{
									"name": "(drc-006a) Valideren default indicatie gebruiksrecht bij aanmaken EnkelvoudigInformatieObject",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "df7215fd-6f12-404c-b47d-6628ae6b0b69",
												"exec": [
													"pm.test(\"EnkelvoudigInformatieObject aanmaken zet indicatie gebruiksrecht op null indien niet gedefinieerd\", function() {",
													"    pm.expect(pm.response.json().indicatieGebruiksrecht).to.be.equal(null);",
													"});",
													"",
													"if (pm.response.code == 201) {",
													"    pm.variables.set(\"created_informatieobject_url\", pm.response.json().url);",
													"    pm.variables.set(\"NEXT_REQUEST_NAME\", \"(drc-006b) EnkelvoudigInformatieObject aanmaken met indicatie gebruiksrecht true vereist Gebruiksrechten\");",
													"    postman.setNextRequest(\"(COMMON) Delete EnkelvoudigInformatieObject\");",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{informatieobject_body}}"
										},
										"url": {
											"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
											"host": [
												"{{drc_url}}"
											],
											"path": [
												"enkelvoudiginformatieobjecten"
											]
										}
									},
									"response": []
								},
								{
									"name": "(drc-006b) EnkelvoudigInformatieObject aanmaken met indicatie gebruiksrecht true vereist Gebruiksrechten",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "df7215fd-6f12-404c-b47d-6628ae6b0b69",
												"exec": [
													"pm.test(\"EnkelvoudigInformatieObject aanmaken met indicatie gebruiksrecht true zonder Gebruiksrechten in drc geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"indicatieGebruiksrecht\");",
													"    pm.expect(error.code).to.be.equal(\"missing-gebruiksrechten\");",
													"});",
													"",
													"if (pm.response.code == 201) {",
													"    pm.variables.set(\"created_informatieobject_url\", pm.response.json().url);",
													"    pm.variables.set(\"NEXT_REQUEST_NAME\", \"Create Gebruiksrechten\");",
													"    postman.setNextRequest(\"(COMMON) Delete EnkelvoudigInformatieObject\");",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "bf34ae64-12e7-403e-91e3-c36f821e7135",
												"exec": [
													"var body = JSON.parse(pm.variables.get(\"informatieobject_body\"));",
													"body.indicatieGebruiksrecht = true;",
													"",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
											"host": [
												"{{drc_url}}"
											],
											"path": [
												"enkelvoudiginformatieobjecten"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Gebruiksrechten",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "71ace9a4-f7ae-457c-94e9-7a0501d4f10e",
												"exec": [
													"pm.variables.set(\"gebruiksrechten_url\", pm.response.json().url);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"informatieobject\": \"{{informatieobject_url}}\",\n\t\"startdatum\": \"2019-01-01T12:00:00\",\n\t\"omschrijvingVoorwaarden\": \"test\"\n}"
										},
										"url": {
											"raw": "{{drc_url}}/gebruiksrechten",
											"host": [
												"{{drc_url}}"
											],
											"path": [
												"gebruiksrechten"
											]
										}
									},
									"response": []
								},
								{
									"name": "(drc-006c) EnkelvoudigInformatieObject bijwerken met indicatie gebruiksrecht true en Gebruiksrechten mogelijk",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "df7215fd-6f12-404c-b47d-6628ae6b0b69",
												"exec": [
													"pm.test(\"EnkelvoudigInformatieObject bijwerken met indicatie gebruiksrecht true en Gebruiksrechten in drc geeft 200\", function() {",
													"    pm.response.to.have.status(200);",
													"});",
													"    ",
													"pm.test(\"EnkelvoudigInformatieObject bijwerken met indicatie gebruiksrecht true en Gebruiksrechten in drc past indicatie gebruiksrecht correct aan\", function() {",
													"    pm.expect(pm.response.json().indicatieGebruiksrecht).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "bf34ae64-12e7-403e-91e3-c36f821e7135",
												"exec": [
													"var body = JSON.parse(pm.variables.get(\"informatieobject_body\"));",
													"body.indicatieGebruiksrecht = true;",
													"",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{informatieobject_url}}",
											"host": [
												"{{informatieobject_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(drc-006d) EnkelvoudigInformatieObject deels bijwerken met indicatie gebruiksrecht true en Gebruiksrechten mogelijk",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "df7215fd-6f12-404c-b47d-6628ae6b0b69",
												"exec": [
													"pm.test(\"EnkelvoudigInformatieObject deels bijwerken met indicatie gebruiksrecht true en Gebruiksrechten in drc geeft 200\", function() {",
													"    pm.response.to.have.status(200);",
													"});",
													"    ",
													"pm.test(\"EnkelvoudigInformatieObject deels bijwerken met indicatie gebruiksrecht true en Gebruiksrechten in drc past indicatie gebruiksrecht correct aan\", function() {",
													"    pm.expect(pm.response.json().indicatieGebruiksrecht).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "bf34ae64-12e7-403e-91e3-c36f821e7135",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"indicatieGebruiksrecht\": true\n}"
										},
										"url": {
											"raw": "{{informatieobject_url}}",
											"host": [
												"{{informatieobject_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Gebruiksrechten",
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gebruiksrechten_url}}",
											"host": [
												"{{gebruiksrechten_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(drc-006d) Verwijderen Gebruiksrechten zet EnkelvoudigInformatieObject.indicatieGebruiksrecht op null",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1ce1a3ed-5044-456a-a316-5ff0cc82bf82",
												"exec": [
													"pm.test(\"Verwijderen Gebruiksrechten zet EnkelvoudigInformatieObject.indicatieGebruiksrecht op null\", function() {",
													"    pm.expect(pm.response.json().indicatieGebruiksrecht).to.be.equal(null); ",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{informatieobject_url}}",
											"host": [
												"{{informatieobject_url}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "fa33490a-e966-4d36-8137-3dfec69a7d7b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "2021128f-a842-46d2-b715-8e4a60248762",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "drc-007",
							"item": [
								{
									"name": "(drc-007a) EnkelvoudigInformatieObject aanmaken met expliciet gedefinieerde vertrouwelijkheidaanduiding",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d8dbc102-90f7-46c7-a6c2-10e412c9d831",
												"exec": [
													"pm.variables.set(\"expliciete_vertrouwelijkheidaanduiding\", \"vertrouwelijk\");",
													"",
													"var body = JSON.parse(pm.variables.get(\"informatieobject_body\"));",
													"body.vertrouwelijkheidaanduiding = pm.variables.get(\"expliciete_vertrouwelijkheidaanduiding\");",
													"",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "c8fb97ab-69f9-451b-85f2-9a1efbf412cb",
												"exec": [
													"pm.test(\"EnkelvoudigInformatieObject aanmaken met expliciet gedefinieerde vertrouwelijkheidaanduiding krijgt die waarde toegekend\", function() {",
													"    pm.expect(pm.response.json().vertrouwelijkheidaanduiding).to.be.equal(pm.variables.get(\"expliciete_vertrouwelijkheidaanduiding\"));",
													"});",
													"",
													"if(pm.response.code == 201) {",
													"    pm.variables.set(\"created_informatieobject_url\", pm.response.json().url);",
													"    pm.variables.set(\"NEXT_REQUEST_NAME\", \"(drc-007b) EnkelvoudigInformatieObject bijwerken met expliciet gedefinieerde vertrouwelijkheidaanduiding\");",
													"    postman.setNextRequest(\"(COMMON) Delete EnkelvoudigInformatieObject\");",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
											"host": [
												"{{drc_url}}"
											],
											"path": [
												"enkelvoudiginformatieobjecten"
											]
										}
									},
									"response": []
								},
								{
									"name": "(drc-007b) EnkelvoudigInformatieObject bijwerken met expliciet gedefinieerde vertrouwelijkheidaanduiding",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d8dbc102-90f7-46c7-a6c2-10e412c9d831",
												"exec": [
													"pm.variables.set(\"expliciete_vertrouwelijkheidaanduiding\", \"vertrouwelijk\");",
													"",
													"var body = JSON.parse(pm.variables.get(\"informatieobject_body\"));",
													"body.vertrouwelijkheidaanduiding = pm.variables.get(\"expliciete_vertrouwelijkheidaanduiding\");",
													"",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "c8fb97ab-69f9-451b-85f2-9a1efbf412cb",
												"exec": [
													"pm.test(\"EnkelvoudigInformatieObject aanmaken met expliciet gedefinieerde vertrouwelijkheidaanduiding krijgt die waarde toegekend\", function() {",
													"    pm.expect(pm.response.json().vertrouwelijkheidaanduiding).to.be.equal(pm.variables.get(\"expliciete_vertrouwelijkheidaanduiding\"));",
													"});",
													"",
													"if(pm.response.code == 201) {",
													"    pm.variables.set(\"created_informatieobject_url\", pm.response.json().url);",
													"    pm.variables.set(\"NEXT_REQUEST_NAME\", \"Retrieve Informatieobjecttype vertrouwelijkheidaanduiding\");",
													"    postman.setNextRequest(\"(COMMON) Delete EnkelvoudigInformatieObject\");",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{informatieobject_url}}",
											"host": [
												"{{informatieobject_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(drc-007c) EnkelvoudigInformatieObject deels bijwerken met expliciet gedefinieerde vertrouwelijkheidaanduiding",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d8dbc102-90f7-46c7-a6c2-10e412c9d831",
												"exec": [
													"pm.variables.set(\"expliciete_vertrouwelijkheidaanduiding\", \"zeer geheim\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "c8fb97ab-69f9-451b-85f2-9a1efbf412cb",
												"exec": [
													"pm.test(\"EnkelvoudigInformatieObject aanmaken met expliciet gedefinieerde vertrouwelijkheidaanduiding krijgt die waarde toegekend\", function() {",
													"    pm.expect(pm.response.json().vertrouwelijkheidaanduiding).to.be.equal(pm.variables.get(\"expliciete_vertrouwelijkheidaanduiding\"));",
													"});",
													"",
													"if(pm.response.code == 201) {",
													"    pm.variables.set(\"created_informatieobject_url\", pm.response.json().url);",
													"    pm.variables.set(\"NEXT_REQUEST_NAME\", \"Retrieve Informatieobjecttype vertrouwelijkheidaanduiding\");",
													"    postman.setNextRequest(\"(COMMON) Delete EnkelvoudigInformatieObject\");",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"vertrouwelijkheidaanduiding\": \"{{expliciete_vertrouwelijkheidaanduiding}}\"\n}"
										},
										"url": {
											"raw": "{{informatieobject_url}}",
											"host": [
												"{{informatieobject_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Retrieve Informatieobjecttype vertrouwelijkheidaanduiding",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6cf5e882-b0d7-481a-a9ed-e8b95c4fcb22",
												"exec": [
													"pm.variables.set(\"informatieobjecttype_vertrouwelijkheidaanduiding\", pm.response.json().vertrouwelijkheidaanduiding);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{informatieobjecttype_url}}",
											"host": [
												"{{informatieobjecttype_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(drc-007b) EnkelvoudigInformatieObject aanmaken leidt vertrouwelijkheidaanduiding af uit Informatieobjecttype",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d8dbc102-90f7-46c7-a6c2-10e412c9d831",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "c8fb97ab-69f9-451b-85f2-9a1efbf412cb",
												"exec": [
													"pm.test(\"EnkelvoudigInformatieObject aanmaken zonder expliciet gedefinieerde vertrouwelijkheidaanduiding leidt vertrouwelijkheidaanduiding af uit Informatieobjecttype\", function() {",
													"    pm.expect(pm.response.json().vertrouwelijkheidaanduiding).to.be.equal(pm.variables.get(\"informatieobjecttype_vertrouwelijkheidaanduiding\"));",
													"});",
													"",
													"if(pm.response.code == 201) {",
													"    pm.variables.set(\"created_informatieobject_url\", pm.response.json().url);",
													"    pm.variables.set(\"NEXT_REQUEST_NAME\", \"Delete EnkelvoudigInformatieObject\");",
													"    postman.setNextRequest(\"(COMMON) Delete EnkelvoudigInformatieObject\");",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{informatieobject_body}}"
										},
										"url": {
											"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
											"host": [
												"{{drc_url}}"
											],
											"path": [
												"enkelvoudiginformatieobjecten"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "tearDown",
							"item": [
								{
									"name": "Delete EnkelvoudigInformatieObject",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0d74cea4-7022-449e-9cbd-5b4f52258d7b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{informatieobject_url}}",
											"host": [
												"{{informatieobject_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3f9f3c1c-87c3-47b6-b0c1-ad46338d7813",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{zaak_url}}",
											"host": [
												"{{zaak_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Besluit",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f76a1690-81c3-40c4-8c7e-8b71a32a2653",
												"exec": [
													"postman.setNextRequest(\"Retrieve Besluittype\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{besluit_url}}",
											"host": [
												"{{besluit_url}}"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "common requests",
							"item": [
								{
									"name": "(COMMON) Delete EnkelvoudigInformatieObject",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "154f33db-9702-45d5-9ef6-73b7fe44fdb7",
												"exec": [
													"pm.variables.unset(\"created_informatieobject_url\");",
													"postman.setNextRequest(pm.variables.get(\"NEXT_REQUEST_NAME\"));",
													"pm.variables.unset(\"NEXT_REQUEST_NAME\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{created_informatieobject_url}}",
											"host": [
												"{{created_informatieobject_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(COMMON) Delete ObjectInformatieObject",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "499ce43f-d132-4fdd-949e-f1572c58a9bb",
												"exec": [
													"pm.variables.unset(\"created_objectinformatieobject_url\");",
													"postman.setNextRequest(pm.variables.get(\"NEXT_REQUEST_NAME\"));",
													"pm.variables.unset(\"NEXT_REQUEST_NAME\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{created_objectinformatieobject_url}}",
											"host": [
												"{{created_objectinformatieobject_url}}"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "brc",
					"item": [
						{
							"name": "setUp",
							"item": [
								{
									"name": "Retrieve Besluittype",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "75c656ba-6fd2-4a7a-94e3-7485eed53d6f",
												"exec": [
													"pm.variables.set(\"besluittype_url\", pm.response.json()[0].besluittypen[0]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ztc_url}}/catalogussen",
											"host": [
												"{{ztc_url}}"
											],
											"path": [
												"catalogussen"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Besluit",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "164562bf-083c-4e83-873c-6c3065aefd11",
												"exec": [
													"var besluit = pm.response.json();",
													"pm.variables.set(\"besluit_url\", besluit.url);",
													"pm.variables.set(\"besluit_id\", besluit.identificatie);",
													"pm.variables.set(\"besluit_verantwoordelijke_organisatie\", besluit.verantwoordelijkeOrganisatie);",
													"pm.variables.set(\"besluit_body\", pm.request.body.raw);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"verantwoordelijkeOrganisatie\": \"000000000\",\n\t\"besluittype\": \"{{besluittype_url}}\",\n\t\"datum\": \"2019-01-01\",\n\t\"ingangsdatum\": \"2018-01-01\"\n}"
										},
										"url": {
											"raw": "{{brc_url}}/besluiten",
											"host": [
												"{{brc_url}}"
											],
											"path": [
												"besluiten"
											]
										}
									},
									"response": []
								},
								{
									"name": "Retrieve EnkelvoudigInformatieObjecten",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "265f65b0-37e3-418b-bc59-d7cef6c08e1d",
												"exec": [
													"var informatieobjecten = pm.response.json();",
													"pm.variables.set(\"informatieobject_url\", informatieobjecten[0].url);",
													"pm.variables.set(\"informatieobject_gebruiksrecht_null_url\", informatieobjecten[1].url);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
											"host": [
												"{{drc_url}}"
											],
											"path": [
												"enkelvoudiginformatieobjecten"
											]
										},
										"description": "Haalt twee EnkelvoudigInformatieObjecten op uit het DRC."
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "brc-001 (NI)",
							"item": [
								{
									"name": "(brc-001a) Besluit aanmaken is mogelijk",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3a883b72-bf54-4c2e-8542-812a1ae8a01e",
												"exec": [
													"pm.test(\"Zaak aanmaken met valide gegevens geeft 201\", function() {",
													"    pm.response.to.have.status(201);",
													"    pm.variables.set(\"created_besluit_url\", pm.response.json().url);",
													"});",
													"",
													"if(!pm.variables.get(\"created_besluit_url\")) {",
													"    postman.setNextRequest(\"(brc-001d) Besluit aanmaken met ongeldige besluittype-url is onmogelijk\");",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{besluit_body}}"
										},
										"url": {
											"raw": "{{brc_url}}/besluiten",
											"host": [
												"{{brc_url}}"
											],
											"path": [
												"besluiten"
											]
										}
									},
									"response": []
								},
								{
									"name": "(brc-001b) Besluit bijwerken is mogelijk",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "839e70ed-66c2-4232-b9ce-5530eeefbf0a",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"besluit_body\"));",
													"pm.variables.set(\"toelichting\", \"aangepaste toelichting\");",
													"body.toelichting = pm.variables.get(\"toelichting\");",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "433d0426-73d2-46c1-bd23-2abc0c89520a",
												"exec": [
													"pm.test(\"Besluit bijwerken met valide gegevens geeft 200\", function() {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Besluit bijwerken past gegevens correct aan\", function() {",
													"    pm.expect(pm.response.json().toelichting).to.be.equal(pm.variables.get(\"toelichting\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{created_besluit_url}}",
											"host": [
												"{{created_besluit_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(brc-001c) Besluit deels bijwerken is mogelijk",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "839e70ed-66c2-4232-b9ce-5530eeefbf0a",
												"exec": [
													"pm.variables.set(\"bestuursorgaan\", \"aangepast bestuursorgaan\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "433d0426-73d2-46c1-bd23-2abc0c89520a",
												"exec": [
													"pm.test(\"Besluit deels bijwerken met valide gegevens geeft 200\", function() {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Besluit deels bijwerken past gegevens correct aan\", function() {",
													"    pm.expect(pm.response.json().bestuursorgaan).to.be.equal(pm.variables.get(\"bestuursorgaan\"));",
													"});",
													"",
													"if(pm.variables.get(\"created_besluit_url\")) {",
													"    pm.variables.set(\"NEXT_REQUEST_NAME\", \"(brc-001d) Besluit aanmaken met ongeldige besluittype url is onmogelijk\");",
													"    postman.setNextRequest(\"(COMMON) Delete Besluit\");",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"bestuursorgaan\": \"{{bestuursorgaan}}\"\n}"
										},
										"url": {
											"raw": "{{created_besluit_url}}",
											"host": [
												"{{created_besluit_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(brc-001d) Besluit aanmaken met ongeldige besluittype url is onmogelijk",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "e0b02b48-f838-4ae2-93b7-77fe715e12b8",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"besluit_body\"));",
													"body.besluittype = pm.environment.get(\"mock_url\") + \"/404\";",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "7c424f91-6f67-4601-a88d-8ce8a626f111",
												"exec": [
													"pm.test(\"Besluit aanmaken met besluittype url die niet resulteert in 200 geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"besluittype\");",
													"    pm.expect(error.code).to.be.equal(\"bad-url\");",
													"});",
													"",
													"// If the test failed and the Besluit was created, delete it",
													"if(pm.response.code == 201) {",
													"    pm.variables.set(\"created_besluit_url\", pm.response.json().url);",
													"    pm.variables.set(\"NEXT_REQUEST_NAME\", \"(brc-001e) Besluit bijwerken met ongeldige besluittype url is onmogelijk\");",
													"    postman.setNextRequest(\"(COMMON) Delete Besluit\");",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{brc_url}}/besluiten",
											"host": [
												"{{brc_url}}"
											],
											"path": [
												"besluiten"
											]
										}
									},
									"response": []
								},
								{
									"name": "(brc-001e) Besluit bijwerken met ongeldige besluittype url is onmogelijk",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "839e70ed-66c2-4232-b9ce-5530eeefbf0a",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"besluit_body\"));",
													"body.besluittype = pm.variables.get(\"mock_url\") + \"/404\";",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "433d0426-73d2-46c1-bd23-2abc0c89520a",
												"exec": [
													"pm.test(\"Besluit bijwerken met besluittype url die niet resulteert in 200 geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"besluittype\");",
													"    pm.expect(error.code).to.be.equal(\"bad-url\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{besluit_url}}",
											"host": [
												"{{besluit_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(brc-001f) Besluit deels bijwerken met ongeldige besluittype url is onmogelijk",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "839e70ed-66c2-4232-b9ce-5530eeefbf0a",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "433d0426-73d2-46c1-bd23-2abc0c89520a",
												"exec": [
													"pm.test(\"Besluit deels bijwerken met besluittype url die niet resulteert in 200 geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"besluittype\");",
													"    pm.expect(error.code).to.be.equal(\"bad-url\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"besluittype\": \"{{mock_url}}/404\"\n}"
										},
										"url": {
											"raw": "{{besluit_url}}",
											"host": [
												"{{besluit_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(brc-001g) Besluit aanmaken met besluittype url die niet wijst naar Besluittype is onmogelijk",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "e0b02b48-f838-4ae2-93b7-77fe715e12b8",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"besluit_body\"));",
													"body.besluittype = pm.environment.get(\"mock_url\") + \"/200\";",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "7c424f91-6f67-4601-a88d-8ce8a626f111",
												"exec": [
													"pm.test.skip(\"Besluit aanmaken met besluittype url die niet wijst naar Besluittype-resource geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"besluittype\");",
													"    pm.expect(error.code).to.be.equal(\"invalid-resource\");",
													"});",
													"",
													"// If the test failed and the Besluit was created, delete it",
													"if(pm.response.code == 201) {",
													"    pm.variables.set(\"created_besluit_url\", pm.response.json().url);",
													"    pm.variables.set(\"NEXT_REQUEST_NAME\", \"(brc-001h) Besluit bijwerken met besluittype url die niet wijst naar Besluittype is onmogelijk\");",
													"    postman.setNextRequest(\"(COMMON) Delete Besluit\");",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{brc_url}}/besluiten",
											"host": [
												"{{brc_url}}"
											],
											"path": [
												"besluiten"
											]
										}
									},
									"response": []
								},
								{
									"name": "(brc-001h) Besluit bijwerken met besluittype url die niet wijst naar Besluittype is onmogelijk",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "839e70ed-66c2-4232-b9ce-5530eeefbf0a",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"besluit_body\"));",
													"body.besluittype = pm.variables.get(\"mock_url\") + \"/404\";",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "433d0426-73d2-46c1-bd23-2abc0c89520a",
												"exec": [
													"pm.test.skip(\"Besluit bijwerken met besluittype url die niet wijst naar Besluittype-resource geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"besluittype\");",
													"    pm.expect(error.code).to.be.equal(\"invalid-resource\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{besluit_url}}",
											"host": [
												"{{besluit_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(brc-001i) Besluit deels bijwerken met besluittype url die niet wijst naar Besluittype is onmogelijk Copy",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "839e70ed-66c2-4232-b9ce-5530eeefbf0a",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "433d0426-73d2-46c1-bd23-2abc0c89520a",
												"exec": [
													"pm.test.skip(\"Besluit deels bijwerken met besluittype url die niet wijst naar Besluittype-resource geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"besluittype\");",
													"    pm.expect(error.code).to.be.equal(\"invalid-resource\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"besluittype\": \"{{mock_url}}/404\"\n}"
										},
										"url": {
											"raw": "{{besluit_url}}",
											"host": [
												"{{besluit_url}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "2e9370c5-5f49-4f5e-96c5-198978fb4bd3",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "2bf7fbbe-e6e0-4831-a61b-d4f3d7a720e2",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "brc-002",
							"item": [
								{
									"name": "(brc-002a) Uniciteit verantwoordelijke_organisatie en identificatie op de Besluit-resource (POST)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "27106eae-1a93-4e78-82d5-5b0d4719673f",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"besluit_body\"));",
													"body.identificatie = pm.variables.get(\"besluit_id\");",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "b34be4ba-bf87-4ded-8794-c3a0084faa5d",
												"exec": [
													"pm.test(\"Besluit aanmaken met bestaande combinatie verantwoordelijke_organisatie en identificatie geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"identificatie\");",
													"    pm.expect(error.code).to.be.equal(\"identificatie-niet-uniek\");",
													"});",
													"",
													"// If the test failed and the Besluit was created, delete it",
													"if(pm.response.code == 201) {",
													"    pm.variables.set(\"created_besluit_url\", pm.response.json().url);",
													"    pm.variables.set(\"NEXT_REQUEST_NAME\", \"Create Besluit with unique identificatie and verantwoordelijke_organisatie\");",
													"    postman.setNextRequest(\"(COMMON) Delete Besluit\");",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{brc_url}}/besluiten",
											"host": [
												"{{brc_url}}"
											],
											"path": [
												"besluiten"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Besluit with unique identificatie and verantwoordelijke_organisatie",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "01e98b0e-0bea-40a1-8485-67695fb020b3",
												"exec": [
													"pm.variables.set(\"created_besluit_url\", pm.response.json().url);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{besluit_body}}"
										},
										"url": {
											"raw": "{{brc_url}}/besluiten",
											"host": [
												"{{brc_url}}"
											],
											"path": [
												"besluiten"
											]
										},
										"description": "Maakt een Zaak aan die gebruikt zal worden in de tests, deze zaak wordt na de tests weer verwijderd.\n\nDe body van deze Zaak zal ook als variabele opgeslagen worden en gebruikt worden (met kleine aanpassingen iedere keer) in de requests voor de validatie tests, om te voorkomen dat telkens hetzelfde body gekopieerd moet worden."
									},
									"response": []
								},
								{
									"name": "(brc-002b) Besluit bijwerken identificatie aanpassen niet toegestaan",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "27106eae-1a93-4e78-82d5-5b0d4719673f",
												"exec": [
													"// Retrieve the Zaak body template and modify as needed",
													"var body = JSON.parse(pm.variables.get(\"besluit_body\"));",
													"body.identificatie = pm.variables.get(\"besluit_id\");",
													"",
													"// Store the modified Zaak body, allowing it to be used in the main request",
													"pm.variables.set(\"request_body\", JSON.stringify(body));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "b34be4ba-bf87-4ded-8794-c3a0084faa5d",
												"exec": [
													"pm.test(\"Besluit bijwerken met bestaande combinatie verantwoordelijke_organisatie en identificatie geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"identificatie\");",
													"    pm.expect(error.code).to.be.equal(\"wijzigen-niet-toegelaten\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{created_besluit_url}}",
											"host": [
												"{{created_besluit_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(brc-002c) Besluit deels bijwerken identificatie aanpassen niet toegestaan",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "27106eae-1a93-4e78-82d5-5b0d4719673f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "b34be4ba-bf87-4ded-8794-c3a0084faa5d",
												"exec": [
													"pm.test(\"Besluit deels bijwerken met bestaande combinatie verantwoordelijke_organisatie en identificatie geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"identificatie\");",
													"    pm.expect(error.code).to.be.equal(\"wijzigen-niet-toegelaten\");",
													"});",
													"",
													"pm.variables.set(\"NEXT_REQUEST_NAME\", \"Retrieve Besluiten for verantwoordelijke_organisatie\");",
													"postman.setNextRequest(\"(COMMON) Delete Besluit\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"identificatie\": \"{{besluit_id}}\"\n}"
										},
										"url": {
											"raw": "{{created_besluit_url}}",
											"host": [
												"{{created_besluit_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Retrieve Besluiten for verantwoordelijke_organisatie",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "13b55b82-8f68-47fc-82bd-3fdd1d7c0d82",
												"exec": [
													"pm.variables.set(\"besluiten_for_verantwoordelijke_organisatie\", pm.response.json());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{brc_url}}/besluiten?verantwoordelijke_organisatie={{besluit_verantwoordelijke_organisatie}}",
											"host": [
												"{{brc_url}}"
											],
											"path": [
												"besluiten"
											],
											"query": [
												{
													"key": "verantwoordelijke_organisatie",
													"value": "{{besluit_verantwoordelijke_organisatie}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "(drc-002d) Genereer unieke identificatie voor Besluit onder verantwoordelijke_organisatie",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "41140574-2623-42f7-88be-619ceaaa946a",
												"exec": [
													"pm.test(\"Besluit aanmaken zonder identificatie genereert unieke identificatie onder bronorganisatie\", function() {",
													"    var created_besluit_id = pm.response.json().identificatie",
													"    ",
													"    pm.variables.set(\"created_besluit_url\", pm.response.json().url);",
													"    ",
													"    pm.response.to.have.status(201);",
													"    ",
													"    // Compare the identificatie of the created Besluit with all the identificaties of other Besluiten",
													"    // with the same verantwoordelijke_organisatie",
													"    var besluiten_with_same_id = pm.variables.get(\"besluiten_for_verantwoordelijke_organisatie\").filter(besluit => besluit.identificatie === created_besluit_id);",
													"    ",
													"    // Verify that the identificatie for the created Besluit isn't the same as any other",
													"    pm.expect(besluiten_with_same_id.length).to.be.equal(0);",
													"});",
													"",
													"pm.variables.set(\"NEXT_REQUEST_NAME\", \"(brc-003a) Valideren informatieobject op de BesluitInformatieObject-resource\");",
													"postman.setNextRequest(\"(COMMON) Delete Besluit\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "a34e2e85-35bc-4ff1-9e4c-00b9a8f1908f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											},
											{
												"key": "Content-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{besluit_body}}"
										},
										"url": {
											"raw": "{{brc_url}}/besluiten",
											"host": [
												"{{brc_url}}"
											],
											"path": [
												"besluiten"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "328e8128-a7f5-49e8-be9d-251ed651e99b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "537301c3-1986-4887-882e-8a4c25fbc056",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "brc-003",
							"item": [
								{
									"name": "(brc-003a) Valideren informatieobject op de BesluitInformatieObject-resource",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "738040bb-7752-4ebf-908a-c4b33ace22aa",
												"exec": [
													"pm.test(\"Ongeldige informatieobject-url toevoegen aan Besluit resulteert in 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var errors = pm.response.json()[\"invalid-params\"];",
													"    pm.expect(errors[0].name).to.be.equal(\"informatieobject\");",
													"    pm.expect(errors[0].code).to.be.equal(\"bad-url\");",
													"});",
													"",
													"// TODO",
													"// if(pm.response.code == 201) {",
													"//     pm.variables.set(\"created_zaak_url\", pm.response.json().url);",
													"//     pm.variables.set(\"NEXT_REQUEST_NAME\", \"(zrc-001e) Zaak bijwerken met ongeldige zaaktype url is onmogelijk\");",
													"//     postman.setNextRequest(\"(COMMON) Delete Zaak\");",
													"// }"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "771a52bd-37ba-4707-8624-aee0e2d71d5d",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"informatieobject\": \"{{mock_url}}/404\"\n}"
										},
										"url": {
											"raw": "{{besluit_url}}/informatieobjecten",
											"host": [
												"{{besluit_url}}"
											],
											"path": [
												"informatieobjecten"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create relation between Besluit and Informatieobject",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fa9f354c-0464-494e-b9fa-9635b21b2d43",
												"exec": [
													"pm.variables.set(\"objectinformatieobject_url\", pm.response.json().url)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "5be8e943-844c-4786-9173-08a7e1dfb2c8",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"informatieobject\": \"{{informatieobject_url}}\",\n    \"object\": \"{{besluit_url}}\",\n    \"objectType\": \"besluit\"\n}"
										},
										"url": {
											"raw": "{{drc_url}}/objectinformatieobjecten",
											"host": [
												"{{drc_url}}"
											],
											"path": [
												"objectinformatieobjecten"
											]
										}
									},
									"response": []
								},
								{
									"name": "(brc-003b) Geen bestaande combinatie besluit en informatieobject op de BesluitInformatieObject-resource",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "63fa26c3-95f9-4a41-99ed-89e2069dfc32",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "a796162b-88cc-4f93-a252-7d9c45e5718b",
												"exec": [
													"pm.test.skip(\"Toevoegen informatieobject aan Besluit waaraan dat object al gekoppeld is geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that error was thrown for correct reason",
													"    var error = pm.response.json()[\"invalid-params\"][0];",
													"    pm.expect(error.name).to.be.equal(\"informatieobject\");",
													"    pm.expect(error.code).to.be.equal(\"unique\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"informatieobject\": \"{{informatieobject_url}}\"\n}"
										},
										"url": {
											"raw": "{{besluit_url}}/informatieobjecten",
											"host": [
												"{{besluit_url}}"
											],
											"path": [
												"informatieobjecten"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete relation between Besluit and Informatieobject",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "f6f87cec-0d1a-4acf-b2df-2e05417272c7",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{objectinformatieobject_url}}",
											"host": [
												"{{objectinformatieobject_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(brc-003c) Valideren bestaan relatie informatieobject en zaak",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "6949f957-67f2-4a13-9e36-330bbf5e1b72",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "27152e99-88c1-4f71-b354-d43f8579b2fc",
												"exec": [
													"pm.test.skip(\"Toevoegen informatieobject aan Besluit zonder bestaande relatie in DRC geeft 400\", function() {",
													"    pm.response.to.have.status(400);",
													"    ",
													"    // Verify that the 400 is returned for the correct reason",
													"    var errors = pm.response.json()[\"invalid-params\"];",
													"    pm.expect(errors[0].name).to.be.equal(\"informatieobject\");",
													"    pm.expect(errors[0].code).to.be.equal(\"inconsistent-relation\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"informatieobject\": \"{{informatieobject_url}}\"\n}"
										},
										"url": {
											"raw": "{{besluit_url}}/informatieobjecten",
											"host": [
												"{{besluit_url}}"
											],
											"path": [
												"informatieobjecten"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "tearDown",
							"item": [
								{
									"name": "Delete Besluit",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a80cc599-41c6-4c9f-9019-4429fb4f3835",
												"exec": [
													"postman.setNextRequest(null);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{besluit_url}}",
											"host": [
												"{{besluit_url}}"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "common requests",
							"item": [
								{
									"name": "(COMMON) Delete Besluit",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3c3704b5-9c4e-4a05-ae37-0038780ed1f5",
												"exec": [
													"pm.variables.unset(\"created_besluit_url\");",
													"postman.setNextRequest(pm.variables.get(\"NEXT_REQUEST_NAME\"));",
													"pm.variables.unset(\"NEXT_REQUEST_NAME\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{created_besluit_url}}",
											"host": [
												"{{created_besluit_url}}"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "ztc",
					"item": [],
					"_postman_isSubFolder": true
				}
			],
			"description": "Deze folder bevat de Postman test suite voor de ZGW API's, elke folder bevat tests voor de business logic zoals die gespecificeerd is in https://github.com/VNG-Realisatie/gemma-zaken/blob/master/docs/_content/standaard/standaard.md.\n\nDe variabelen voor de urls naar de individuele componenten zijn standaard gezet op http://ref.tst.vng.cloud/, maar kunnen lokaal veranderd worden naar bijv. localhost voor test doeleinden.\n\nDe namen van de folders (bijv. **zrc/zrc-001**) verwijzen naar de specificaties in de link hierboven, zo zijn de tests te koppelen aan de specificaties.\n\nAlle requests met een prefix zoals **(zrc-xxx)** (of een ander ZGW api) bevatten tests, alle andere requests zijn ter ondersteuning van die requests en bevatten dus geen tests.\n\nOm te zorgen dat de tests correct werken, moeten alle tests van een specifiek component (bijv. zrc) door de Postman Collection Runner uitgevoerd worden, tests individueel uitvoeren is dus niet mogelijk.\n\nOpmerkingen:\n- (WIP) houdt in dat de test nog niet correct geimplementeerd is.\n- (NI) houdt in dat de test faalt omdat de business logic nog niet geimplementeerd is in de desbetreffende API's.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "4e5907ed-d5f2-4e08-8be9-eef8649b6272",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "6e24a148-f731-4cce-886c-e0ba6df75296",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "mocks",
			"item": [
				{
					"name": "mock 404",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://postman-echo.com/404",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"404"
							]
						}
					},
					"response": [
						{
							"name": "mock 404",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://postman-echo.com/404",
									"protocol": "https",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"404"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 11 Apr 2019 07:43:11 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "set-cookie",
									"value": "sails.sid=s%3ASHwUa-bkOkJSlxkIMUftVSn1B7OSj7cm.ZDlSTE7zvQxw02Ln%2FAg4nAIhWxdjz8h4Gh0U9aF4rPs; Path=/; HttpOnly"
								},
								{
									"key": "Content-Length",
									"value": "0"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[]"
						}
					]
				},
				{
					"name": "mock 200",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://postman-echo.com/200",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"200"
							]
						}
					},
					"response": [
						{
							"name": "mock 200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://postman-echo.com/200",
									"protocol": "https",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"200"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 11 Apr 2019 07:51:21 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "set-cookie",
									"value": "sails.sid=s%3AHmD2XL9sgcf56iogzMqaHk_ubbsnVkoY.VuLs6wpZNk5L4bEZOG1fyhY4GCW75Yo8OvkQhT%2BgPM0; Path=/; HttpOnly"
								},
								{
									"key": "Content-Length",
									"value": "0"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "mock Zaaktype",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://postman-echo.com/zaaktype",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"zaaktype"
							]
						}
					},
					"response": [
						{
							"name": "mock Zaaktype",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://postman-echo.com/zaaktype",
									"protocol": "https",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"zaaktype"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 11 Apr 2019 07:55:27 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "Content-Length",
									"value": "0"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"url\": \"https://ref.tst.vng.cloud/ztc/api/v1/catalogussen/28487d3f-6a1b-489c-b03d-c75ac6693e72/zaaktypen/ede2fd28-32d2-46c9-8cde-b44bb055d3bc\",\n    \"identificatie\": 40,\n    \"omschrijving\": \"Aanvraag huwelijk behandelen\",\n    \"omschrijvingGeneriek\": \"\",\n    \"vertrouwelijkheidaanduiding\": \"intern\",\n    \"doel\": \"-\",\n    \"aanleiding\": \"-\",\n    \"toelichting\": \"\",\n    \"indicatieInternOfExtern\": \"Intern\",\n    \"handelingInitiator\": \"Indienen\",\n    \"onderwerp\": \"Huwelijk\",\n    \"handelingBehandelaar\": \"Behandelen\",\n    \"doorlooptijd\": \"P5D\",\n    \"servicenorm\": null,\n    \"opschortingEnAanhoudingMogelijk\": false,\n    \"verlengingMogelijk\": false,\n    \"verlengingstermijn\": null,\n    \"trefwoorden\": [],\n    \"publicatieIndicatie\": false,\n    \"publicatietekst\": \"\",\n    \"verantwoordingsrelatie\": [],\n    \"productenOfDiensten\": [\n        \"https://pki.utrecht.nl/Loket/product/298304036ec988f0633d839dde5b588f\"\n    ],\n    \"selectielijstProcestype\": \"https://ref.tst.vng.cloud/referentielijsten/api/v1/procestypen/39a1711c-f94b-4282-8ac3-7c545d8ecb04\",\n    \"referentieproces\": {\n        \"naam\": \"Huwelijk\",\n        \"link\": \"\"\n    },\n    \"catalogus\": \"https://ref.tst.vng.cloud/ztc/api/v1/catalogussen/28487d3f-6a1b-489c-b03d-c75ac6693e72\",\n    \"statustypen\": [\n        \"https://ref.tst.vng.cloud/ztc/api/v1/catalogussen/28487d3f-6a1b-489c-b03d-c75ac6693e72/zaaktypen/ede2fd28-32d2-46c9-8cde-b44bb055d3bc/statustypen/c48bc388-1701-44fc-bfd8-7d56279da4de\",\n        \"https://ref.tst.vng.cloud/ztc/api/v1/catalogussen/28487d3f-6a1b-489c-b03d-c75ac6693e72/zaaktypen/ede2fd28-32d2-46c9-8cde-b44bb055d3bc/statustypen/6f4b2dc8-24d6-4c69-8a42-37edec543188\",\n        \"https://ref.tst.vng.cloud/ztc/api/v1/catalogussen/28487d3f-6a1b-489c-b03d-c75ac6693e72/zaaktypen/ede2fd28-32d2-46c9-8cde-b44bb055d3bc/statustypen/75577f8c-cecb-44af-b78c-93f1d88dcbf1\"\n    ],\n    \"resultaattypen\": [\n        \"https://ref.tst.vng.cloud/ztc/api/v1/resultaattypen/9bd507ec-a151-488b-8a8a-702a0518e734\"\n    ],\n    \"eigenschappen\": [\n        \"https://ref.tst.vng.cloud/ztc/api/v1/catalogussen/28487d3f-6a1b-489c-b03d-c75ac6693e72/zaaktypen/ede2fd28-32d2-46c9-8cde-b44bb055d3bc/eigenschappen/55fbccb9-040c-4c0c-a0f0-e4045d9f2cb5\",\n        \"https://ref.tst.vng.cloud/ztc/api/v1/catalogussen/28487d3f-6a1b-489c-b03d-c75ac6693e72/zaaktypen/ede2fd28-32d2-46c9-8cde-b44bb055d3bc/eigenschappen/5354fdcf-4d73-496a-9d19-53bc22c63342\",\n        \"https://ref.tst.vng.cloud/ztc/api/v1/catalogussen/28487d3f-6a1b-489c-b03d-c75ac6693e72/zaaktypen/ede2fd28-32d2-46c9-8cde-b44bb055d3bc/eigenschappen/9d477e92-5c80-49f1-b0b8-fce6ae30f5ac\"\n    ],\n    \"informatieobjecttypen\": [\n        \"https://ref.tst.vng.cloud/ztc/api/v1/catalogussen/28487d3f-6a1b-489c-b03d-c75ac6693e72/informatieobjecttypen/1f86f196-4004-4371-868d-252f5676a092\"\n    ],\n    \"roltypen\": [\n        \"https://ref.tst.vng.cloud/ztc/api/v1/catalogussen/28487d3f-6a1b-489c-b03d-c75ac6693e72/zaaktypen/ede2fd28-32d2-46c9-8cde-b44bb055d3bc/roltypen/a550f938-1f23-4e88-a372-1d9e7ec238d0\"\n    ],\n    \"besluittypen\": [],\n    \"gerelateerdeZaaktypen\": []\n}"
						}
					]
				},
				{
					"name": "mock Zaak",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://postman-echo.com/zaak",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"zaak"
							]
						}
					},
					"response": [
						{
							"name": "mock Zaak",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://postman-echo.com/zaak",
									"protocol": "https",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"zaak"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 11 Apr 2019 08:12:23 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "set-cookie",
									"value": "sails.sid=s%3A1bi68Z50dy5lV4i1DzG_fSE3WmCN10Jo.%2BgBzfDpmNSTxL1rjkG05vCZsnO8aFijpOkS0mZJH9O8; Path=/; HttpOnly"
								},
								{
									"key": "Content-Length",
									"value": "0"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"url\": \"https://ref.tst.vng.cloud/zrc/api/v1/zaken/8bb42fd7-b8bb-4aea-b29b-e600e22fb93f\",\n    \"identificatie\": \"test identificatie 1\",\n    \"bronorganisatie\": \"000000000\",\n    \"omschrijving\": \"string\",\n    \"toelichting\": \"string\",\n    \"zaaktype\": \"https://ref.tst.vng.cloud/ztc/api/v1/catalogussen/28487d3f-6a1b-489c-b03d-c75ac6693e72/zaaktypen/ede2fd28-32d2-46c9-8cde-b44bb055d3bc\",\n    \"registratiedatum\": \"2019-04-09\",\n    \"verantwoordelijkeOrganisatie\": \"000000000\",\n    \"startdatum\": \"2019-04-09\",\n    \"einddatum\": null,\n    \"einddatumGepland\": \"2019-04-09\",\n    \"uiterlijkeEinddatumAfdoening\": \"2019-04-09\",\n    \"publicatiedatum\": \"2019-04-09\",\n    \"communicatiekanaal\": \"https://ref.tst.vng.cloud/referentielijsten/api/v1/communicatiekanalen/2b757868-45c2-42ca-b637-b63ddc87beb4\",\n    \"productenOfDiensten\": [],\n    \"vertrouwelijkheidaanduiding\": \"openbaar\",\n    \"betalingsindicatie\": \"nvt\",\n    \"betalingsindicatieWeergave\": \"Er is geen sprake van te betalen, met de zaak gemoeide, kosten.\",\n    \"laatsteBetaaldatum\": null,\n    \"zaakgeometrie\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n            53,\n            5\n        ]\n    },\n    \"verlenging\": {\n        \"reden\": \"\",\n        \"duur\": null\n    },\n    \"opschorting\": {\n        \"indicatie\": true,\n        \"reden\": \"string\"\n    },\n    \"selectielijstklasse\": \"http://example.com\",\n    \"hoofdzaak\": null,\n    \"deelzaken\": [],\n    \"relevanteAndereZaken\": [\n        \"http://example.com\"\n    ],\n    \"status\": null,\n    \"kenmerken\": [],\n    \"archiefnominatie\": \"blijvend_bewaren\",\n    \"archiefstatus\": \"nog_te_archiveren\",\n    \"archiefactiedatum\": \"2019-04-09\",\n    \"resultaat\": null\n}"
						}
					]
				},
				{
					"name": "mock Communicatiekanaal",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://postman-echo.com/communicatiekanaal",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"communicatiekanaal"
							]
						}
					},
					"response": [
						{
							"name": "mock Communicatiekanaal",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://postman-echo.com/communicatiekanaal",
									"protocol": "https",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"communicatiekanaal"
									]
								}
							},
							"status": "Accepted",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\n    \"url\": \"http://example.com\",\n    \"naam\": \"string\",\n    \"omschrijving\": \"string\"\n}"
						}
					]
				}
			],
			"description": "Deze folder bevat mocks die het implementeren van de tests makkelijker maken.\n\nTODO: zit nu op gratis Postman, moet upgraden voor unlimited mock requests",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "740dc188-fe57-40c2-8ac4-abae222bf364",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "d4cac2a0-e237-4a6b-8964-02a244495aee",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Regression tests",
			"item": [
				{
					"name": "setUp",
					"item": [
						{
							"name": "Retrieve Zaaktype",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "017d57e0-038d-4621-be41-11e103f859ac",
										"exec": [
											"pm.variables.set(\"zaaktype_url\", pm.response.json()[0].zaaktypen[0]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ztc_url}}/catalogussen",
									"host": [
										"{{ztc_url}}"
									],
									"path": [
										"catalogussen"
									]
								},
								"description": "Haalt een Zaaktype op uit het ZTC."
							},
							"response": []
						},
						{
							"name": "Retrieve EnkelvoudigInformatieObjecten",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "265f65b0-37e3-418b-bc59-d7cef6c08e1d",
										"exec": [
											"var informatieobjecten = pm.response.json();",
											"pm.variables.set(\"informatieobject_url\", informatieobjecten[0].url);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
									"host": [
										"{{drc_url}}"
									],
									"path": [
										"enkelvoudiginformatieobjecten"
									]
								},
								"description": "Haalt twee EnkelvoudigInformatieObjecten op uit het DRC."
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f38bc0f5-411b-4380-89c7-25085499112b",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "5aebf182-d7ba-4857-a85e-f0ba41513dd0",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Issue #891 & #909 (NI)",
					"item": [
						{
							"name": "Create Zaak",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e70d8568-c1e8-460b-a55e-7a8f0bfa5a91",
										"exec": [
											"pm.variables.set(\"created_zaak_url\", pm.response.json().url);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept-Crs",
										"value": "EPSG:4326",
										"type": "text"
									},
									{
										"key": "Content-Crs",
										"value": "EPSG:4326",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"bronorganisatie\": \"000000000\",\n    \"omschrijving\": \"string\",\n    \"toelichting\": \"string\",\n    \"registratiedatum\": \"2019-04-09\",\n    \"verantwoordelijkeOrganisatie\": \"000000000\",\n    \"zaaktype\": \"{{zaaktype_url}}\",\n    \"startdatum\": \"2019-04-09\",\n    \"einddatumGepland\": \"2019-04-09\",\n    \"uiterlijkeEinddatumAfdoening\": \"2019-04-09\",\n    \"publicatiedatum\": \"2019-04-09\",\n\t\"vertrouwelijkheidaanduiding\": \"openbaar\",\n\t\"betalingsindicatie\": \"geheel\",\n\t\"laatsteBetaalDatum\": \"2019-01-01\",\n\t\"zaakgeometrie\": \n\t{\n\t    \"type\": \"Point\",\n\t    \"coordinates\": [53, 5]\n\t},\n\t\"opschorting\": \n\t{\n\t    \"indicatie\": true,\n\t    \"reden\": \"string\"\n\t},\n\t\"selectielijstklasse\": \"http://example.com\",\n\t\"relevanteAndereZaken\": \n\t[\n\n    \"http://example.com\"\n\n],\n    \"archiefnominatie\": \"blijvend_bewaren\",\n    \"archiefstatus\": \"nog_te_archiveren\"\n}"
								},
								"url": {
									"raw": "{{zrc_url}}/zaken",
									"host": [
										"{{zrc_url}}"
									],
									"path": [
										"zaken"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create ObjectInformatieObject relation",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "195f10c8-826a-4979-9009-e8723e14f6ac",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b7197941-da21-4190-98b0-90193e43325c",
										"exec": [
											"pm.test(\"ObjectInformatieObject creation results in 201\", function() {",
											"    pm.variables.set(\"objectinformatieobject_url\", pm.response.json().url);",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"informatieobject\": \"{{informatieobject_url}}\",\n    \"object\": \"{{created_zaak_url}}\",\n    \"objectType\": \"zaak\"\n}"
								},
								"url": {
									"raw": "{{drc_url}}/objectinformatieobjecten",
									"host": [
										"{{drc_url}}"
									],
									"path": [
										"objectinformatieobjecten"
									]
								}
							},
							"response": []
						},
						{
							"name": "(NI) Delete ObjectInformatieObject relation",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ee71f907-ca42-4258-ac9d-5e443246d7c3",
										"exec": [
											"pm.test(\"ObjectInformatieObject deletion results in 204\", function() {",
											"   pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{objectinformatieobject_url}}",
									"host": [
										"{{objectinformatieobject_url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "(NI) Validate informatieobject deletion ZRC",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4065591b-a931-4159-8bfe-6106463c0e42",
										"exec": [
											"pm.test(\"ObjectInformatieObject verwijdering cascade door naar ZRC\", function() {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(pm.response.json().length).to.be.equal(0);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept-Crs",
										"type": "text",
										"value": "EPSG:4326"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{created_zaak_url}}/informatieobjecten",
									"host": [
										"{{created_zaak_url}}"
									],
									"path": [
										"informatieobjecten"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Zaak",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept-Crs",
										"value": "EPSG:4326",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{created_zaak_url}}",
									"host": [
										"{{created_zaak_url}}"
									]
								}
							},
							"response": []
						}
					],
					"description": "GitHub issues:\n- https://github.com/VNG-Realisatie/gemma-zaken/issues/891\n- https://github.com/VNG-Realisatie/gemma-zaken/issues/909",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "1bca3884-93ca-45dc-9ff9-06fcb8193ae0",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "aaaeecc7-00e1-4aa9-90e4-03454d62d80b",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				}
			],
			"description": "Deze folder bevat regression tests met referenties naar GitHub issues, om aan te tonen dat de desbetreffende issues ook daadwerkelijk verholpen zijn.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "858f09cd-dc19-44bb-9026-fc1615746586",
						"type": "text/javascript",
						"exec": [
							"pm.variables.set(\"token\", \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImNsaWVudF9pZGVudGlmaWVyIjoiZGVtbyJ9.eyJpc3MiOiJkZW1vIiwiaWF0IjoxNTUzNzcxMDI1LCJ6ZHMiOnsic2NvcGVzIjpbIm5vdGlmaWNhdGllcy5zY29wZXMuY29uc3VtZXJlbiIsIm5vdGlmaWNhdGllcy5zY29wZXMucHVibGljZXJlbiIsInNjb3Blcy5kb2N1bWVudGVuLnZlcndpamRlcmVuIiwiemRzLnNjb3Blcy5zdGF0dXNzZW4udG9ldm9lZ2VuIiwiemRzLnNjb3Blcy56YWFrdHlwZXMubGV6ZW4iLCJ6ZHMuc2NvcGVzLnpha2VuLmFhbm1ha2VuIiwiemRzLnNjb3Blcy56YWtlbi5iaWp3ZXJrZW4iLCJ6ZHMuc2NvcGVzLnpha2VuLmxlemVuIiwiemRzLnNjb3Blcy56YWtlbi52ZXJ3aWpkZXJlbiJdLCJ6YWFrdHlwZXMiOlsiKiJdfX0.C3J7svfhFjIj_vzMjEu_CF5WDJD6CD30BVhRUZTPIjE\");"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "cfe2d927-ec09-4c4b-8202-263d2ee2dbf8",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{jwt_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "157b223d-1b88-4113-bed1-2412eef72a61",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "54e05292-2e5b-4bc5-b79f-ee708665c991",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}