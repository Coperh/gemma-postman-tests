{
	"info": {
		"_postman_id": "7511a7de-96f8-467e-9f56-ab568971b4bd",
		"name": "ZGW api tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Tests",
			"item": [
				{
					"name": "standaard.md",
					"item": [
						{
							"name": "zrc",
							"item": [
								{
									"name": "setUp",
									"item": [
										{
											"name": "Retrieve Zaaktype and Besluittype from catalogus",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "017d57e0-038d-4621-be41-11e103f859ac",
														"exec": [
															"pm.globals.set(\"zaaktype_url\", pm.response.json()[0].zaaktypen[0]);",
															"pm.globals.set(\"besluittype_url\", pm.response.json()[0].besluittypen[0]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{ztc_url}}/catalogussen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"catalogussen"
													]
												},
												"description": "Haalt een Zaaktype op uit het ZTC."
											},
											"response": []
										},
										{
											"name": "Retrieve Zaaktype information",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "ab4cebe2-5f2f-4343-9f25-42fed058ad4c",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "3c58c28b-0bdd-461e-9332-086d1db0ccb9",
														"exec": [
															"var res = pm.response.json();",
															"pm.globals.set(\"zaaktype_vertrouwelijkheid\", pm.response.json().vertrouwelijkheidaanduiding);",
															"pm.globals.set(\"zaaktype_productenOfDiensten\", res.productenOfDiensten);",
															"pm.globals.set(\"zaaktype_resultaattypen\", res.resultaattypen);",
															"pm.globals.set(\"zaaktype_eigenschap\", res.eigenschappen[0]);",
															"",
															"var statustypen = res.statustypen;",
															"pm.globals.set(\"eindstatustype\", statustypen[statustypen.length-1]);",
															"pm.globals.set(\"non_eindstatustype\", statustypen[0]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{zaaktype_url}}",
													"host": [
														"{{zaaktype_url}}"
													]
												},
												"description": "Haalt enkele gegevens op van het Zaaktype, die relevant zijn voor de tests."
											},
											"response": []
										},
										{
											"name": "Retrieve Zaaktypen for archiving",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a992f5be-2cb6-4177-bc66-19da1b6214f0",
														"exec": [
															"// var zaaktypen = pm.response.json()[0].zaaktypen;",
															"// pm.globals.set(\"zaaktype_afleidingswijze_afgehandeld_url\", zaaktypen[0]);",
															"// pm.globals.set(\"zaaktype_afleidingswijze_termijn_url\", zaaktypen[1]);",
															"",
															"pm.globals.set(\"archiving_zaaktypen\", pm.response.json()[0].zaaktypen);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{ztc_url}}/catalogussen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"catalogussen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create EnkelvoudigInformatieObject",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9c297a8c-30f1-428b-88ec-a6d6dc8800c1",
														"exec": [
															"pm.globals.set(\"informatieobject_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d5457b08-8cbf-4f6b-aa5f-db290fffd7fd",
														"exec": [
															"pm.globals.set(\"object_inhoud\", btoa(\"string\"))"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"bronorganisatie\": \"000000000\",\n\t\"creatiedatum\": \"2019-01-01\",\n\t\"titel\": \"testobject\",\n\t\"auteur\": \"testauteur\",\n\t\"taal\": \"eng\",\n\t\"inhoud\": \"{{object_inhoud}}\",\n\t\"informatieobjecttype\": \"{{informatieobjecttype_url}}\"\n}"
												},
												"url": {
													"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"enkelvoudiginformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add Gebruiksrechten to EnkelvoudigInformatieObject",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"informatieobject\": \"{{informatieobject_url}}\",\n\t\"startdatum\": \"2019-01-01T12:00:00\",\n\t\"omschrijvingVoorwaarden\": \"test\"\n}"
												},
												"url": {
													"raw": "{{drc_url}}/gebruiksrechten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"gebruiksrechten"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create EnkelvoudigInformatieObject with indicatieGebruiksrecht null",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9c297a8c-30f1-428b-88ec-a6d6dc8800c1",
														"exec": [
															"pm.globals.set(\"informatieobject_gebruiksrecht_null_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d5457b08-8cbf-4f6b-aa5f-db290fffd7fd",
														"exec": [
															"pm.globals.set(\"object_inhoud\", btoa(\"string\"))"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"bronorganisatie\": \"000000000\",\n\t\"creatiedatum\": \"2019-01-01\",\n\t\"titel\": \"testobject\",\n\t\"auteur\": \"testauteur\",\n\t\"taal\": \"eng\",\n\t\"inhoud\": \"{{object_inhoud}}\",\n\t\"informatieobjecttype\": \"{{informatieobjecttype_url}}\",\n\t\"indicatieGebruiksrecht\": null\n}"
												},
												"url": {
													"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"enkelvoudiginformatieobjecten"
													]
												}
											},
											"response": []
										}
									],
									"description": "Bevat requests die resources ophalen of aanmaken die gebruikt worden in de tests.\n\nOmdat het nog niet mogelijk is POST requests te doen op het ZTC, worder er enkele aannames gemaakt voor het slagen van deze requests:\n\n- In het ZTC bestaat 1 Catalogus met: \n\t- 1 Zaaktype waaraan minimaal 2 Statustypen gekoppeld zijn.\n\t\t- 1 Resultaattype dat relevant is voor dit Zaaktype.\n\t- 1 Informatieobjecttype\n- In het DRC bestaat minstens 2 EnkelvoudigInformatieObjecten, waarvan een met Indicatie gebruiksrecht `onbekend` en een met Indicatie gebruiksrecht `Ja` of `Nee`.\n\nOm bij het archiveringsproces (**zrc-015**) het afleiden van Zaak.archiefdatum voor alle mogelijke afleidingswijzen te testen, dienen er 9 Resultaattypes te zijn (ieder met een andere afleidingswijze en archiefactietermijn gevuld), die relevant zijn voor het eerder genoemde Zaaktype.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "6299f822-4bd7-4175-bcb8-f448b7e89d97",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "c8fa9155-de46-4d2b-9523-02e0f1c5b349",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "zrc-001 (NI)",
									"item": [
										{
											"name": "(zrc-001a) Zaak aanmaken is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4db223ef-0730-4da5-81f4-2df1b0975f10",
														"exec": [
															"pm.test(\"Zaak aanmaken met valide gegevens geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"});",
															"",
															"var zaak = pm.response.json();",
															"pm.globals.set(\"zaak_url\", zaak.url);",
															"pm.globals.set(\"zaak_id\", zaak.identificatie);",
															"pm.globals.set(\"zaak_bronorganisatie\", zaak.bronorganisatie);",
															"pm.globals.set(\"zaak_geometrie\", zaak.zaakgeometrie);",
															"pm.globals.set(\"zaak_body\", pm.request.body.raw);",
															"",
															"if(!pm.globals.get(\"zaak_url\")) {",
															"    postman.setNextRequest(\"(zrc-001d) Zaak aanmaken met ongeldige zaaktype url is onmogelijk\");",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "f8050155-7fe9-4dbe-bf6e-85474686a973",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bronorganisatie\": \"000000000\",\n    \"omschrijving\": \"string\",\n    \"toelichting\": \"string\",\n    \"registratiedatum\": \"2019-04-09\",\n    \"verantwoordelijkeOrganisatie\": \"000000000\",\n    \"zaaktype\": \"http://localhost:8002/api/v1/catalogussen/85a3f4f6-76d4-47a9-a3af-8ffa3e44d98d/zaaktypen/97f64bef-ce72-41e2-8cc1-cb6c2e0d1896\",\n    \"startdatum\": \"2019-04-09\",\n    \"einddatumGepland\": \"2019-04-20\",\n    \"uiterlijkeEinddatumAfdoening\": \"2019-04-09\",\n    \"publicatiedatum\": \"2019-04-09\",\n    \"vertrouwelijkheidaanduiding\": \"openbaar\",\n    \"betalingsindicatie\": \"geheel\",\n    \"laatsteBetaalDatum\": \"2019-01-01\",\n    \"zaakgeometrie\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n            53,\n            5\n        ]\n    },\n    \"opschorting\": {\n        \"indicatie\": true,\n        \"reden\": \"string\"\n    },\n    \"selectielijstklasse\": \"http://example.com\",\n    \"archiefstatus\": \"nog_te_archiveren\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-001b) Zaak bijwerken is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4db223ef-0730-4da5-81f4-2df1b0975f10",
														"exec": [
															"pm.test(\"Zaak bijwerken met valide gegevens geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Zaak bijwerken past gegevens correct aan\", function() {",
															"    pm.expect(pm.response.json().omschrijving).to.be.equal(pm.globals.get(\"omschrijving\"));",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "f8050155-7fe9-4dbe-bf6e-85474686a973",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"pm.globals.set(\"omschrijving\", \"aangepaste omschrijving\");",
															"body.omschrijving = pm.globals.get(\"omschrijving\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-001c) Zaak deels bijwerken is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4db223ef-0730-4da5-81f4-2df1b0975f10",
														"exec": [
															"pm.test(\"Zaak deels bijwerken met valide zaaktype url geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"    pm.expect(pm.response.json().toelichting).to.be.equal(pm.globals.get(\"toelichting\"));",
															"});",
															"",
															"pm.test(\"Zaak deels bijwerken past gegevens correct aan\", function() {",
															"    pm.expect(pm.response.json().toelichting).to.be.equal(pm.globals.get(\"toelichting\"));",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "f8050155-7fe9-4dbe-bf6e-85474686a973",
														"exec": [
															"pm.globals.set(\"toelichting\", \"aangepaste toelichting\")"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"toelichting\": \"{{toelichting}}\"\n}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-001d) Zaak aanmaken met ongeldige zaaktype url is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "759de81f-fe06-48a8-9586-d495f3c77444",
														"exec": [
															"pm.test(\"Zaak aanmaken met zaaktype url die niet resulteert in 200 geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"zaaktype\");",
															"    pm.expect(error.code).to.be.equal(\"bad-url\");",
															"});",
															"",
															"// If the test failed and the Zaak was created, delete it",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-001e) Zaak bijwerken met ongeldige zaaktype url is onmogelijk\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete Zaak\");",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "b79c193c-ee7a-46e6-979e-398d5edfa06c",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.zaaktype = pm.environment.get(\"mock_url\") + \"/404\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-001e) Zaak bijwerken met ongeldige zaaktype url is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "759de81f-fe06-48a8-9586-d495f3c77444",
														"exec": [
															"pm.test(\"Zaak bijwerken met zaaktype url die niet resulteert in 200 geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"zaaktype\");",
															"    pm.expect(error.code).to.be.equal(\"bad-url\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "b79c193c-ee7a-46e6-979e-398d5edfa06c",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.zaaktype = pm.environment.get(\"mock_url\") + \"/404\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-001f) Zaak deels bijwerken met ongeldige zaaktype url is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "759de81f-fe06-48a8-9586-d495f3c77444",
														"exec": [
															"pm.test(\"Zaak deels bijwerken met zaaktype url die niet resulteert in 200 geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"zaaktype\");",
															"    pm.expect(error.code).to.be.equal(\"bad-url\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "b79c193c-ee7a-46e6-979e-398d5edfa06c",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{mock_url}}/404\"\n}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-001g) Zaak aanmaken met zaaktype url die niet wijst naar Zaaktype is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "759de81f-fe06-48a8-9586-d495f3c77444",
														"exec": [
															"pm.test.skip(\"Zaak aanmaken met zaaktype url die niet wijst naar Zaaktype-resource geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"zaaktype\");",
															"    pm.expect(error.code).to.be.equal(\"invalid-resource\");",
															"});",
															"",
															"// If the test failed and the Zaak was created, delete it",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-001h) Zaak bijwerken met zaaktype url die niet wijst naar Zaaktype is onmogelijk\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete Zaak\");",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "b79c193c-ee7a-46e6-979e-398d5edfa06c",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.zaaktype = pm.environment.get(\"mock_url\") + \"/200\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-001h) Zaak bijwerken met zaaktype url die niet wijst naar Zaaktype is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "759de81f-fe06-48a8-9586-d495f3c77444",
														"exec": [
															"pm.test.skip(\"Zaak bijwerken met zaaktype url die niet wijst naar Zaaktype-resource geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"zaaktype\");",
															"    pm.expect(error.code).to.be.equal(\"invalid-resource\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "b79c193c-ee7a-46e6-979e-398d5edfa06c",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.zaaktype = pm.environment.get(\"mock_url\") + \"/200\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-001i) Zaak deels bijwerken met zaaktype url die niet wijst naar Zaaktype is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "759de81f-fe06-48a8-9586-d495f3c77444",
														"exec": [
															"pm.test.skip(\"Zaak deels bijwerken met zaaktype url die niet wijst naar Zaaktype-resource geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"zaaktype\");",
															"    pm.expect(error.code).to.be.equal(\"invalid-resource\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "b79c193c-ee7a-46e6-979e-398d5edfa06c",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaaktype\": \"{{mock_url}}/200\"\n}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "4bcb0e95-aa0f-4b40-864f-0ba32ceb6617",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "b2b5d32b-6f4b-46e5-9722-efe1ce7bb603",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "zrc-002",
									"item": [
										{
											"name": "(zrc-002a) Zaak aanmaken met bestaande combinatie identificatie en bronorganisatie is onmogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "27106eae-1a93-4e78-82d5-5b0d4719673f",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.identificatie = pm.globals.get(\"zaak_id\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "b34be4ba-bf87-4ded-8794-c3a0084faa5d",
														"exec": [
															"pm.test(\"Zaak aanmaken met bestaande combinatie bronorganisatie en identificatie geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"identificatie\");",
															"    pm.expect(error.code).to.be.equal(\"identificatie-niet-uniek\");",
															"});",
															"",
															"// If the test failed and the Zaak was created, delete it",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create Zaak with unique identificatie and bronorganisatie\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete Zaak\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Zaak with unique identificatie and bronorganisatie",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "01e98b0e-0bea-40a1-8485-67695fb020b3",
														"exec": [
															"pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"",
															"if(pm.response.code != 201) {",
															"    postman.setNextRequest(\"Retrieve Zaken for bronorganisatie\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{zaak_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												},
												"description": "Maakt een Zaak aan die gebruikt zal worden in de tests, deze zaak wordt na de tests weer verwijderd.\n\nDe body van deze Zaak zal ook als variabele opgeslagen worden en gebruikt worden (met kleine aanpassingen iedere keer) in de requests voor de validatie tests, om te voorkomen dat telkens hetzelfde body gekopieerd moet worden."
											},
											"response": []
										},
										{
											"name": "(zrc-002b) Zaak bijwerken met bestaande combinatie identificatie en bronorganisatie is onmogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "27106eae-1a93-4e78-82d5-5b0d4719673f",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.identificatie = pm.globals.get(\"zaak_id\");",
															"body.bronorganisatie = pm.globals.get(\"zaak_bronorganisatie\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "b34be4ba-bf87-4ded-8794-c3a0084faa5d",
														"exec": [
															"pm.test(\"Zaak aanmaken met bestaande combinatie bronorganisatie en identificatie geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"identificatie\");",
															"    pm.expect(error.code).to.be.equal(\"identificatie-niet-uniek\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-002c) Zaak deels bijwerken met bestaande combinatie identificatie en bronorganisatie is onmogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "27106eae-1a93-4e78-82d5-5b0d4719673f",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.identificatie = pm.globals.get(\"zaak_id\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "b34be4ba-bf87-4ded-8794-c3a0084faa5d",
														"exec": [
															"pm.test(\"Zaak aanmaken met bestaande combinatie bronorganisatie en identificatie geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"identificatie\");",
															"    pm.expect(error.code).to.be.equal(\"identificatie-niet-uniek\");",
															"});",
															"",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Retrieve Zaken for bronorganisatie\"]);",
															"postman.setNextRequest(\"(COMMON) Delete Zaak\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"identificatie\": \"{{zaak_id}}\",\n\t\"bronorganisatie\": \"{{zaak_bronorganisatie}}\"\n}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Retrieve Zaken for bronorganisatie",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "13b55b82-8f68-47fc-82bd-3fdd1d7c0d82",
														"exec": [
															"pm.globals.set(\"zaken_for_bronorganisatie\", pm.response.json().results);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{zrc_url}}/zaken?bronorganisatie={{zaak_bronorganisatie}}",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													],
													"query": [
														{
															"key": "bronorganisatie",
															"value": "{{zaak_bronorganisatie}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-002d) Genereer unieke identificatie voor Zaak onder bronorganisatie",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "41140574-2623-42f7-88be-619ceaaa946a",
														"exec": [
															"pm.test(\"Zaak aanmaken zonder identificatie genereert unieke identificatie onder bronorganisatie\", function() {",
															"    var created_zaak_id = pm.response.json().identificatie",
															"    ",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"    ",
															"    pm.response.to.have.status(201);",
															"    ",
															"    // Compare the identificatie of the created Zaak with all the identificaties of other Zaken",
															"    // with the same bronorganisatie",
															"    var zaken_with_same_id = pm.globals.get(\"zaken_for_bronorganisatie\").filter(zaak => zaak.identificatie === created_zaak_id);",
															"    ",
															"    // Verify that the identificatie for the created Zaak isn't the same as any other",
															"    pm.expect(zaken_with_same_id.length).to.be.equal(0);",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-003a) ZaakInformatieObject aanmaken is mogelijk\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete Zaak\");   ",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "a34e2e85-35bc-4ff1-9e4c-00b9a8f1908f",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{zaak_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "af5926ac-c8a4-418b-9692-ec4597986a42",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "3e69d346-d67c-40ed-a089-268403d5d202",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "zrc-003",
									"item": [
										{
											"name": "(zrc-003a) ZaakInformatieObject aanmaken is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c4a77da4-79df-4b1d-91f7-60eb4d0ee2e4",
														"exec": [
															"pm.test(\"ZaakInformatieObject aanmaken met valide gegevens geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"zaakinformatieobject_body\", pm.request.body.raw);",
															"    pm.globals.set(\"created_zaakinformatieobject_url\", pm.response.json().url);",
															"} else {",
															"    postman.setNextRequest(\"(zrc-003d) ZaakInformatieObject aanmaken met ongeldige informatieobject url is onmogelijk\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{zaak_url}}\",\n\t\"informatieobject\": \"{{informatieobject_url}}\",\n\t\"titel\": \"test\",\n\t\"beschrijving\": \"bla\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaakinformatieobjecten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaakinformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-003b) ZaakInformatieObject bijwerken is mogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "9e93eda4-673e-435b-afd9-82cacf42d79d",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaakinformatieobject_body\"));",
															"pm.globals.set(\"beschrijving\", \"aangepaste beschrijving\");",
															"body.beschrijving = pm.globals.get(\"beschrijving\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "d2347dd7-3e66-4ded-9fd5-a491f960df50",
														"exec": [
															"pm.test(\"ZaakInformatieObject bijwerken met valide gegevens geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"ZaakInformatieObject bijwerken past gegevens correct aan\", function() {",
															"    pm.expect(pm.response.json().beschrijving).to.be.equal(pm.globals.get(\"beschrijving\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_zaakinformatieobject_url}}",
													"host": [
														"{{created_zaakinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-003c) ZaakInformatieObject deels bijwerken is mogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "9e93eda4-673e-435b-afd9-82cacf42d79d",
														"exec": [
															"pm.globals.set(\"titel\", \"aangepaste titel\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "d2347dd7-3e66-4ded-9fd5-a491f960df50",
														"exec": [
															"pm.test(\"ZaakInformatieObject deels bijwerken met valide gegevens geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"ZaakInformatieObject deels bijwerken past gegevens correct aan\", function() {",
															"    pm.expect(pm.response.json().titel).to.be.equal(pm.globals.get(\"titel\"));",
															"});",
															"",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-003d) ZaakInformatieObject aanmaken met ongeldige informatieobject url is onmogelijk\"]);",
															"postman.setNextRequest(\"(COMMON) Delete ZaakInformatieObject\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"titel\": \"{{titel}}\"\n}"
												},
												"url": {
													"raw": "{{created_zaakinformatieobject_url}}",
													"host": [
														"{{created_zaakinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-003d) ZaakInformatieObject aanmaken met ongeldige informatieobject url is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f545dd17-744b-4c50-99f5-680a00de9689",
														"exec": [
															"pm.test(\"BesluitInformatieObject aanmaken met informatieobject url die niet resulteert in 200 geeft 404\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that error was thrown for correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"informatieobject\");",
															"    pm.expect(error.code).to.be.equal(\"bad-url\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaakinformatieobject_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-004a) ZaakInformatieObject aanmaken zet aard_relatie op hoort_bij\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete ZaakInformatieObject\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{zaak_url}}\",\n\t\"informatieobject\": \"{{mock_url}}/404\",\n\t\"titel\": \"test\",\n\t\"beschrijving\": \"bla\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaakinformatieobjecten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaakinformatieobjecten"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "zrc-004",
									"item": [
										{
											"name": "(zrc-004a) ZaakInformatieObject aanmaken zet aard_relatie op hoort_bij en registratiedatum op nu",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1cc9ef47-2191-4b69-9b2c-34c7517b8b3e",
														"exec": [
															"var moment = require('moment');",
															"",
															"pm.test(\"ZaakInformatieObject aanmaken zet aardRelatie op legt_vast\", function() {",
															"    pm.expect(pm.response.json().aardRelatieWeergave).to.include(\"Hoort bij\");",
															"});",
															"",
															"pm.test(\"ZaakInformatieObject aanmaken zet registratiedatum op moment van aanmaken\", function() {",
															"    pm.expect(pm.response.json().registratiedatum).to.include(moment.utc().format(\"YYYY-MM-DD\"));",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaakinformatieobject_url\", pm.response.json().url);",
															"    pm.globals.set(\"zaakinformatieobject_body\", pm.request.body.raw)",
															"} else {",
															"    postman.setNextRequest(\"Create ZaakInformatieObject\");",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"informatieobject\": \"{{informatieobject_url}}\",\n\t\"zaak\": \"{{zaak_url}}\",\n\t\"registratiedatum\": \"1900-01-01\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaakinformatieobjecten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaakinformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-004b) ZaakInformatieObject bijwerken relatie aanpassen is niet mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "242cf78b-35ac-4bec-83f8-cf47d03e461e",
														"exec": [
															"pm.test(\"ZaakInformatieObject bijwerken relatie aanpassen is niet mogelijk\", function() {",
															"    pm.expect(pm.response.json().aardRelatieWeergave).to.include(\"Hoort bij\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "c8ca8ad9-e1d5-4a70-ad7f-3d30d5d067a2",
														"exec": [
															"var body = JSON.parse(pm.globals.get(\"zaakinformatieobject_body\"));",
															"body.aardRelatieWeergave = \"aangepast\";",
															"",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_zaakinformatieobject_url}}",
													"host": [
														"{{created_zaakinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-004c) ZaakInformatieObject deels bijwerken relatie aanpassen is niet mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "242cf78b-35ac-4bec-83f8-cf47d03e461e",
														"exec": [
															"pm.test(\"ZaakInformatieObject deels bijwerken relatie aanpassen is niet mogelijk\", function() {",
															"    pm.expect(pm.response.json().aardRelatieWeergave).to.include(\"Hoort bij\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "c8ca8ad9-e1d5-4a70-ad7f-3d30d5d067a2",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"aardRelatieWeergave\": \"aangepast\"\n}"
												},
												"url": {
													"raw": "{{created_zaakinformatieobject_url}}",
													"host": [
														"{{created_zaakinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create different Zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7b482bbe-ecdc-472b-878e-58bf574b94ee",
														"exec": [
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"} else {",
															"    postman.setNextRequest(\"Create ZaakInformatieObject\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{zaak_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-004d) ZaakInformatieObject bijwerken zaak aanpassen is niet toegestaan",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "242cf78b-35ac-4bec-83f8-cf47d03e461e",
														"exec": [
															"pm.test(\"ZaakInformatieObject bijwerken zaak aanpassen geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"zaak\");",
															"    pm.expect(error.code).to.be.equal(\"wijzigen-niet-toegelaten\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "c8ca8ad9-e1d5-4a70-ad7f-3d30d5d067a2",
														"exec": [
															"var body = JSON.parse(pm.globals.get(\"zaakinformatieobject_body\"));",
															"body.zaak = pm.globals.get(\"created_zaak_url\");",
															"",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_zaakinformatieobject_url}}",
													"host": [
														"{{created_zaakinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-004e) ZaakInformatieObject deels bijwerken zaak aanpassen is niet toegestaan",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "242cf78b-35ac-4bec-83f8-cf47d03e461e",
														"exec": [
															"pm.test(\"ZaakInformatieObject deels bijwerken zaak aanpassen geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"zaak\");",
															"    pm.expect(error.code).to.be.equal(\"wijzigen-niet-toegelaten\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "c8ca8ad9-e1d5-4a70-ad7f-3d30d5d067a2",
														"exec": [
															"var body = JSON.parse(pm.globals.get(\"zaakinformatieobject_body\"));",
															"body.zaak = pm.globals.get(\"created_zaak_url\");",
															"",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\"\n}"
												},
												"url": {
													"raw": "{{created_zaakinformatieobject_url}}",
													"host": [
														"{{created_zaakinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-004f) ZaakInformatieObject bijwerken informatieobject aanpassen is niet toegestaan",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "242cf78b-35ac-4bec-83f8-cf47d03e461e",
														"exec": [
															"pm.test(\"ZaakInformatieObject bijwerken informatieobject aanpassen geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"informatieobject\");",
															"    pm.expect(error.code).to.be.equal(\"wijzigen-niet-toegelaten\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "c8ca8ad9-e1d5-4a70-ad7f-3d30d5d067a2",
														"exec": [
															"var body = JSON.parse(pm.globals.get(\"zaakinformatieobject_body\"));",
															"body.informatieobject = pm.globals.get(\"informatieobject_gebruiksrecht_null_url\");",
															"",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_zaakinformatieobject_url}}",
													"host": [
														"{{created_zaakinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-004g) ZaakInformatieObject deels bijwerken informatieobject aanpassen is niet toegestaan",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "242cf78b-35ac-4bec-83f8-cf47d03e461e",
														"exec": [
															"pm.test(\"ZaakInformatieObject deels bijwerken informatieobject aanpassen geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"informatieobject\");",
															"    pm.expect(error.code).to.be.equal(\"wijzigen-niet-toegelaten\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "c8ca8ad9-e1d5-4a70-ad7f-3d30d5d067a2",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"informatieobject\": \"{{informatieobject_gebruiksrecht_null_url}}\"\n}"
												},
												"url": {
													"raw": "{{created_zaakinformatieobject_url}}",
													"host": [
														"{{created_zaakinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete different Zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "28ac48c8-6543-468c-ae4b-4459a318bad8",
														"exec": [
															"pm.globals.unset(\"created_zaak_url\");",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create ZaakInformatieObject\"]);",
															"postman.setNextRequest(\"(COMMON) Delete ZaakInformatieObject\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "zrc-005",
									"item": [
										{
											"name": "Create ZaakInformatieObject",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a16b3e9a-8a8d-4332-ae05-c4b27c1aa9a6",
														"exec": [
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaakinformatieobject_url\", pm.response.json().url);",
															"} else {",
															"    postman.setNextRequest(\"Retrieve Autorisatie details\");",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{zaakinformatieobject_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaakinformatieobjecten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaakinformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-005a) ZaakInformatieObject aanmaken maakt ObjectInformatieObject aan met objectType zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d92d8513-c4c0-4b21-a2c3-cf028bad8261",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.test(\"ZaakInformatieObject aanmaken maakt een ObjectInformatieObject in DRC\", function() {",
															"    pm.response.to.have.status(200);",
															"    pm.expect(jsonData.length).to.be.equal(1);",
															"});",
															"",
															"pm.test(\"ZaakInformatieObject aanmaken maakt een ObjectInformatieObject met objectType zaak\", function() {",
															"    pm.expect(jsonData[0].objectType).to.be.equal(\"zaak\");",
															"});",
															"",
															"pm.test(\"ZaakInformatieObject aanmaken maakt een ObjectInformatieObject met correcte zaak en informatieobject\", function() {",
															"    pm.expect(jsonData[0].object).to.be.equal(pm.globals.get(\"zaak_url\"));",
															"    pm.expect(jsonData[0].informatieobject).to.be.equal(pm.globals.get(\"informatieobject_url\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{drc_url}}/objectinformatieobjecten?object={{zaak_url}}&informatieobject={{informatieobject_url}}",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"objectinformatieobjecten"
													],
													"query": [
														{
															"key": "object",
															"value": "{{zaak_url}}"
														},
														{
															"key": "informatieobject",
															"value": "{{informatieobject_url}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete ZaakInformatieObject",
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_zaakinformatieobject_url}}",
													"host": [
														"{{created_zaakinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-005b) ZaakInformatieObject verwijderen verwijdert ObjectInformatieObject uit DRC",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d92d8513-c4c0-4b21-a2c3-cf028bad8261",
														"exec": [
															"pm.test(\"BesluitInformatieObject verwijderen verwijdert ObjectInformatieObject in DRC\", function() {",
															"    pm.response.to.have.status(200);",
															"    pm.expect(pm.response.json().length).to.be.equal(0);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{drc_url}}/objectinformatieobjecten?object={{zaak_url}}&informatieobject={{informatieobject_url}}",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"objectinformatieobjecten"
													],
													"query": [
														{
															"key": "object",
															"value": "{{zaak_url}}"
														},
														{
															"key": "informatieobject",
															"value": "{{informatieobject_url}}"
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "zrc-006 (WIP)",
									"item": [
										{
											"name": "Retrieve Autorisatie details",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2c2953c6-1e41-40ad-81d7-0088b82b6413",
														"exec": [
															"var autorisaties = pm.response.json().results[0].autorisaties;",
															"",
															"pm.globals.set(\"autorisaties_zaaktype\", autorisaties[0].zaaktype);",
															"pm.globals.set(\"autorisaties_maxVertrouwelijkheidaanduiding\", autorisaties[0].maxVertrouwelijkheidaanduiding);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{ac_url}}/applicaties?clientIds=demo_limited",
													"host": [
														"{{ac_url}}"
													],
													"path": [
														"applicaties"
													],
													"query": [
														{
															"key": "clientIds",
															"value": "demo_limited"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create authorized Zaak",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "8dd4c05a-21f8-4cfb-81d6-ded16e48f584",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.zaaktype = pm.globals.get(\"autorisaties_zaaktype\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "4e39117c-68b9-4afa-b81c-418b3add848d",
														"exec": [
															"pm.globals.set(\"authorized_zaak_url\", pm.response.json().url);",
															"",
															"if(pm.response.code != 201) {",
															"    postman.setNextRequest(\"Create Zaak with different Zaaktype\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Zaak with different Zaaktype",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "d67b2e44-ed9d-4441-bfa3-55f60f9b3a00",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.zaaktype = pm.globals.get(\"archiving_zaaktypen\")[1];",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "e7d90bb8-1f3c-46fa-9ec2-d79c5d72fa90",
														"exec": [
															"pm.globals.set(\"zaak_with_different_zaaktype_url\", pm.response.json().url);",
															"",
															"if(pm.response.code != 201) {",
															"    postman.setNextRequest(\"Create Zaak with higher vertrouwelijkheidaanduiding\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJkZW1vIiwiaWF0IjoxNTU2ODk4MjAxLCJjbGllbnRfaWQiOiJkZW1vIiwidXNlcl9pZCI6IjEyMyIsInVzZXJfcmVwcmVzZW50YXRpb24iOiJEZW1vIFVzZXIifQ.tlneU99uWBp5_QWY1sPKo9WYfmYgUBVXAWvTQdrhGJE",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Zaak with higher vertrouwelijkheidaanduiding",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "aa1448a3-63a3-46b0-9980-fa931d30acb4",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.vertrouwelijkheidaanduiding = \"intern\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "d5fa89da-113a-4c12-9c5b-8c9aa4123b75",
														"exec": [
															"pm.globals.set(\"zaak_with_higher_vertrouwelijkheidaanduiding_url\", pm.response.json().url);",
															"",
															"if(pm.response.code != 201) {",
															"    postman.setNextRequest(\"Create Zaak to close\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-006a) Zaken lijst ontsluit zaken op basis van autorisaties van consumer",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "422d4c41-d5a7-4f13-83ca-4af0f7f5c9db",
														"exec": [
															"var response = pm.response.json();",
															"",
															"pm.test(\"Zaken lijst laat geen zaken zien met zaaktypes buiten autorisatie van consumer\", function() {",
															"    var zaken_with_zaaktypes_outside_autorisatie = response.results.some(item => item.zaaktype !== pm.globals.get(\"autorisaties_zaaktype\"));",
															"    pm.expect(zaken_with_zaaktypes_outside_autorisatie).to.be.equal(false);",
															"    ",
															"    var zaken_with_zaaktypes_inside_autorisatie = response.results.some(item => item.zaaktype === pm.globals.get(\"autorisaties_zaaktype\"));",
															"    pm.expect(zaken_with_zaaktypes_inside_autorisatie).to.be.equal(true);",
															"});",
															"",
															"pm.test(\"Zaken lijst laat geen zaken zien met vertrouwelijkheidaanduiding hoger dan maxVertrouwelijkheidaanduiding in autorisatie van consumer\", function() {",
															"    var zaken_with_greater_vertrouwelijkheidaanduiding = response.results.some(item => item.vertrouwelijkheidaanduiding !== pm.globals.get(\"autorisaties_maxVertrouwelijkheidaanduiding\"));",
															"    pm.expect(zaken_with_greater_vertrouwelijkheidaanduiding).to.be.equal(false);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt_token_without_claims}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-006b) Zaak aanmaken zonder verplichte scope in autorisatie niet toegestaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "2f92ca5e-2aad-42d1-9895-ca6d12b58bcf",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "7a821ebf-37d5-43e6-a93f-42f2cc4268e4",
														"exec": [
															"pm.test(\"Zaak aanmaken met applicatie zonder zaken.aanmaken in autorisatie scopes niet toegestaan\", function() {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Delete Zaak with different Zaaktype\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete Zaak\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{jwt_token_without_claims}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete authorized Zaak",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{authorized_zaak_url}}",
													"host": [
														"{{authorized_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Zaak with different Zaaktype",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{zaak_with_different_zaaktype_url}}",
													"host": [
														"{{zaak_with_different_zaaktype_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Zaak with higher vertrouwelijkheidaanduiding",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f2905d57-193c-4f72-95bf-561325378ba2",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{zaak_with_higher_vertrouwelijkheidaanduiding_url}}",
													"host": [
														"{{zaak_with_higher_vertrouwelijkheidaanduiding_url}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "f2ebf15b-f3f1-400c-95ec-aa13f7e46bef",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "38d06013-8ebb-4b0f-a8aa-bccfd6af74a0",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "zrc-007 (WIP)",
									"item": [
										{
											"name": "Create Zaak to close",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4c8f1f41-e776-423f-9123-4939889bec5e",
														"exec": [
															"pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"",
															"if(pm.response.code != 201) {",
															"    postman.setNextRequest(\"(zrc-008a) Valideer expliciet gedefinieerde vertrouwelijkheidaanduiding\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{zaak_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create relation between Zaak and Informatieobject with gebruiksrecht not null",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fa9f354c-0464-494e-b9fa-9635b21b2d43",
														"exec": [
															"pm.globals.set(\"created_zaakinformatieobject_url\", pm.response.json().url);",
															"",
															"if(pm.response.code != 201) {",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-008a) Valideer expliciet gedefinieerde vertrouwelijkheidaanduiding\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete Zaak\");   ",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "5be8e943-844c-4786-9173-08a7e1dfb2c8",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"informatieobject\": \"{{informatieobject_url}}\",\n    \"zaak\": \"{{created_zaak_url}}\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaakinformatieobjecten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaakinformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add Resultaat to Zaak",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "7f3ed8a2-7bc9-4c77-85b1-561482065971",
														"exec": [
															"pm.globals.set(\"resultaattype\", pm.globals.get(\"zaaktype_resultaattypen\")[0]);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "1c33254a-fe4a-4192-9108-4b6925265a80",
														"exec": [
															"pm.globals.set(\"zaak_resultaat_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"resultaatType\": \"{{resultaattype}}\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/resultaten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"resultaten"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add Eindstatus to Zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7226fe56-bdcc-42d9-ad16-07852570b778",
														"exec": [
															"pm.globals.set(\"eindstatus_datumStatusGezet\", pm.response.json().datumStatusGezet);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "820be47c-e617-4e5e-aa70-5e4ab1440b54",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"statusType\": \"{{eindstatustype}}\",\n\t\"datumStatusGezet\": \"2018-04-20T13:37:00\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/statussen",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"statussen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-007a) Zaak.einddatum volgt logisch uit eindstatus",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7226fe56-bdcc-42d9-ad16-07852570b778",
														"exec": [
															"pm.test(\"Toevoegen eindstatus aan Zaak laat Zaak.einddatum afleiden uit status.datumStatusGezet\", function(){",
															"    pm.response.to.have.status(200);",
															"    ",
															"    // TODO error handling voor split",
															"    var einddatum = pm.response.json().einddatum;",
															"    pm.expect(pm.globals.get(\"eindstatus_datumStatusGezet\").split(\"T\")[0]).to.be.equal(einddatum);",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "820be47c-e617-4e5e-aa70-5e4ab1440b54",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Retrieve related Informatieobjecten",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d96bd2c6-5ee1-420c-b88d-022a0a69671c",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"var related_informatieobjecten_urls = [];",
															"for(i=0; i<jsonData.length; i++) {",
															"    related_informatieobjecten_urls.add(jsonData[i].informatieobject);",
															"}",
															"",
															"pm.globals.set(\"related_informatieobjecten_urls\", related_informatieobjecten_urls);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{zrc_url}}/zaakinformatieobjecten?zaak={{created_zaak_url}}&informatieobject={{informatieobject_url}}",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaakinformatieobjecten"
													],
													"query": [
														{
															"key": "zaak",
															"value": "{{created_zaak_url}}"
														},
														{
															"key": "informatieobject",
															"value": "{{informatieobject_url}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-007b) Informatieobject.indicatieGebruikersrecht niet null bij afsluiten zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7226fe56-bdcc-42d9-ad16-07852570b778",
														"exec": [
															"pm.test(\"Afsluiten Zaak betekent Informatieobject.indicatieGebruiksrecht gezet voor alle gerelateerde objecten\", function(){",
															"    pm.response.to.have.status(200);",
															"    pm.expect(pm.response.json().indicatieGebruiksrecht).to.not.be.equal(null);",
															"});",
															"",
															"var index = pm.globals.get(\"current_related_informatieobject_index\");",
															"",
															"if (index == pm.globals.get(\"related_informatieobjecten_urls\").length - 1) {",
															"    postman.setNextRequest(\"(zrc-007c) Afgesloten zaak bijwerken is niet toegestaan\");",
															"} else {",
															"    // Loop",
															"    pm.globals.set(\"current_related_informatieobject_index\", index + 1);",
															"    postman.setNextRequest(\"(zrc-007b) Informatieobject.indicatieGebruikersrecht niet null bij afsluiten zaak\");",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "820be47c-e617-4e5e-aa70-5e4ab1440b54",
														"exec": [
															"if(!pm.globals.get(\"current_related_informatieobject_index\")) {",
															"    pm.globals.set(\"current_related_informatieobject_index\", 0);",
															"}",
															"",
															"pm.globals.set(\"current_related_informatieobject_url\", pm.globals.get(\"related_informatieobjecten_urls\")[pm.globals.get(\"current_related_informatieobject_index\")]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{current_related_informatieobject_url}}",
													"host": [
														"{{current_related_informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-007c) Afgesloten zaak bijwerken is niet toegestaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "8dce713a-a7ea-40be-a751-6d56c1a91480",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.omschrijving = \"aanpassing\"",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "9e3dd206-12d7-43e7-ac77-8e9122340e37",
														"exec": [
															"pm.test.skip(\"Afgesloten Zaak bijwerken geeft 403\", function() {",
															"    pm.response.to.have.status(403);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Authorization",
														"value": "{{jwt_token_no_geforceerd_bijwerken}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-007d) Afgesloten zaak deels bijwerken is niet toegestaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "8dce713a-a7ea-40be-a751-6d56c1a91480",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "9e3dd206-12d7-43e7-ac77-8e9122340e37",
														"exec": [
															"pm.test.skip(\"Afgesloten Zaak bijwerken geeft 403\", function() {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create relation between Zaak and Informatieobject with gebruiksrecht null\"]);",
															"postman.setNextRequest(\"(COMMON) Delete ZaakInformatieObject\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Authorization",
														"value": "{{jwt_token_no_geforceerd_bijwerken}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"omschrijving\": \"aangepast\"\n}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create relation between Zaak and Informatieobject with gebruiksrecht null",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fa9f354c-0464-494e-b9fa-9635b21b2d43",
														"exec": [
															"pm.globals.set(\"created_zaakinformatieobject_url\", pm.response.json().url)"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "5be8e943-844c-4786-9173-08a7e1dfb2c8",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"informatieobject\": \"{{informatieobject_gebruiksrecht_null_url}}\",\n    \"zaak\": \"{{created_zaak_url}}\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaakinformatieobjecten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaakinformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-007e) Eindstatus toevoegen aan Zaak met Informatieobject.indicatieGebruiksrecht null",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7226fe56-bdcc-42d9-ad16-07852570b778",
														"exec": [
															"pm.test(\"Eindstatus toevoegen aan Zaak met gerelateerd Informatieobject met indicatieGebruiksrecht null geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()['invalidParams'][0];",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"indicatiegebruiksrecht-unset\");",
															"});",
															"",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Add non-Eindstatus to Zaak\"]);",
															"postman.setNextRequest(\"(COMMON) Delete ZaakInformatieObject\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "820be47c-e617-4e5e-aa70-5e4ab1440b54",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"statusType\": \"{{eindstatustype}}\",\n\t\"datumStatusGezet\": \"2018-04-22T13:37:00\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/statussen",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"statussen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add non-Eindstatus to Zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7226fe56-bdcc-42d9-ad16-07852570b778",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "820be47c-e617-4e5e-aa70-5e4ab1440b54",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"statusType\": \"{{non_eindstatustype}}\",\n\t\"datumStatusGezet\": \"2018-04-22T13:39:00\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/statussen",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"statussen"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-007f) Zaak.einddatum leeg als geen eindstatus gezet",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7226fe56-bdcc-42d9-ad16-07852570b778",
														"exec": [
															"pm.test(\"Toevoegen status die geen eindstatus is aan Zaak betekent Zaak.einddatum leeg\", function(){",
															"    pm.response.to.have.status(200);",
															"    ",
															"    var einddatum = pm.response.json().einddatum;",
															"    pm.expect(einddatum).to.be.equal(null);",
															"});",
															"",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-008a) Valideer expliciet gedefinieerde vertrouwelijkheidaanduiding\"]);",
															"postman.setNextRequest(\"(COMMON) Delete Zaak\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "820be47c-e617-4e5e-aa70-5e4ab1440b54",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "c67feddd-8a38-42e1-8e45-f489eebb36ae",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "a37470a4-94cc-4d93-93bb-c6e21fcea659",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "zrc-008",
									"item": [
										{
											"name": "(zrc-008a) Valideer expliciet gedefinieerde vertrouwelijkheidaanduiding",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4d176dd2-b596-4624-bfe8-5ce952a103f5",
														"exec": [
															"pm.test(\"Expliciete vertrouwelijkheidaanduiding bij aanmaken Zaak moet toegekend worden aan Zaak\", function() {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.vertrouwelijkheidaanduiding).to.be.equal(pm.globals.get(\"expliciete_vertrouwelijkheid\"));",
															"    ",
															"    pm.globals.set(\"created_zaak_url\", jsonData.url);",
															"});",
															"",
															"if(pm.response.code != 201) {",
															"    postman.setNextRequest(\"(zrc-008d) Valideer vertrouwelijkheidaanduiding afgeleid uit Zaaktype\");",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "f0914778-27b4-4cb3-8af8-7fce47ecc6f6",
														"exec": [
															"pm.globals.set(\"expliciete_vertrouwelijkheid\", \"zeer geheim\");",
															"",
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.vertrouwelijkheidaanduiding = pm.globals.get(\"expliciete_vertrouwelijkheid\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-008b) Valideer expliciet gedefinieerde vertrouwelijkheidaanduiding (PUT)",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4d176dd2-b596-4624-bfe8-5ce952a103f5",
														"exec": [
															"pm.test(\"Expliciete vertrouwelijkheidaanduiding bij bijwerken Zaak moet toegekend worden aan Zaak\", function() {",
															"    pm.expect(pm.response.json().vertrouwelijkheidaanduiding).to.be.equal(pm.globals.get(\"expliciete_vertrouwelijkheid\"));",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "f0914778-27b4-4cb3-8af8-7fce47ecc6f6",
														"exec": [
															"pm.globals.set(\"expliciete_vertrouwelijkheid\", \"intern\");",
															"",
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.vertrouwelijkheidaanduiding = pm.globals.get(\"expliciete_vertrouwelijkheid\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-008c) Valideer expliciet gedefinieerde vertrouwelijkheidaanduiding (PATCH)",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4d176dd2-b596-4624-bfe8-5ce952a103f5",
														"exec": [
															"pm.test(\"Expliciete vertrouwelijkheidaanduiding bij deels bijwerken Zaak moet toegekend worden aan Zaak\", function() {",
															"    pm.expect(pm.response.json().vertrouwelijkheidaanduiding).to.be.equal(pm.globals.get(\"expliciete_vertrouwelijkheid\"));",
															"});",
															"",
															"",
															"if(pm.globals.get(\"created_zaak_url\")) {",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-008d) Valideer vertrouwelijkheidaanduiding afgeleid uit Zaaktype\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete Zaak\");",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "f0914778-27b4-4cb3-8af8-7fce47ecc6f6",
														"exec": [
															"pm.globals.set(\"expliciete_vertrouwelijkheid\", \"vertrouwelijk\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"vertrouwelijkheidaanduiding\": \"{{expliciete_vertrouwelijkheid}}\"\n}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-008d) Valideer vertrouwelijkheidaanduiding afgeleid uit Zaaktype",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "1cc107ce-c1c0-41b7-89f3-3a26436a05ae",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = pm.globals.get(\"zaak_body\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", body);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "6087f02c-3a69-40f3-aca8-9e894767813c",
														"exec": [
															"pm.test(\"Vertrouwelijkheidaanduiding bij aanmaken Zaak afgeleid uit Zaaktype indien niet meegegeven\", function() {",
															"    pm.expect(pm.response.json().vertrouwelijkheidaanduiding).to.be.equal(pm.globals.get(\"zaaktype_vertrouwelijkheid\"));",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-009a) Valideren communicatiekanaal url bij aanmaken Zaak\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete Zaak\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "e5600f83-fc3f-4922-951c-e90331cc30ac",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f5c9649f-4e65-48e8-93c9-2f87efdf322f",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "zrc-009",
									"item": [
										{
											"name": "(zrc-009a) Valideren communicatiekanaal url bij aanmaken Zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0bc39030-ab3a-4dd0-9996-792966daf183",
														"exec": [
															"pm.test(\"Zaak aanmaken met ongeldige communicatiekanaal url geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"communicatiekanaal\");",
															"    pm.expect(error.code).to.be.equal(\"bad-url\");",
															"});",
															"",
															"// If the test failed and the Zaak was created, delete it",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-009b) Valideren communicatiekanaal url bij bijwerken Zaak\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete Zaak\");",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "f4f5279f-6c17-4d32-8022-6758173ec716",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.communicatiekanaal = pm.environment.get(\"mock_url\") + \"/404\"",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-009b) Valideren communicatiekanaal url bij bijwerken Zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0bc39030-ab3a-4dd0-9996-792966daf183",
														"exec": [
															"pm.test(\"Zaak bijwerken met ongeldige communicatiekanaal url geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"communicatiekanaal\");",
															"    pm.expect(error.code).to.be.equal(\"bad-url\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "f4f5279f-6c17-4d32-8022-6758173ec716",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.communicatiekanaal = pm.environment.get(\"mock_url\") + \"/404\"",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-009c) Valideren communicatiekanaal url bij deels bijwerken Zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0bc39030-ab3a-4dd0-9996-792966daf183",
														"exec": [
															"pm.test(\"Zaak deels bijwerken met ongeldige communicatiekanaal url geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"communicatiekanaal\");",
															"    pm.expect(error.code).to.be.equal(\"bad-url\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "f4f5279f-6c17-4d32-8022-6758173ec716",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"communicatiekanaal\": \"{{mock_url}}/404\"\n}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-009d) Valideren communicatiekanaal-resource bij aanmaken Zaak",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "c8fea466-da3a-4ed8-ac79-7b0cd10ac582",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.communicatiekanaal = pm.environment.get(\"mock_url\") + \"/200\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "b364538b-6bb5-4a95-af4b-bc86e9969068",
														"exec": [
															"pm.test(\"Zaak aanmaken met communicatiekanaal url die niet wijst naar Communicatiekanaal-resource geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"communicatiekanaal\");",
															"    pm.expect(error.code).to.be.equal(\"invalid-resource\");",
															"});",
															"",
															"// If the test failed and the Zaak was created, delete it",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-009e) Valideren communicatiekanaal url bij bijwerken Zaak\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete Zaak\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-009e) Valideren communicatiekanaal-resource bij bijwerken Zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0bc39030-ab3a-4dd0-9996-792966daf183",
														"exec": [
															"pm.test(\"Zaak bijwerken met communicatiekanaal url die niet wijst naar Communicatiekanaal-resource geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"communicatiekanaal\");",
															"    pm.expect(error.code).to.be.equal(\"invalid-resource\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "f4f5279f-6c17-4d32-8022-6758173ec716",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.communicatiekanaal = pm.environment.get(\"mock_url\") + \"/200\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-009f) Valideren communicatiekanaal-resource bij deels bijwerken Zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0bc39030-ab3a-4dd0-9996-792966daf183",
														"exec": [
															"pm.test(\"Zaak deels bijwerken met communicatiekanaal url die niet wijst naar Communicatiekanaal-resource geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"communicatiekanaal\");",
															"    pm.expect(error.code).to.be.equal(\"invalid-resource\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "f4f5279f-6c17-4d32-8022-6758173ec716",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"communicatiekanaal\": \"{{mock_url}}/200\"\n}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-009g) Zaak aanmaken met valide communicatiekanaal is mogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "c8fea466-da3a-4ed8-ac79-7b0cd10ac582",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.communicatiekanaal = \"https://ref.tst.vng.cloud/referentielijsten/api/v1/communicatiekanalen/2b757868-45c2-42ca-b637-b63ddc87beb4\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "b364538b-6bb5-4a95-af4b-bc86e9969068",
														"exec": [
															"pm.test(\"Zaak aanmaken met valide communicatiekanaal geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"});",
															"",
															"if(pm.response.code != 201) {",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-010a) Zaak aanmaken met ongeldige url in relevanteAndereZaken is onmogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-009h) Zaak bijwerken met valide communicatiekanaal is mogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "c8fea466-da3a-4ed8-ac79-7b0cd10ac582",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.communicatiekanaal = \"https://ref.tst.vng.cloud/referentielijsten/api/v1/communicatiekanalen/2b757868-45c2-42ca-b637-b63ddc87beb4\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "b364538b-6bb5-4a95-af4b-bc86e9969068",
														"exec": [
															"pm.test(\"Zaak bijwerken met valide communicatiekanaal geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-009i) Zaak deels bijwerken met valide communicatiekanaal is mogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "c8fea466-da3a-4ed8-ac79-7b0cd10ac582",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "b364538b-6bb5-4a95-af4b-bc86e9969068",
														"exec": [
															"pm.test(\"Zaak deels bijwerken met valide communicatiekanaal geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"if(pm.globals.get(\"created_zaak_url\")) {",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-010a) Zaak aanmaken met ongeldige url in relevanteAndereZaken is onmogelijk\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete Zaak\");   ",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"communicatiekanaal\": \"https://ref.tst.vng.cloud/referentielijsten/api/v1/communicatiekanalen/2b757868-45c2-42ca-b637-b63ddc87beb4\"\n}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "c6c84b57-df0c-4cbd-afb8-e92614613b3f",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "9810274f-f1da-4b81-9212-86393c6c081c",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "zrc-010",
									"item": [
										{
											"name": "(zrc-010a) Zaak aanmaken met ongeldige url in relevanteAndereZaken is onmogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "9cdfb036-7e3a-4692-8ff5-60b906d5bad0",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.relevanteAndereZaken = [{",
															"    \"zaak\": pm.environment.get(\"mock_url\") + \"/404\",",
															"    \"aardRelatie\": \"vervolg\"",
															"}];",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "3b98d08c-0556-42d2-a815-fbd008eafbac",
														"exec": [
															"pm.test(\"Zaak aanmaken met ongeldige url in relevanteAndereZaken geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"relevanteAndereZaken.0\");",
															"    pm.expect(error.code).to.be.equal(\"bad-url\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-010b) Zaak bijwerken met ongeldige url in relevanteAndereZaken is onmogelijk\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete Zaak\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-010b) Zaak bijwerken met ongeldige url in relevanteAndereZaken is onmogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "9cdfb036-7e3a-4692-8ff5-60b906d5bad0",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.relevanteAndereZaken = [{",
															"    \"zaak\": pm.environment.get(\"mock_url\") + \"/404\",",
															"    \"aardRelatie\": \"vervolg\"",
															"}];",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "3b98d08c-0556-42d2-a815-fbd008eafbac",
														"exec": [
															"pm.test(\"Zaak bijwerken met ongeldige url in relevanteAndereZaken geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"relevanteAndereZaken.0\");",
															"    pm.expect(error.code).to.be.equal(\"bad-url\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-010c) Zaak deels bijwerken met ongeldige url in relevanteAndereZaken is onmogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "9cdfb036-7e3a-4692-8ff5-60b906d5bad0",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "3b98d08c-0556-42d2-a815-fbd008eafbac",
														"exec": [
															"pm.test(\"Zaak deels bijwerken met ongeldige url in relevanteAndereZaken geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"relevanteAndereZaken.0\");",
															"    pm.expect(error.code).to.be.equal(\"bad-url\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"relevanteAndereZaken\": [{\n\t    \"zaak\": \"{{mock_url}}/404\",\n\t    \"aardRelatie\": \"vervolg\"\n\t}]\n}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-010d) Zaak aanmaken met relevanteAndereZaken is mogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "9cdfb036-7e3a-4692-8ff5-60b906d5bad0",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.relevanteAndereZaken = [{",
															"    \"zaak\": pm.globals.get(\"zaak_url\"),",
															"    \"aardRelatie\": \"vervolg\"",
															"}];",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "3b98d08c-0556-42d2-a815-fbd008eafbac",
														"exec": [
															"pm.test(\"Zaak aanmaken met geldige relevanteAndereZaken geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"});",
															"",
															"if(pm.response.code != 201) {",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-010e) Zaak bijwerken met relevanteAndereZaken is mogelijk\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-010e) Zaak bijwerken met relevanteAndereZaken is mogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "2e67d5ff-9d5c-4135-949d-9310a4c3945e",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.relevanteAndereZaken = [{",
															"    \"zaak\": pm.globals.get(\"zaak_url\"),",
															"    \"aardRelatie\": \"vervolg\"",
															"}];",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "34ddadfb-4583-4c13-8b4d-eee18348ea69",
														"exec": [
															"pm.test(\"Zaak bijwerken met geldige relevanteAndereZaken geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-010f) Zaak deels bijwerken met relevanteAndereZaken is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a231e003-4106-4749-a717-62969c5fac96",
														"exec": [
															"pm.test(\"Zaak deels bijwerken met geldige relevanteAndereZaken geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"if(pm.globals.get(\"created_zaak_url\")) {",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-011a) Zaak aanmaken met opschorting zonder indicatie en reden is onmogelijk\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete Zaak\");   ",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"relevanteAndereZaken\": [{\n\t    \"zaak\": \"{{zaak_url}}\",\n\t    \"aardRelatie\": \"vervolg\"\n\t}]\n}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "135cfef4-79cc-4e2e-abd1-811439e893f6",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "e31d0882-f1c5-4fe6-8360-ac7e1ea69a94",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "zrc-011 (NI)",
									"item": [
										{
											"name": "(zrc-011a) Zaak aanmaken met opschorting zonder indicatie en reden is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c3d8939f-9c16-49c6-a507-bfbd34abc9b6",
														"exec": [
															"pm.test(\"Zaak aanmaken met opschorting zonder indicatie en reden geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var errors = pm.response.json()[\"invalidParams\"];",
															"    pm.expect(errors[0].name).to.be.equal(\"opschorting.indicatie\");",
															"    pm.expect(errors[0].code).to.be.equal(\"required\");",
															"    ",
															"    pm.expect(errors[1].name).to.be.equal(\"opschorting.reden\");",
															"    pm.expect(errors[1].code).to.be.equal(\"required\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-011b) Zaak bijwerken met opschorting zonder indicatie en reden is onmogelijk\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete Zaak\");",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "8373d66a-0c08-4e2a-90ae-3fbad96dc51a",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.opschorting = {\"wrong_field\": \"test\"};",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-011b) Zaak bijwerken met opschorting zonder indicatie en reden is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c3d8939f-9c16-49c6-a507-bfbd34abc9b6",
														"exec": [
															"pm.test(\"Zaak bijwerken met opschorting zonder indicatie en reden geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var errors = pm.response.json()[\"invalidParams\"];",
															"    pm.expect(errors[0].name).to.be.equal(\"opschorting.indicatie\");",
															"    pm.expect(errors[0].code).to.be.equal(\"required\");",
															"    ",
															"    pm.expect(errors[1].name).to.be.equal(\"opschorting.reden\");",
															"    pm.expect(errors[1].code).to.be.equal(\"required\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "8373d66a-0c08-4e2a-90ae-3fbad96dc51a",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.opschorting = {\"wrong_field\": \"test\"};",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-011c) Zaak deels bijwerken met opschorting zonder indicatie en reden is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c3d8939f-9c16-49c6-a507-bfbd34abc9b6",
														"exec": [
															"pm.test.skip(\"Zaak deels bijwerken met opschorting zonder indicatie en reden geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var errors = pm.response.json()[\"invalidParams\"];",
															"    pm.expect(errors[0].name).to.be.equal(\"opschorting.indicatie\");",
															"    pm.expect(errors[0].code).to.be.equal(\"required\");",
															"    ",
															"    pm.expect(errors[1].name).to.be.equal(\"opschorting.reden\");",
															"    pm.expect(errors[1].code).to.be.equal(\"required\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "8373d66a-0c08-4e2a-90ae-3fbad96dc51a",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"opschorting\": {\n\t\t\"wrong_field\": \"test\"\n\t}\n}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-011d) Zaak aanmaken met verlenging zonder reden en duur is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "82250c04-55c0-410a-b319-04edc0658119",
														"exec": [
															"pm.test(\"Zaak aanmaken met verlenging zonder reden en duur geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var errors = pm.response.json()[\"invalidParams\"];",
															"    pm.expect(errors[0].name).to.be.equal(\"verlenging.reden\");",
															"    pm.expect(errors[0].code).to.be.equal(\"required\");",
															"    ",
															"    pm.expect(errors[1].name).to.be.equal(\"verlenging.duur\");",
															"    pm.expect(errors[1].code).to.be.equal(\"required\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-011e) Zaak bijwerken met verlenging zonder reden en duur is onmogelijk\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete Zaak\");",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "448fbdcc-e7fa-4e1f-ade4-d32ea27093a1",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.verlenging = {\"wrong_field\": \"test\"};",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-011e) Zaak bijwerken met verlenging zonder reden en duur is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "82250c04-55c0-410a-b319-04edc0658119",
														"exec": [
															"pm.test(\"Zaak bijwerken met verlenging zonder reden en duur geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var errors = pm.response.json()[\"invalidParams\"];",
															"    pm.expect(errors[0].name).to.be.equal(\"verlenging.reden\");",
															"    pm.expect(errors[0].code).to.be.equal(\"required\");",
															"    ",
															"    pm.expect(errors[1].name).to.be.equal(\"verlenging.duur\");",
															"    pm.expect(errors[1].code).to.be.equal(\"required\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "448fbdcc-e7fa-4e1f-ade4-d32ea27093a1",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.verlenging = {\"wrong_field\": \"test\"};",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-011f) Zaak deels bijwerken met verlenging zonder reden en duur is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "82250c04-55c0-410a-b319-04edc0658119",
														"exec": [
															"pm.test.skip(\"Zaak deels bijwerken met verlenging zonder reden en duur geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var errors = pm.response.json()[\"invalidParams\"];",
															"    pm.expect(errors[0].name).to.be.equal(\"verlenging.reden\");",
															"    pm.expect(errors[0].code).to.be.equal(\"required\");",
															"    ",
															"    pm.expect(errors[1].name).to.be.equal(\"verlenging.duur\");",
															"    pm.expect(errors[1].code).to.be.equal(\"required\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "448fbdcc-e7fa-4e1f-ade4-d32ea27093a1",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"verlenging\": {\n\t\t\"wrong_field\": \"test\"\n\t}\n}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-011g) Zaak aanmaken met opschorting null is mogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "6b902589-4913-4533-b2a0-c6baa9463680",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.opschorting = null;",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "5bf1eeaf-cc9e-4dee-88e8-c4f7c551a343",
														"exec": [
															"pm.test(\"Zaak aanmaken met opschorting null geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"});",
															"",
															"if(pm.response.code != 201) {",
															"    postman.setNextRequest(\"(zrc-011j) Zaak aanmaken met verlenging null is mogelijk\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-011h) Zaak bijwerken met opschorting null is mogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "6b902589-4913-4533-b2a0-c6baa9463680",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.opschorting = null;",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "5bf1eeaf-cc9e-4dee-88e8-c4f7c551a343",
														"exec": [
															"pm.test(\"Zaak bijwerken met opschorting null geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-011i) Zaak deels bijwerken met opschorting null is mogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "6b902589-4913-4533-b2a0-c6baa9463680",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "5bf1eeaf-cc9e-4dee-88e8-c4f7c551a343",
														"exec": [
															"pm.test(\"Zaak deels bijwerken met opschorting null geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-011j) Zaak aanmaken met verlenging null is mogelijk\"]);",
															"postman.setNextRequest(\"(COMMON) Delete Zaak\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"opschorting\": null\n}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-011j) Zaak aanmaken met verlenging null is mogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "6b902589-4913-4533-b2a0-c6baa9463680",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.verlenging = null;",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "5bf1eeaf-cc9e-4dee-88e8-c4f7c551a343",
														"exec": [
															"pm.test(\"Zaak aanmaken met verlenging null geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"});",
															"",
															"if(pm.response.code != 201) {",
															"    postman.setNextRequest(\"(zrc-012a) Valideren hoofdzaak op de Zaak-resource\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-011k) Zaak bijwerken met verlenging null is mogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "6b902589-4913-4533-b2a0-c6baa9463680",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.verlenging = null;",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "5bf1eeaf-cc9e-4dee-88e8-c4f7c551a343",
														"exec": [
															"pm.test(\"Zaak bijwerken met verlenging null geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-011l) Zaak deels bijwerken met verlenging null is mogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "6b902589-4913-4533-b2a0-c6baa9463680",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "5bf1eeaf-cc9e-4dee-88e8-c4f7c551a343",
														"exec": [
															"pm.test(\"Zaak deels bijwerken met verlenging null geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-012a) Valideren hoofdzaak op de Zaak-resource\"]);",
															"postman.setNextRequest(\"(COMMON) Delete Zaak\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"verlenging\": null\n}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "72f0a70d-74ad-4166-8ba5-a37b0f3d0687",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "e370fa77-b348-4d3d-baf3-fb4b6c9dc87e",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "zrc-012",
									"item": [
										{
											"name": "(zrc-012a) Valideren hoofdzaak op de Zaak-resource",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2ff41ef3-4e25-4c46-8bc6-a8475d587d62",
														"exec": [
															"pm.test(\"Zaak aanmaken met hoofdzaak url die niet wijst naar Zaak-resource geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var errors = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(errors.name).to.be.equal(\"hoofdzaak\");",
															"    pm.expect(errors.code).to.be.equal(\"no_match\");",
															"});",
															"",
															"if(pm.response.code != 201) {",
															"    postman.setNextRequest(\"Create Deelzaak\");",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "0c5d309a-3da4-4cdf-a069-929f3ac9683e",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.hoofdzaak = pm.environment.get(\"mock_url\") + \"/200\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Deelzaak",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "6c47b7ed-840c-4638-bb93-98b9eb7ccf75",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.hoofdzaak = pm.globals.get(\"zaak_url\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "d0a2b3b2-27dd-42c0-989f-e84cfe6fa757",
														"exec": [
															"pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"",
															"if(pm.response.code != 201) {",
															"    postman.setNextRequest(\"(zrc-012c) Valideren deelzaak mag geen deelzaak van zichzelf zijn\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-012b) Valideren opgegeven hoofdzaak is geen deelzaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2ff41ef3-4e25-4c46-8bc6-a8475d587d62",
														"exec": [
															"pm.test(\"Zaak aanmaken met hoofdzaak url die wijst naar een deelzaak geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var errors = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(errors.name).to.be.equal(\"hoofdzaak\");",
															"    pm.expect(errors.code).to.be.equal(\"deelzaak-als-hoofdzaak\");",
															"});",
															"",
															"",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-012c) Valideren deelzaak mag geen deelzaak van zichzelf zijn\"]);",
															"postman.setNextRequest(\"(COMMON) Delete Zaak\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "fdfe3406-a2cb-4f1d-b5c7-e2b7c8cbb623",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.hoofdzaak = pm.globals.get(\"created_zaak_url\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-012c) Valideren deelzaak mag geen deelzaak van zichzelf zijn",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "8ab5f43f-49f0-4cf8-bfb9-ea7d000888a0",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.hoofdzaak = pm.globals.get(\"zaak_url\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "68db0f5f-9890-425c-98f4-6dbc975540ec",
														"exec": [
															"pm.test(\"Zaak bijwerken met hoofdzaak url die wijst naar de zaak zelf geeft 400\", function(){",
															"    pm.response.to.have.status(400);",
															"   ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var errors = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(errors.name).to.be.equal(\"hoofdzaak\");",
															"    pm.expect(errors.code).to.be.equal(\"self-forbidden\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-012d) Valideren deelzaak mag geen deelzaak van zichzelf zijn",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "cf1ecb8d-7061-4189-aeef-23b05ed13b65",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "ad55fa05-0d56-4d6b-9fc5-9f0fe3ff8e83",
														"exec": [
															"pm.test(\"Zaak deels bijwerken met hoofdzaak url die wijst naar de zaak zelf geeft 400\", function(){",
															"    pm.response.to.have.status(400);",
															"   ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var errors = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(errors.name).to.be.equal(\"hoofdzaak\");",
															"    pm.expect(errors.code).to.be.equal(\"self-forbidden\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"hoofdzaak\": \"{{zaak_url}}\"\n}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-012e) Zaak aanmaken met valide hoofdzaak is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2ff41ef3-4e25-4c46-8bc6-a8475d587d62",
														"exec": [
															"pm.test(\"Zaak aanmaken met valide hoofdzaak geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"});",
															"",
															"if(pm.response.code != 201) {",
															"    postman.setNextRequest(\"(zrc-013a) Valideer op geen betalingswaarde en wel laatste betaaldatum\");",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "0c5d309a-3da4-4cdf-a069-929f3ac9683e",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.hoofdzaak = pm.globals.get(\"zaak_url\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-012f) Zaak bijwerken met valide hoofdzaak is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2ff41ef3-4e25-4c46-8bc6-a8475d587d62",
														"exec": [
															"pm.test(\"Zaak bijwerken met valide hoofdzaak geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "0c5d309a-3da4-4cdf-a069-929f3ac9683e",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.hoofdzaak = pm.globals.get(\"zaak_url\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-012g) Zaak deels bijwerken met valide hoofdzaak is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2ff41ef3-4e25-4c46-8bc6-a8475d587d62",
														"exec": [
															"pm.test(\"Zaak deels bijwerken met valide hoofdzaak geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-013a) Valideer op geen betalingswaarde en wel laatste betaaldatum\"]);",
															"postman.setNextRequest(\"(COMMON) Delete Zaak\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "0c5d309a-3da4-4cdf-a069-929f3ac9683e",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.hoofdzaak = pm.globals.get(\"zaak_url\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "zrc-013",
									"item": [
										{
											"name": "(zrc-013a) Valideer op geen betalingswaarde en wel laatste betaaldatum",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f945f6a5-77ac-48dd-b9ba-a9b0a673471f",
														"exec": [
															"pm.test(\"Zaak aanmaken met betalingsindicatie nvt en laatsteBetaaldatum niet null geeft 400\", function(){",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"laatsteBetaaldatum\");",
															"    pm.expect(error.code).to.be.equal(\"betaling-nvt\");",
															"});",
															"",
															"// If the test failed and the Zaak was created, delete it",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-013b) Zaak bijwerken betalingsindicatie naar nvt moet laatsteBetaalDatum op null zetten\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete Zaak\");",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "1f3b91e3-2ac0-4458-a935-c0fb88e7a871",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.betalingsindicatie = \"nvt\";",
															"body.laatsteBetaaldatum = \"2019-03-29T12:00:00\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{token}}"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-013b) Zaak bijwerken betalingsindicatie naar nvt moet laatsteBetaalDatum op null zetten",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f945f6a5-77ac-48dd-b9ba-a9b0a673471f",
														"exec": [
															"pm.test(\"Zaak bijwerken met betalingsindicatie nvt verandert laatsteBetaalDatum naar null\", function(){",
															"    var jsonBody = pm.response.json();",
															"    pm.expect(jsonBody.betalingsindicatie).to.be.equal(\"nvt\");",
															"    pm.expect(jsonBody.laatsteBetaaldatum).to.be.equal(null);",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "1f3b91e3-2ac0-4458-a935-c0fb88e7a871",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.betalingsindicatie = \"nvt\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{token}}"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-013c) Zaak deels bijwerken betalingsindicatie naar nvt moet laatsteBetaalDatum op null zetten",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f945f6a5-77ac-48dd-b9ba-a9b0a673471f",
														"exec": [
															"pm.test(\"Zaak deels bijwerken met betalingsindicatie nvt verandert laatsteBetaalDatum naar null\", function(){",
															"    var jsonBody = pm.response.json();",
															"    pm.expect(jsonBody.betalingsindicatie).to.be.equal(\"nvt\");",
															"    pm.expect(jsonBody.laatsteBetaaldatum).to.be.equal(null);",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "1f3b91e3-2ac0-4458-a935-c0fb88e7a871",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{token}}"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"betalingsindicatie\": \"nvt\"\n}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "ff8f4b99-ac17-4e7e-90e8-d81b79303808",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "96f99c67-e2fc-4eda-aad4-75da4dbed8c2",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "zrc-014",
									"item": [
										{
											"name": "(zrc-014a) Zaak productenOfDiensten validatie met Zaaktype productenOfDiensten",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "72e0fbd3-a35c-4c06-a0aa-fc9782016f71",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.productenOfDiensten = [pm.globals.get(\"zaak_url\")];",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "f6878a9b-f297-4932-95b8-e31a86d7848b",
														"exec": [
															"pm.test(\"Zaak aanmaken met productenOfDiensten niet in Zaaktype gedefinieerd geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"productenOfDiensten\");",
															"    pm.expect(error.code).to.be.equal(\"invalid-products-services\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-014b) Zaak productenOfDiensten validatie met Zaaktype productenOfDiensten\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete Zaak\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-014b) Zaak productenOfDiensten validatie met Zaaktype productenOfDiensten",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "72e0fbd3-a35c-4c06-a0aa-fc9782016f71",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.productenOfDiensten = [pm.globals.get(\"zaak_url\")];",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "f6878a9b-f297-4932-95b8-e31a86d7848b",
														"exec": [
															"pm.test(\"Zaak bijwerken met productenOfDiensten niet in Zaaktype gedefinieerd geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"productenOfDiensten\");",
															"    pm.expect(error.code).to.be.equal(\"invalid-products-services\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-014c) Zaak productenOfDiensten validatie met Zaaktype productenOfDiensten",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "72e0fbd3-a35c-4c06-a0aa-fc9782016f71",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.productenOfDiensten = [pm.globals.get(\"zaak_url\")];",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "f6878a9b-f297-4932-95b8-e31a86d7848b",
														"exec": [
															"pm.test(\"Zaak deels bijwerken met productenOfDiensten niet in Zaaktype gedefinieerd geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"productenOfDiensten\");",
															"    pm.expect(error.code).to.be.equal(\"invalid-products-services\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"productenOfDiensten\": [\n\t\t\"{{zaak_url}}\"\t\n\t]\n}"
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-014d) Zaak aanmaken met valide productenOfDiensten is mogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "72e0fbd3-a35c-4c06-a0aa-fc9782016f71",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.productenOfDiensten = [pm.globals.get(\"zaaktype_productenOfDiensten\")[0]];",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "f6878a9b-f297-4932-95b8-e31a86d7848b",
														"exec": [
															"pm.test(\"Zaak aanmaken met valide productenOfDiensten geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"});",
															"",
															"if(pm.response.code != 201) {",
															"    postman.setNextRequest(\"Create Hoofdzaak\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-014e) Zaak bijwerken met valide productenOfDiensten is mogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "72e0fbd3-a35c-4c06-a0aa-fc9782016f71",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.productenOfDiensten = [pm.globals.get(\"zaaktype_productenOfDiensten\")[0]];",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "f6878a9b-f297-4932-95b8-e31a86d7848b",
														"exec": [
															"pm.test(\"Zaak bijwerken met valide productenOfDiensten geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-014f) Zaak deels bijwerken met valide productenOfDiensten is mogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "72e0fbd3-a35c-4c06-a0aa-fc9782016f71",
														"exec": [
															"pm.globals.set(\"request_body\", JSON.stringify({",
															"    \"productenOfDiensten\": [",
															"        pm.globals.get(\"zaaktype_productenOfDiensten\")[0]",
															"    ]",
															"}));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "f6878a9b-f297-4932-95b8-e31a86d7848b",
														"exec": [
															"pm.test(\"Zaak deels bijwerken met valide productenOfDiensten geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create Hoofdzaak\"]);",
															"postman.setNextRequest(\"(COMMON) Delete Zaak\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "329b00c3-7d84-4831-8896-bea87e9fa7c5",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "75a20abb-2a01-4d3e-a784-3c234b96caff",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "zrc-015 (WIP) (NI)",
									"item": [
										{
											"name": "Create Hoofdzaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4c8f1f41-e776-423f-9123-4939889bec5e",
														"exec": [
															"pm.globals.set(\"hoofdzaak_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{zaak_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add Resultaat to Hoofdzaak",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "7f3ed8a2-7bc9-4c77-85b1-561482065971",
														"exec": [
															"pm.globals.set(\"resultaattype\", pm.globals.get(\"zaaktype_resultaattypen\")[0]);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "1c33254a-fe4a-4192-9108-4b6925265a80",
														"exec": [
															"pm.globals.set(\"hoofdzaak_resultaat_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{hoofdzaak_url}}\",\n\t\"resultaatType\": \"{{resultaattype}}\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/resultaten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"resultaten"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add Eindstatus to Hoofdzaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7226fe56-bdcc-42d9-ad16-07852570b778",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "820be47c-e617-4e5e-aa70-5e4ab1440b54",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{hoofdzaak_url}}\",\n\t\"statusType\": \"{{eindstatustype}}\",\n\t\"datumStatusGezet\": \"2018-04-18T13:37:00\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/statussen",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"statussen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Retrieve Hoofdzaak einddatum",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4f6ace2e-d1d5-4510-b352-7aae04427240",
														"exec": [
															"pm.globals.set(\"hoofdzaak_einddatum\", pm.response.json().einddatum);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{hoofdzaak_url}}",
													"host": [
														"{{hoofdzaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Zaak without archiefnominatie",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "7f3ed8a2-7bc9-4c77-85b1-561482065971",
														"exec": [
															"if (!pm.globals.get(\"zaaktype_index\")) {",
															"    pm.globals.set(\"zaaktype_index\", 0);",
															"}",
															"",
															"pm.globals.set(\"current_zaaktype\", pm.globals.get(\"archiving_zaaktypen\")[pm.globals.get(\"zaaktype_index\")]);",
															"",
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"delete body.archiefnominatie;",
															"body.hoofdzaak = pm.globals.get(\"hoofdzaak_url\");",
															"body.zaaktype = pm.globals.get(\"current_zaaktype\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));",
															"",
															"// TODO deze zaak moet voor afleidingswijze: ",
															"// zaakobject: minstens 1 zaakinformatieobject van Resultaattype.brondatumArchiefprocedure.objecttype,",
															"// gerelateerde_zaak: ?",
															"// ingangsdatum_besluit & vervaldatum_besluit: minstens 1 gerelateerd besluit"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "46ada267-ffcf-477a-a3d6-02addbf603a2",
														"exec": [
															"pm.globals.set(\"zaak_zonder_archiefnominatie_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add Besluit to Zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "23bc2897-511c-416d-b48d-c8aa46adba28",
														"exec": [
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"besluit_url\", pm.response.json().url);",
															"    pm.globals.set(\"besluit_ingangsdatum\", pm.response.json().ingangsdatum);   ",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"verantwoordelijkeOrganisatie\": \"{{zaak_bronorganisatie}}\",\n\t\"besluittype\": \"{{besluittype_url}}\",\n\t\"zaak\": \"{{zaak_zonder_archiefnominatie_url}}\",\n\t\"datum\": \"2019-04-25\",\n\t\"ingangsdatum\": \"2019-04-26\",\n\t\"vervaldatum\": \"2019-04-28\"\n}"
												},
												"url": {
													"raw": "{{brc_url}}/besluiten",
													"host": [
														"{{brc_url}}"
													],
													"path": [
														"besluiten"
													]
												}
											},
											"response": []
										},
										{
											"name": "Retrieve Resultaattype for current Zaaktype",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "efc7477c-72f1-4f81-9c97-8be750824a6c",
														"exec": [
															"pm.globals.set(\"current_resultaattype\", pm.response.json().resultaattypen[0]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{current_zaaktype}}",
													"host": [
														"{{current_zaaktype}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add Resultaat to Zaak",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "7f3ed8a2-7bc9-4c77-85b1-561482065971",
														"exec": [
															"// if (!pm.globals.get(\"resultaattype_index\")) {",
															"//     pm.globals.set(\"resultaattype_index\", 0);",
															"// }",
															"",
															"// pm.globals.set(\"current_resultaattype\", pm.globals.get(\"zaaktype_resultaattypen\")[pm.globals.get(\"resultaattype_index\")])"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "1c33254a-fe4a-4192-9108-4b6925265a80",
														"exec": [
															"pm.globals.set(\"zaak_resultaat_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{zaak_zonder_archiefnominatie_url}}\",\n\t\"resultaatType\": \"{{current_resultaattype}}\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/resultaten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"resultaten"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add Eindstatus to Zaak without archiefnominatie",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7226fe56-bdcc-42d9-ad16-07852570b778",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "820be47c-e617-4e5e-aa70-5e4ab1440b54",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{zaak_zonder_archiefnominatie_url}}\",\n\t\"statusType\": \"{{eindstatustype}}\",\n\t\"datumStatusGezet\": \"2018-04-26T13:37:00\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/statussen",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"statussen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Retrieve Resultaattype information",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f0a21fac-c424-42bf-86d4-4c905170c493",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.globals.set(\"resultaattype_archiefnominatie\", jsonData.archiefnominatie);",
															"pm.globals.set(\"resultaattype_archiefactietermijn\", jsonData.archiefactietermijn);",
															"pm.globals.set(\"resultaattype_brondatumArchiefprocedure\", jsonData.brondatumArchiefprocedure);",
															"",
															"switch(pm.globals.get(\"resultaattype_brondatumArchiefprocedure\").afleidingswijze) {",
															"    case \"afgehandeld\":",
															"        postman.setNextRequest(\"(zrc-015a) Afleidingswijze afgehandeld\");",
															"        break;",
															"    case \"hoofdzaak\":",
															"        postman.setNextRequest(\"(zrc-015b) Afleidingswijze hoofdzaak\");",
															"        break;",
															"    case \"eigenschap\":",
															"        postman.setNextRequest(\"(zrc-015c) Afleidingswijze eigenschap\");",
															"        break;",
															"    case \"ander_datumkenmerk\":",
															"        postman.setNextRequest(\"(zrc-015g) Afleidingswijze ander_datumkenmerk\");",
															"        break;",
															"    case \"zaakobject\":",
															"        break;",
															"    case \"termijn\":",
															"        postman.setNextRequest(\"(zrc-015f) Afleidingswijze termijn\");",
															"        break;",
															"    case \"gerelateerde_zaak\":",
															"        postman.setNextRequest(\"(zrc-015i) Afleidingswijze gerelateerde_zaak\");",
															"        break;",
															"    case \"ingangsdatum_besluit\":",
															"        postman.setNextRequest(\"Retrieve max Besluit.ingangsdatum\");",
															"        break;",
															"    case \"vervaldatum_besluit\":",
															"        postman.setNextRequest(\"Retrieve max Besluit.vervaldatum\");",
															"        break;",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{current_resultaattype}}",
													"host": [
														"{{current_resultaattype}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Retrieve max Besluit.ingangsdatum",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "efc69da9-c4b5-4461-a3ca-9757bb2dbd84",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"var ingangsdata = [];",
															"for(i = 0; i < jsonData.length; i++) {",
															"    ingangsdata.add(jsonData[i].ingangsdatum);",
															"}",
															"",
															"pm.globals.set(\"max_ingangsdatum\", ingangsdata.reduce(function(a, b) { return a > b ? a : b; }));",
															"",
															"postman.setNextRequest(\"(zrc-015d) Afleidingswijze ingangsdatum_besluit\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{brc_url}}/besluiten?zaak={{zaak_zonder_archiefnominatie_url}}",
													"host": [
														"{{brc_url}}"
													],
													"path": [
														"besluiten"
													],
													"query": [
														{
															"key": "zaak",
															"value": "{{zaak_zonder_archiefnominatie_url}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Retrieve max Besluit.vervaldatum",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "efc69da9-c4b5-4461-a3ca-9757bb2dbd84",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"var vervaldata = [];",
															"for(i = 0; i < jsonData.length; i++) {",
															"    vervaldata.add(jsonData[i].vervaldatum);",
															"}",
															"",
															"pm.globals.set(\"max_vervaldatum\", vervaldata.reduce(function(a, b) { return a > b ? a : b; }));",
															"",
															"postman.setNextRequest(\"(zrc-015e) Afleidingswijze vervaldatum_besluit\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{brc_url}}/besluiten?zaak={{zaak_zonder_archiefnominatie_url}}",
													"host": [
														"{{brc_url}}"
													],
													"path": [
														"besluiten"
													],
													"query": [
														{
															"key": "zaak",
															"value": "{{zaak_zonder_archiefnominatie_url}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Retrieve related Zaakobjecten",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "34d829d0-0625-4a52-82d7-10753a5fb621",
														"exec": [
															"// TODO haal maximale waarde op van veld met naam Resultaat.Resultaattype.brondatumArchiefprocedure.datumkenmerk"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{zrc_url}}/zaakobjecten?zaak={{zaak_zonder_archiefnominatie_url}}",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaakobjecten"
													],
													"query": [
														{
															"key": "zaak",
															"value": "{{zaak_zonder_archiefnominatie_url}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-015a) Afleidingswijze afgehandeld",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "211fc0ce-b5c8-486d-90cc-faf4029d3353",
														"exec": [
															"var moment = require('moment');",
															"",
															"pm.test(\"Resultaat toevoegen aan Zaak zonder archiefnominatie betekent dat archiefnominatie afgeleid wordt uit Resultaattype\", function() {",
															"    pm.response.to.have.status(200);",
															"    pm.expect(pm.response.json().archiefnominatie).to.be.equal(pm.globals.get(\"resultaattype_archiefnominatie\"));",
															"});",
															"",
															"pm.test(\"Resultaat met afleidingswijze afgehandeld toevoegen aan Zaak zet correcte Zaak.archiefdatum\", function() {",
															"    var jsonData = pm.response.json();",
															"    ",
															"    if (pm.globals.get(\"resultaattype_archiefactietermijn\")) {",
															"        const brondatum = moment.utc(jsonData.einddatum);",
															"        const archiefactietermijn = moment.duration(pm.globals.get(\"resultaattype_archiefactietermijn\"), 'years');",
															"        var calculated_archiefactiedatum = brondatum.add(archiefactietermijn);",
															"        ",
															"        pm.expect(jsonData.archiefactiedatum).to.be.equal(calculated_archiefactiedatum.format(\"YYYY-MM-DD\"));   ",
															"    }",
															"});",
															"",
															"postman.setNextRequest(\"Delete Resultaat from Zaak\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{zaak_zonder_archiefnominatie_url}}",
													"host": [
														"{{zaak_zonder_archiefnominatie_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-015b) Afleidingswijze hoofdzaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "211fc0ce-b5c8-486d-90cc-faf4029d3353",
														"exec": [
															"var moment = require('moment');",
															"",
															"pm.test(\"Resultaat toevoegen aan Zaak zonder archiefnominatie betekent dat archiefnominatie afgeleid wordt uit Resultaattype\", function() {",
															"    pm.response.to.have.status(200);",
															"    pm.expect(pm.response.json().archiefnominatie).to.be.equal(pm.globals.get(\"resultaattype_archiefnominatie\"));",
															"});",
															"",
															"pm.test(\"Resultaat met afleidingswijze hoofdzaak toevoegen aan Zaak zet correcte Zaak.archiefdatum\", function() {",
															"    var jsonData = pm.response.json();",
															"    ",
															"    if (pm.globals.get(\"resultaattype_archiefactietermijn\")) {",
															"        const brondatum = moment.utc(pm.globals.get(\"hoofdzaak_einddatum\"));",
															"        const archiefactietermijn = moment.duration(pm.globals.get(\"resultaattype_archiefactietermijn\"), 'years');",
															"        var calculated_archiefactiedatum = brondatum.add(archiefactietermijn);",
															"        ",
															"        pm.expect(jsonData.archiefactiedatum).to.be.equal(calculated_archiefactiedatum.format(\"YYYY-MM-DD\"));   ",
															"    }",
															"});",
															"",
															"postman.setNextRequest(\"Delete Resultaat from Zaak\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "869bc7bd-9394-4b5c-8476-217a4314851f",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{zaak_zonder_archiefnominatie_url}}",
													"host": [
														"{{zaak_zonder_archiefnominatie_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-015c) Afleidingswijze eigenschap",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "211fc0ce-b5c8-486d-90cc-faf4029d3353",
														"exec": [
															"var moment = require('moment');",
															"",
															"pm.test(\"Resultaat toevoegen aan Zaak zonder archiefnominatie betekent dat archiefnominatie afgeleid wordt uit Resultaattype\", function() {",
															"    pm.response.to.have.status(200);",
															"    pm.expect(pm.response.json().archiefnominatie).to.be.equal(pm.globals.get(\"resultaattype_archiefnominatie\"));",
															"});",
															"",
															"pm.test(\"Resultaat met afleidingswijze eigenschap toevoegen aan Zaak zet correcte Zaak.archiefdatum\", function() {",
															"    var jsonData = pm.response.json();",
															"    ",
															"    if (pm.globals.get(\"resultaattype_archiefactietermijn\")) {",
															"        const eigenschap = pm.globals.get(\"resultaattype_brondatumArchiefprocedure\").datumkenmerk;",
															"        ",
															"        const brondatum = moment.utc(jsonData.eigenschap);",
															"        const archiefactietermijn = moment.duration(pm.globals.get(\"resultaattype_archiefactietermijn\"), 'years');",
															"        var calculated_archiefactiedatum = brondatum.add(archiefactietermijn);",
															"        ",
															"        pm.expect(jsonData.archiefactiedatum).to.be.equal(calculated_archiefactiedatum.format(\"YYYY-MM-DD\"));   ",
															"    }",
															"});",
															"",
															"postman.setNextRequest(\"Delete Resultaat from Zaak\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "869bc7bd-9394-4b5c-8476-217a4314851f",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{zaak_zonder_archiefnominatie_url}}",
													"host": [
														"{{zaak_zonder_archiefnominatie_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-015d) Afleidingswijze ingangsdatum_besluit",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "211fc0ce-b5c8-486d-90cc-faf4029d3353",
														"exec": [
															"var moment = require('moment');",
															"",
															"pm.test(\"Resultaat toevoegen aan Zaak zonder archiefnominatie betekent dat archiefnominatie afgeleid wordt uit Resultaattype\", function() {",
															"    pm.response.to.have.status(200);",
															"    pm.expect(pm.response.json().archiefnominatie).to.be.equal(pm.globals.get(\"resultaattype_archiefnominatie\"));",
															"});",
															"",
															"pm.test(\"Resultaat met afleidingswijze ingangsdatum_besluit toevoegen aan Zaak zet correcte Zaak.archiefdatum\", function() {",
															"    var jsonData = pm.response.json();",
															"    ",
															"    if (pm.globals.get(\"resultaattype_archiefactietermijn\")) {",
															"        const brondatum = moment.utc(pm.globals.get(\"max_ingangsdatum\"));",
															"        const archiefactietermijn = moment.duration(pm.globals.get(\"resultaattype_archiefactietermijn\"), 'years');",
															"        var calculated_archiefactiedatum = brondatum.add(archiefactietermijn);",
															"        ",
															"        pm.expect(jsonData.archiefactiedatum).to.be.equal(calculated_archiefactiedatum.format(\"YYYY-MM-DD\"));   ",
															"    }",
															"});",
															"",
															"postman.setNextRequest(\"Delete Resultaat from Zaak\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "869bc7bd-9394-4b5c-8476-217a4314851f",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{zaak_zonder_archiefnominatie_url}}",
													"host": [
														"{{zaak_zonder_archiefnominatie_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-015e) Afleidingswijze vervaldatum_besluit",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "211fc0ce-b5c8-486d-90cc-faf4029d3353",
														"exec": [
															"var moment = require('moment');",
															"",
															"pm.test(\"Resultaat toevoegen aan Zaak zonder archiefnominatie betekent dat archiefnominatie afgeleid wordt uit Resultaattype\", function() {",
															"    pm.response.to.have.status(200);",
															"    pm.expect(pm.response.json().archiefnominatie).to.be.equal(pm.globals.get(\"resultaattype_archiefnominatie\"));",
															"});",
															"",
															"pm.test(\"Resultaat met afleidingswijze vervaldatum_besluit toevoegen aan Zaak zet correcte Zaak.archiefdatum\", function() {",
															"    var jsonData = pm.response.json();",
															"    ",
															"    if (pm.globals.get(\"resultaattype_archiefactietermijn\")) {",
															"        const brondatum = moment.utc(pm.globals.get(\"max_vervaldatum\"));",
															"        const archiefactietermijn = moment.duration(pm.globals.get(\"resultaattype_archiefactietermijn\"), 'years');",
															"        var calculated_archiefactiedatum = brondatum.add(archiefactietermijn);",
															"        ",
															"        pm.expect(jsonData.archiefactiedatum).to.be.equal(calculated_archiefactiedatum.format(\"YYYY-MM-DD\"));   ",
															"    }",
															"});",
															"",
															"postman.setNextRequest(\"Delete Resultaat from Zaak\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "869bc7bd-9394-4b5c-8476-217a4314851f",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{zaak_zonder_archiefnominatie_url}}",
													"host": [
														"{{zaak_zonder_archiefnominatie_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-015f) Afleidingswijze termijn",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "211fc0ce-b5c8-486d-90cc-faf4029d3353",
														"exec": [
															"var moment = require('moment');",
															"",
															"pm.test(\"Resultaat toevoegen aan Zaak zonder archiefnominatie betekent dat archiefnominatie afgeleid wordt uit Resultaattype\", function() {",
															"    pm.response.to.have.status(200);",
															"    pm.expect(pm.response.json().archiefnominatie).to.be.equal(pm.globals.get(\"resultaattype_archiefnominatie\"));",
															"});",
															"",
															"pm.test(\"Resultaat met afleidingswijze termijn toevoegen aan Zaak zet correcte Zaak.archiefdatum\", function() {",
															"    var jsonData = pm.response.json();",
															"    ",
															"    if (pm.globals.get(\"resultaattype_archiefactietermijn\")) {",
															"        var procestermijn = moment.duration(pm.globals.get(\"resultaattype_brondatumArchiefprocedure\").procestermijn);",
															"        const brondatum = moment.utc(jsonData.einddatum).add(procestermijn);",
															"        ",
															"        const archiefactietermijn = moment.duration(pm.globals.get(\"resultaattype_archiefactietermijn\"), 'years');",
															"        var calculated_archiefactiedatum = brondatum.add(archiefactietermijn);",
															"        ",
															"        pm.expect(jsonData.archiefactiedatum).to.be.equal(calculated_archiefactiedatum.format(\"YYYY-MM-DD\"));   ",
															"    }",
															"});",
															"",
															"postman.setNextRequest(\"Delete Resultaat from Zaak\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{zaak_zonder_archiefnominatie_url}}",
													"host": [
														"{{zaak_zonder_archiefnominatie_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-015g) Afleidingswijze ander_datumkenmerk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "211fc0ce-b5c8-486d-90cc-faf4029d3353",
														"exec": [
															"var moment = require('moment');",
															"",
															"pm.test(\"Resultaat toevoegen aan Zaak zonder archiefnominatie betekent dat archiefnominatie afgeleid wordt uit Resultaattype\", function() {",
															"    pm.response.to.have.status(200);",
															"    pm.expect(pm.response.json().archiefnominatie).to.be.equal(pm.globals.get(\"resultaattype_archiefnominatie\"));",
															"});",
															"",
															"pm.test.skip(\"Resultaat met afleidingswijze ander_datumkenmerk toevoegen aan Zaak zet correcte Zaak.archiefdatum\", function() {",
															"    var jsonData = pm.response.json();",
															"    ",
															"    if (pm.globals.get(\"resultaattype_archiefactietermijn\")) {",
															"        // const brondatum = moment.utc(jsonData.einddatum).add(procestermijn);",
															"        // TODO",
															"        const brondatum = null;",
															"        ",
															"        const archiefactietermijn = moment.duration(pm.globals.get(\"resultaattype_archiefactietermijn\"), 'years');",
															"        var calculated_archiefactiedatum = brondatum.add(archiefactietermijn);",
															"        ",
															"        pm.expect(jsonData.archiefactiedatum).to.be.equal(calculated_archiefactiedatum.format(\"YYYY-MM-DD\"));   ",
															"    }",
															"});",
															"",
															"postman.setNextRequest(\"Delete Resultaat from Zaak\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{zaak_zonder_archiefnominatie_url}}",
													"host": [
														"{{zaak_zonder_archiefnominatie_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-015h) Afleidingswijze zaakobject",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "211fc0ce-b5c8-486d-90cc-faf4029d3353",
														"exec": [
															"var moment = require('moment');",
															"",
															"pm.test(\"Resultaat toevoegen aan Zaak zonder archiefnominatie betekent dat archiefnominatie afgeleid wordt uit Resultaattype\", function() {",
															"    pm.response.to.have.status(200);",
															"    pm.expect(pm.response.json().archiefnominatie).to.be.equal(pm.globals.get(\"resultaattype_archiefnominatie\"));",
															"});",
															"",
															"pm.test(\"Resultaat met afleidingswijze zaakobject toevoegen aan Zaak zet correcte Zaak.archiefdatum\", function() {",
															"    var jsonData = pm.response.json();",
															"    ",
															"    if (pm.globals.get(\"resultaattype_archiefactietermijn\")) {",
															"        const brondatum = moment.utc(jsonData.einddatum);",
															"        const archiefactietermijn = moment.duration(pm.globals.get(\"resultaattype_archiefactietermijn\"), 'years');",
															"        var calculated_archiefactiedatum = brondatum.add(archiefactietermijn);",
															"        ",
															"        pm.expect(jsonData.archiefactiedatum).to.be.equal(calculated_archiefactiedatum.format(\"YYYY-MM-DD\"));   ",
															"    }",
															"});",
															"",
															"postman.setNextRequest(\"Delete Resultaat from Zaak\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{zaak_zonder_archiefnominatie_url}}",
													"host": [
														"{{zaak_zonder_archiefnominatie_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-015i) Afleidingswijze gerelateerde_zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "211fc0ce-b5c8-486d-90cc-faf4029d3353",
														"exec": [
															"var moment = require('moment');",
															"",
															"pm.test(\"Resultaat toevoegen aan Zaak zonder archiefnominatie betekent dat archiefnominatie afgeleid wordt uit Resultaattype\", function() {",
															"    pm.response.to.have.status(200);",
															"    pm.expect(pm.response.json().archiefnominatie).to.be.equal(pm.globals.get(\"resultaattype_archiefnominatie\"));",
															"});",
															"",
															"pm.test(\"Resultaat met afleidingswijze gerelateerde_zaak toevoegen aan Zaak zet correcte Zaak.archiefdatum\", function() {",
															"    var jsonData = pm.response.json();",
															"    ",
															"    if (pm.globals.get(\"resultaattype_archiefactietermijn\")) {",
															"        const brondatum = moment.utc(jsonData.einddatum);",
															"        const archiefactietermijn = moment.duration(pm.globals.get(\"resultaattype_archiefactietermijn\"), 'years');",
															"        var calculated_archiefactiedatum = brondatum.add(archiefactietermijn);",
															"        ",
															"        pm.expect(jsonData.archiefactiedatum).to.be.equal(calculated_archiefactiedatum.format(\"YYYY-MM-DD\"));   ",
															"    }",
															"});",
															"",
															"postman.setNextRequest(\"Delete Resultaat from Zaak\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{zaak_zonder_archiefnominatie_url}}",
													"host": [
														"{{zaak_zonder_archiefnominatie_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Resultaat from Zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7197b242-cd4a-44d6-b322-136d37599b2f",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{zaak_resultaat_url}}",
													"host": [
														"{{zaak_resultaat_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Besluit",
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{besluit_url}}",
													"host": [
														"{{besluit_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Zaak without archiefnominatie",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9c66db28-3c20-4603-9de7-b70c45fe8572",
														"exec": [
															"var index = pm.globals.get(\"zaaktype_index\");",
															"",
															"pm.globals.unset(\"zaak_zonder_archiefnominatie_url\");",
															"if (index == pm.globals.get(\"archiving_zaaktypen\").length - 1) {",
															"    postman.setNextRequest(\"Delete Hoofdzaak\");",
															"} else {",
															"    // Loop",
															"    pm.globals.set(\"zaaktype_index\", index + 1);",
															"    postman.setNextRequest(\"Create Zaak without archiefnominatie\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{zaak_zonder_archiefnominatie_url}}",
													"host": [
														"{{zaak_zonder_archiefnominatie_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Resultaat from Hoofdzaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7197b242-cd4a-44d6-b322-136d37599b2f",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{hoofdzaak_resultaat_url}}",
													"host": [
														"{{hoofdzaak_resultaat_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Hoofdzaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b696684c-6ace-4c34-9e6a-e323a185ef82",
														"exec": [
															"pm.globals.unset(\"hoofdzaak_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{hoofdzaak_url}}",
													"host": [
														"{{hoofdzaak_url}}"
													]
												}
											},
											"response": []
										}
									],
									"description": "**TODO:**\nde zaak die hier gemaakt wordt moet voor afleidingswijze: \n- hoofdzaak: een hoofdzaak met eindstatus hebben\n- zaakobject: minstens 1 zaakinformatieobject van Resultaattype.brondatumArchiefprocedure.objecttype,\n- gerelateerde_zaak: ???\n- ingangsdatum\\_besluit & vervaldatum\\_besluit: minstens 1 gerelateerd besluit\n\nzou moeten werken voor afgehandeld",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "26cd7d53-45b0-4997-b654-05337f1d4eec",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "8f5b02f0-b508-461c-af34-be787256d787",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "zrc-016",
									"item": [
										{
											"name": "(zrc-016a) Zaak aanmaken geeft voor archiefstatus standaardwaarde nog_te_archiveren",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "267bd317-64b5-4159-b146-c4666750db37",
														"exec": [
															"pm.test(\"Zaak aanmaken geeft voor archiefstatus standaardwaarde nog_te_archiveren\", function(){",
															"    pm.expect(pm.response.json().archiefstatus).to.be.equal(\"nog_te_archiveren\");",
															"});",
															"",
															"// If the Zaak was created, delete it",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create Zaak to be archived\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete Zaak\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{zaak_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Zaak to be archived",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "7f3ed8a2-7bc9-4c77-85b1-561482065971",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "46ada267-ffcf-477a-a3d6-02addbf603a2",
														"exec": [
															"pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(zrc-016b) Zaak bijwerken archiefstatus niet nog_te_archiveren is onmogelijk als informatieobjecten nog niet gearchiveerd\"]);",
															"    postman.setNextRequest(\"(COMMON) Create ZaakInformatieObject\");   ",
															"} else {",
															"    postman.setNextRequest(\"Create Zaak to delete\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{zaak_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-016b) Zaak bijwerken archiefstatus niet nog_te_archiveren is onmogelijk als informatieobjecten nog niet gearchiveerd",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fbbe81ee-3688-4065-a2a5-793e9a2fff42",
														"exec": [
															"pm.test(\"Zaak bijwerken archiefstatus zetten op niet nog_te_archiveren terwijl gerelateerde objecten geen archiefstatus gearchiveerd hebben geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"documents-not-archived\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "81b03d36-f405-4e6a-9948-de361d6e1b28",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"pm.globals.set(\"archiefstatussen\", [\"gearchiveerd\", \"gearchiveerd_procestermijn_onbekend\", \"overgedragen\"]);",
															"",
															"if (!pm.globals.get(\"archiefstatus_index\")) {",
															"    pm.globals.set(\"archiefstatus_index\", 0);",
															"} ",
															"",
															"pm.globals.set(\"current_archiefstatus\", pm.globals.get(\"archiefstatussen\")[pm.globals.get(\"archiefstatus_index\")])",
															"",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.archiefstatus = pm.globals.get(\"current_archiefstatus\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-016c) Zaak deels bijwerken archiefstatus niet nog_te_archiveren is onmogelijk als informatieobjecten nog niet gearchiveerd",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fbbe81ee-3688-4065-a2a5-793e9a2fff42",
														"exec": [
															"pm.test(\"Zaak deels bijwerken archiefstatus zetten op niet nog_te_archiveren terwijl gerelateerde objecten geen archiefstatus gearchiveerd hebben geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"documents-not-archived\");",
															"});",
															"",
															"postman.setNextRequest(\"(COMMON) Lock EnkelvoudigInformatieObject\");",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Change Informatieobject status to gearchiveerd\"]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"archiefstatus\": \"{{current_archiefstatus}}\"\n}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Change Informatieobject status to gearchiveerd",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"status\": \"gearchiveerd\",\n\t\"lock\": \"{{informatieobject_lock_id}}\"\n}"
												},
												"url": {
													"raw": "{{informatieobject_url}}",
													"host": [
														"{{informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-016d) Zaak bijwerken archiefstatus niet nog_te_archiveren is onmogelijk als archiefnominatie niet gezet",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fbbe81ee-3688-4065-a2a5-793e9a2fff42",
														"exec": [
															"pm.test(\"Zaak bijwerken archiefstatus zetten op niet nog_te_archiveren zonder waarde voor archiefnominatie geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"archiefnominatie\");",
															"    pm.expect(error.code).to.be.equal(\"archiefnominatie-not-set\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "81b03d36-f405-4e6a-9948-de361d6e1b28",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.archiefstatus = pm.globals.get(\"current_archiefstatus\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-016e) Zaak deels bijwerken archiefstatus niet nog_te_archiveren is onmogelijk als archiefnominatie niet gezet",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fbbe81ee-3688-4065-a2a5-793e9a2fff42",
														"exec": [
															"pm.test(\"Zaak bijwerken archiefstatus zetten op niet nog_te_archiveren zonder waarde voor archiefnominatie geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"archiefnominatie\");",
															"    pm.expect(error.code).to.be.equal(\"archiefnominatie-not-set\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "81b03d36-f405-4e6a-9948-de361d6e1b28",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"archiefstatus\": \"{{current_archiefstatus}}\"\n}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-016f) Zaak bijwerken archiefstatus niet nog_te_archiveren is onmogelijk als archiefactiedatum niet gezet",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fbbe81ee-3688-4065-a2a5-793e9a2fff42",
														"exec": [
															"pm.test(\"Zaak bijwerken archiefstatus zetten op niet nog_te_archiveren zonder waarde voor archiefactiedatum geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"archiefactiedatum\");",
															"    pm.expect(error.code).to.be.equal(\"archiefactiedatum-not-set\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "81b03d36-f405-4e6a-9948-de361d6e1b28",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.archiefstatus = pm.globals.get(\"current_archiefstatus\");",
															"body.archiefnominatie = \"blijvend_bewaren\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-016g) Zaak deels bijwerken archiefstatus niet nog_te_archiveren is onmogelijk als archiefactiedatum niet gezet",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fbbe81ee-3688-4065-a2a5-793e9a2fff42",
														"exec": [
															"pm.test(\"Zaak deels bijwerken archiefstatus zetten op niet nog_te_archiveren zonder waarde voor archiefactiedatum geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"archiefactiedatum\");",
															"    pm.expect(error.code).to.be.equal(\"archiefactiedatum-not-set\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "81b03d36-f405-4e6a-9948-de361d6e1b28",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"archiefstatus\": \"{{current_archiefstatus}}\",\n\t\"archiefnominatie\": \"blijvend_bewaren\"\n}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-016h) Zaak bijwerken archiefstatus niet nog_te_archiveren is mogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "febaa10d-27c5-454c-a124-7606cca90a7f",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.archiefstatus = pm.globals.get(\"current_archiefstatus\");",
															"body.archiefnominatie = \"blijvend_bewaren\";",
															"body.archiefactiedatum = \"2020-01-01\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "75e90a59-ec6c-4fd2-8577-d8e2e3525742",
														"exec": [
															"pm.test(\"Zaak bijwerken archiefstatus zetten op niet nog_te_archiveren met archiefactiedatum en archiefnominatie gezet geef 200\", function() {",
															"    pm.response.to.have.status(200);",
															"    pm.expect(pm.response.json().archiefstatus).to.be.equal(pm.globals.get(\"current_archiefstatus\"));",
															"});",
															"",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Change Informatieobject status to not gearchiveerd\"]);",
															"postman.setNextRequest(\"(COMMON) Delete Zaak\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Change Informatieobject status to not gearchiveerd",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6e820332-c9e5-4d25-bcee-66ceb45fb195",
														"exec": [
															"var index = pm.globals.get(\"archiefstatus_index\");",
															"",
															"if (index == pm.globals.get(\"archiefstatussen\").length - 1) {",
															"    postman.setNextRequest(\"(COMMON) Unlock EnkelvoudigInformatieObject\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create Zaak to delete\"]);",
															"} else {",
															"    // Loop",
															"    pm.globals.set(\"archiefstatus_index\", index + 1);",
															"    if (pm.globals.get(\"created_objectinformatieobject_url\")) {",
															"        pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create Zaak to be archived\"]);",
															"        postman.setNextRequest(\"(COMMON) Delete ZaakInformatieObject\");",
															"    } else {",
															"        postman.setNextRequest(\"Create Zaak to be archived\");",
															"    }",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"status\": \"\",\n\t\"lock\": \"{{informatieobject_lock_id}}\"\n}"
												},
												"url": {
													"raw": "{{informatieobject_url}}",
													"host": [
														"{{informatieobject_url}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "93ce8524-5561-4ec9-8543-d05f233cbfc2",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "c0ff52a8-3e35-45c6-846e-e456faa1837d",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "zrc-017 (NI)",
									"item": [
										{
											"name": "Create Zaak to delete",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a64c1a05-ff2c-4a48-9f85-2251ef5548cd",
														"exec": [
															"pm.globals.set(\"created_zaak_url\", pm.response.json().url);",
															"",
															"if(pm.response.code != 201) {",
															"    if(pm.globals.get(\"zaak_url\")) {",
															"        postman.setNextRequest(\"(ZRC) Delete Zaak\");",
															"    } else {",
															"        postman.setNextRequest(\"Retrieve Informatieobjecttype, Zaaktype and Besluittype\");",
															"    }",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{zaak_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add Deelzaak to Zaak",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "5bf28e6c-1d36-49eb-a6d5-9594eb638b02",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"zaak_body\"));",
															"body.hoofdzaak = pm.globals.get(\"created_zaak_url\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "f80ae041-7e43-4126-996d-4f8b58b8c70b",
														"exec": [
															"pm.globals.set(\"deelzaak_url\", pm.response.json().url);",
															"",
															"if(pm.response.code != 201) {",
															"    if(pm.globals.get(\"created_zaak_url\")) {",
															"        postman.setNextRequest(\"Add Resultaat to Zaak\");",
															"    } else if(pm.globals.get(\"zaak_url\")) {",
															"        postman.setNextRequest(\"(ZRC) Delete Zaak\");",
															"    } else {",
															"        postman.setNextRequest(\"Retrieve Informatieobjecttype, Zaaktype and Besluittype\");",
															"    }",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add Resultaat to Zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7226fe56-bdcc-42d9-ad16-07852570b778",
														"exec": [
															"pm.globals.set(\"resultaat_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "820be47c-e617-4e5e-aa70-5e4ab1440b54",
														"exec": [
															"pm.globals.set(\"resultaattype\", pm.globals.get(\"zaaktype_resultaattypen\")[0]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"resultaatType\": \"{{resultaattype}}\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/resultaten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"resultaten"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add Status to Zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7226fe56-bdcc-42d9-ad16-07852570b778",
														"exec": [
															"pm.globals.set(\"status_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "820be47c-e617-4e5e-aa70-5e4ab1440b54",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"statusType\": \"{{non_eindstatustype}}\",\n\t\"datumStatusGezet\": \"2018-04-20T13:37:00\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/statussen",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"statussen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add Rol to Zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7226fe56-bdcc-42d9-ad16-07852570b778",
														"exec": [
															"pm.globals.set(\"rol_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "820be47c-e617-4e5e-aa70-5e4ab1440b54",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"betrokkene\": \"http://example.com/2d0815580af94ee0a15aa677aa646e1a\",\n\t\"betrokkeneType\": \"Natuurlijk persoon\",\n\t\"rolomschrijving\": \"Behandelaar\",\n\t\"roltoelichting\": \"testrol\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/rollen",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"rollen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Zaakobject",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "426a1b11-f44f-40ef-a9fa-6e05e461c2dc",
														"exec": [
															"pm.globals.set(\"zaakobject_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"object\": \"{{informatieobject_url}}\",\n\t\"type\": \"VerblijfsObject\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaakobjecten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaakobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add Zaakeigenschap to Zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7226fe56-bdcc-42d9-ad16-07852570b778",
														"exec": [
															"pm.globals.set(\"zaakeigenschap_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "820be47c-e617-4e5e-aa70-5e4ab1440b54",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"eigenschap\": \"{{zaaktype_eigenschap}}\",\n\t\"waarde\": \"test\"\n}"
												},
												"url": {
													"raw": "{{created_zaak_url}}/zaakeigenschappen",
													"host": [
														"{{created_zaak_url}}"
													],
													"path": [
														"zaakeigenschappen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create relation between Zaak and Informatieobject",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fa9f354c-0464-494e-b9fa-9635b21b2d43",
														"exec": [
															"pm.globals.set(\"created_zaakinformatieobject_url\", pm.response.json().url);",
															"",
															"if(pm.response.code != 201) {",
															"    postman.setNextRequest(\"Add Klantcontact to Zaak\");",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "5be8e943-844c-4786-9173-08a7e1dfb2c8",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"informatieobject\": \"{{informatieobject_url}}\",\n    \"zaak\": \"{{created_zaak_url}}\",\n\t\"titel\": \"\",\n\t\"beschrijving\": \"\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaakinformatieobjecten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaakinformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "Retrieve ObjectInformatieObject url",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "effacf1b-2f79-40a9-84ec-d02488a27980",
														"exec": [
															"pm.globals.set(\"objectinformatieobject_url\", pm.response.json()[0].url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{drc_url}}/objectinformatieobjecten?object={{created_zaak_url}}&informatieobject={{informatieobject_url}}",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"objectinformatieobjecten"
													],
													"query": [
														{
															"key": "object",
															"value": "{{created_zaak_url}}"
														},
														{
															"key": "informatieobject",
															"value": "{{informatieobject_url}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Add Klantcontact to Zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7226fe56-bdcc-42d9-ad16-07852570b778",
														"exec": [
															"pm.globals.set(\"klantcontact_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "820be47c-e617-4e5e-aa70-5e4ab1440b54",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{created_zaak_url}}\",\n\t\"datumtijd\": \"2019-02-20T00:00:00\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/klantcontacten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"klantcontacten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-017a) Zaak verwijderen is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a4bd1602-194d-44c1-b79c-3cdeb7c43c78",
														"exec": [
															"pm.test(\"Zaak verwijderen geeft 204\", function() {",
															"   pm.response.to.have.status(204);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-017b) Zaak verdwijnt uit zrc na verwijdering",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1c927c06-054f-4cb2-8bd9-1d7577fcff37",
														"exec": [
															"pm.test(\"Zaak ophalen uit zrc na verwijdering geeft 404\", function() {",
															"    pm.response.to.have.status(404); ",
															"});",
															"",
															"pm.globals.unset(\"created_zaak_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-017c) Resultaat verdwijnt uit zrc na Zaak verwijdering",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1c927c06-054f-4cb2-8bd9-1d7577fcff37",
														"exec": [
															"pm.test(\"Resultaat ophalen uit zrc na Zaak verwijdering geeft 404\", function() {",
															"    pm.response.to.have.status(404); ",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{resultaat_url}}",
													"host": [
														"{{resultaat_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-017d) Status verdwijnt uit zrc na Zaak verwijdering",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1c927c06-054f-4cb2-8bd9-1d7577fcff37",
														"exec": [
															"pm.test(\"Status ophalen uit zrc na Zaak verwijdering geeft 404\", function() {",
															"    pm.response.to.have.status(404); ",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{status_url}}",
													"host": [
														"{{status_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-017e) Rol verdwijnt uit zrc na Zaak verwijdering",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1c927c06-054f-4cb2-8bd9-1d7577fcff37",
														"exec": [
															"pm.test(\"Rol ophalen uit zrc na Zaak verwijdering geeft 404\", function() {",
															"    pm.response.to.have.status(404); ",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{rol_url}}",
													"host": [
														"{{rol_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-017f) Zaakobject verdwijnt uit zrc na Zaak verwijdering",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1c927c06-054f-4cb2-8bd9-1d7577fcff37",
														"exec": [
															"pm.test(\"Zaakobject ophalen uit zrc na Zaak verwijdering geeft 404\", function() {",
															"    pm.response.to.have.status(404); ",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{zaakobject_url}}",
													"host": [
														"{{zaakobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-017g) Zaakeigenschap verdwijnt uit zrc na Zaak verwijdering",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1c927c06-054f-4cb2-8bd9-1d7577fcff37",
														"exec": [
															"pm.test(\"Zaakeigenschap ophalen uit zrc na Zaak verwijdering geeft 404\", function() {",
															"    pm.response.to.have.status(404); ",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{zaakeigenschap_url}}",
													"host": [
														"{{zaakeigenschap_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-017h) ObjectInformatieObject verdwijnt uit drc na Zaak verwijdering",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1c927c06-054f-4cb2-8bd9-1d7577fcff37",
														"exec": [
															"pm.test(\"ObjectInformatieObject ophalen uit drc na Zaak verwijdering geeft 404\", function() {",
															"    pm.response.to.have.status(404); ",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{objectinformatieobject_url}}",
													"host": [
														"{{objectinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-017i) ZaakInformatieObject verdwijnt uit zrc na Zaak verwijdering",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1c927c06-054f-4cb2-8bd9-1d7577fcff37",
														"exec": [
															"pm.test(\"ZaakInformatieObject ophalen uit zrc na Zaak verwijdering geeft 404\", function() {",
															"    pm.response.to.have.status(404); ",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_zaakinformatieobject_url}}",
													"host": [
														"{{created_zaakinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-017j) Klantcontact verdwijnt uit zrc na Zaak verwijdering",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1c927c06-054f-4cb2-8bd9-1d7577fcff37",
														"exec": [
															"pm.test(\"Klantcontact ophalen uit zrc na Zaak verwijdering geeft 404\", function() {",
															"    pm.response.to.have.status(404); ",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{klantcontact_url}}",
													"host": [
														"{{klantcontact_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(zrc-017k) Deelzaak verdwijnt na verwijdering Hoofdzaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b8dfc112-61a2-49a9-afef-dc36f7198fd3",
														"exec": [
															"pm.test(\"Deelzaak wordt ook uit ZRC verwijderd als Hoofdzaak verwijderd is\", function() {",
															"    pm.response.to.have.status(404); ",
															"});",
															"",
															"if(pm.response.code == 200) {",
															"    postman.setNextRequest(\"(COMMON) Delete Deelzaak\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(ZRC) Delete Zaak\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{deelzaak_url}}",
													"host": [
														"{{deelzaak_url}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "76b6d9dc-a267-4a10-88b8-43038e699bd4",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "5693684a-48cc-47ac-b187-2124ab33f7fc",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "tearDown",
									"item": [
										{
											"name": "(ZRC) Delete Zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d119b2b8-8897-4495-8802-ab28c4f43d05",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete EnkelvoudigInformatieObject",
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{informatieobject_url}}",
													"host": [
														"{{informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete EnkelvoudigInformatieObject indicatieGebruiksrecht null",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9d6cec16-5d15-491b-8928-009b5f61f3e4",
														"exec": [
															"// Continue to the drc tests",
															"postman.setNextRequest(\"Retrieve Informatieobjecttype, Zaaktype and Besluittype\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{informatieobject_gebruiksrecht_null_url}}",
													"host": [
														"{{informatieobject_gebruiksrecht_null_url}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "ec0d885c-e0bb-4267-bd44-d2e2e5cdf549",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "349ad68a-a9be-4caf-8e29-c8cd91108f1c",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "common requests",
									"item": [
										{
											"name": "(COMMON) Delete Zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a4bd1602-194d-44c1-b79c-3cdeb7c43c78",
														"exec": [
															"pm.globals.unset(\"created_zaak_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_zaak_url}}",
													"host": [
														"{{created_zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(COMMON) Create ZaakInformatieObject",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fa9f354c-0464-494e-b9fa-9635b21b2d43",
														"exec": [
															"pm.globals.set(\"created_zaakinformatieobject_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "5be8e943-844c-4786-9173-08a7e1dfb2c8",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"informatieobject\": \"{{informatieobject_url}}\",\n    \"zaak\": \"{{created_zaak_url}}\",\n    \"titel\": \"\",\n    \"beschrijving\": \"\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaakinformatieobjecten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaakinformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(COMMON) Delete ZaakInformatieObject",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "603464af-77b9-43b8-a4e2-7d4ee67f84d4",
														"exec": [
															"pm.globals.unset(\"created_zaakinformatieobject_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_zaakinformatieobject_url}}",
													"host": [
														"{{created_zaakinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(COMMON) Lock EnkelvoudigInformatieObject",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0bf15990-9838-4e20-a001-d2634b68f1f1",
														"exec": [
															"pm.globals.set(\"informatieobject_lock_id\", pm.response.json().lock);",
															"console.log(pm.globals.get(\"informatieobject_lock_id\"))"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{informatieobject_url}}/lock",
													"host": [
														"{{informatieobject_url}}"
													],
													"path": [
														"lock"
													]
												}
											},
											"response": []
										},
										{
											"name": "(COMMON) Unlock EnkelvoudigInformatieObject",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"lock\": \"{{informatieobject_lock_id}}\"\n}"
												},
												"url": {
													"raw": "{{informatieobject_url}}/unlock",
													"host": [
														"{{informatieobject_url}}"
													],
													"path": [
														"unlock"
													]
												}
											},
											"response": []
										},
										{
											"name": "(COMMON) Delete Deelzaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ac5c912a-3f98-4eed-bd99-1d63c254e479",
														"exec": [
															"pm.globals.unset(\"deelzaak_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{deelzaak_url}}",
													"host": [
														"{{deelzaak_url}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8eb42996-fb0c-4e12-b4d7-ff8efb4e41c7",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "2d725880-a1e8-4fd5-b782-08fad984c0fa",
												"type": "text/javascript",
												"exec": [
													"var request_names = pm.globals.get(\"NEXT_REQUEST_NAMES\");",
													"if(request_names) {",
													"    postman.setNextRequest(request_names.shift());",
													"    pm.globals.set(\"NEXT_REQUEST_NAMES\", request_names);",
													"}"
												]
											}
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"description": "Bevat alle business logic tests voor het Zaakregistratiecomponent",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7218a25f-3c6c-49e9-8f7c-3ba886c19111",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "d79a0641-84d7-4dd6-8a34-549dcc774d17",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "drc",
							"item": [
								{
									"name": "setUp",
									"item": [
										{
											"name": "Retrieve Informatieobjecttype, Zaaktype and Besluittype",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "75c656ba-6fd2-4a7a-94e3-7485eed53d6f",
														"exec": [
															"pm.globals.set(\"zaaktype_url\", pm.response.json()[0].zaaktypen[0]);",
															"pm.globals.set(\"informatieobjecttype_url\", pm.response.json()[0].informatieobjecttypen[0]);",
															"pm.globals.set(\"besluittype_url\", pm.response.json()[0].besluittypen[0]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{ztc_url}}/catalogussen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"catalogussen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "01e98b0e-0bea-40a1-8485-67695fb020b3",
														"exec": [
															"var zaak = pm.response.json();",
															"pm.globals.set(\"zaak_url\", zaak.url);",
															"pm.globals.set(\"zaak_id\", zaak.identificatie);",
															"pm.globals.set(\"zaak_bronorganisatie\", zaak.bronorganisatie);",
															"pm.globals.set(\"zaak_geometrie\", zaak.zaakgeometrie);",
															"pm.globals.set(\"zaak_body\", pm.request.body.raw);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Crs",
														"value": "EPSG:4326",
														"type": "text"
													},
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bronorganisatie\": \"000000000\",\n    \"omschrijving\": \"string\",\n    \"toelichting\": \"string\",\n    \"registratiedatum\": \"2019-04-09\",\n    \"verantwoordelijkeOrganisatie\": \"000000000\",\n    \"zaaktype\": \"{{zaaktype_url}}\",\n    \"startdatum\": \"2019-04-09\",\n    \"einddatumGepland\": \"2019-04-20\",\n    \"uiterlijkeEinddatumAfdoening\": \"2019-04-09\",\n    \"publicatiedatum\": \"2019-04-09\",\n\t\"vertrouwelijkheidaanduiding\": \"openbaar\",\n\t\"betalingsindicatie\": \"geheel\",\n\t\"laatsteBetaalDatum\": \"2019-01-01\",\n\t\"zaakgeometrie\": \n\t{\n\t    \"type\": \"Point\",\n\t    \"coordinates\": [53, 5]\n\t},\n\t\"opschorting\": \n\t{\n\t    \"indicatie\": true,\n\t    \"reden\": \"string\"\n\t},\n\t\"selectielijstklasse\": \"http://example.com\",\n\t\"relevanteAndereZaken\": \n\t[\n\n    \"http://example.com\"\n\n],\n    \"archiefstatus\": \"nog_te_archiveren\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaken",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaken"
													]
												},
												"description": "Maakt een Zaak aan die gebruikt zal worden in de tests, deze zaak wordt na de tests weer verwijderd.\n\nDe body van deze Zaak zal ook als variabele opgeslagen worden en gebruikt worden (met kleine aanpassingen iedere keer) in de requests voor de validatie tests, om te voorkomen dat telkens hetzelfde body gekopieerd moet worden."
											},
											"response": []
										},
										{
											"name": "Create Besluit",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "23bc2897-511c-416d-b48d-c8aa46adba28",
														"exec": [
															"pm.globals.set(\"besluit_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"verantwoordelijkeOrganisatie\": \"000000000\",\n\t\"besluittype\": \"{{besluittype_url}}\",\n\t\"datum\": \"2019-04-25\",\n\t\"ingangsdatum\": \"2019-04-26\",\n\t\"vervaldatum\": \"2019-04-28\"\n}"
												},
												"url": {
													"raw": "{{brc_url}}/besluiten",
													"host": [
														"{{brc_url}}"
													],
													"path": [
														"besluiten"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "drc-001",
									"item": [
										{
											"name": "(drc-001a) EnkelvoudigInformatieObject aanmaken is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9c297a8c-30f1-428b-88ec-a6d6dc8800c1",
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject aanmaken met valide gegevens geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"});",
															"",
															"if(pm.response.code != 201) {",
															"    postman.setNextRequest(\"(drc-001b) EnkelvoudigInformatieObject aanmaken met ongeldige informatieobjecttype url is onmogelijk\");",
															"} else {",
															"    pm.globals.set(\"informatieobject_url\", pm.response.json().url);",
															"    pm.globals.set(\"informatieobject_body\", pm.request.body.raw);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d5457b08-8cbf-4f6b-aa5f-db290fffd7fd",
														"exec": [
															"pm.globals.set(\"object_inhoud\", btoa(\"string\"))"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"bronorganisatie\": \"000000000\",\n\t\"creatiedatum\": \"2019-01-01\",\n\t\"titel\": \"testobject\",\n\t\"auteur\": \"testauteur\",\n\t\"taal\": \"eng\",\n\t\"inhoud\": \"{{object_inhoud}}\",\n\t\"informatieobjecttype\": \"{{informatieobjecttype_url}}\"\n}"
												},
												"url": {
													"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"enkelvoudiginformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-001b) EnkelvoudigInformatieObject aanmaken met ongeldige informatieobjecttype url is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9983c33d-404e-4f04-9abc-82a130620b5e",
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject aanmaken met informatieobjecttype url die niet resulteert in 200 geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"informatieobjecttype\");",
															"    pm.expect(error.code).to.be.equal(\"bad-url\");",
															"});",
															"",
															"if (pm.response.code == 201) {",
															"    pm.globals.set(\"created_informatieobject_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(drc-001c) EnkelvoudigInformatieObject bijwerken met ongeldige informatieobjecttype url is onmogelijk\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete EnkelvoudigInformatieObject\");",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "fd1337e3-0ddd-49ef-b62c-d098dbec6c32",
														"exec": [
															"var body = JSON.parse(pm.globals.get(\"informatieobject_body\"));",
															"body.informatieobjecttype = pm.environment.get(\"mock_url\") + \"/404\";",
															"",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"enkelvoudiginformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-001c) EnkelvoudigInformatieObject bijwerken met ongeldige informatieobjecttype url is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9c297a8c-30f1-428b-88ec-a6d6dc8800c1",
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject bijwerken met informatieobjecttype url die niet resulteert in 200 geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"informatieobjecttype\");",
															"    pm.expect(error.code).to.be.equal(\"bad-url\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d5457b08-8cbf-4f6b-aa5f-db290fffd7fd",
														"exec": [
															"var body = JSON.parse(pm.globals.get(\"informatieobject_body\"));",
															"body.informatieobjecttype = pm.environment.get(\"mock_url\") + \"/404\";",
															"",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{informatieobject_url}}",
													"host": [
														"{{informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-001d) EnkelvoudigInformatieObject deels bijwerken met ongeldige informatieobjecttype url is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9c297a8c-30f1-428b-88ec-a6d6dc8800c1",
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject deels bijwerken met informatieobjecttype url die niet resulteert in 200 geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"informatieobjecttype\");",
															"    pm.expect(error.code).to.be.equal(\"bad-url\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d5457b08-8cbf-4f6b-aa5f-db290fffd7fd",
														"exec": [
															"pm.globals.set(\"aangepaste_auteur\", \"aangepaste auteur\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"informatieobjecttype\": \"{{mock_url}}/404\"\n}"
												},
												"url": {
													"raw": "{{informatieobject_url}}",
													"host": [
														"{{informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-001e) EnkelvoudigInformatieObject aanmaken met informatieobjecttype url die niet wijst naar informatieobjecttype is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9983c33d-404e-4f04-9abc-82a130620b5e",
														"exec": [
															"pm.test.skip(\"EnkelvoudigInformatieObject aanmaken met informatieobjecttype url die niet wijst naar Informatieobjecttype geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"informatieobjecttype\");",
															"    pm.expect(error.code).to.be.equal(\"invalid-resource\");",
															"});",
															"",
															"if (pm.response.code == 201) {",
															"    pm.globals.set(\"created_informatieobject_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(drc-001f) EnkelvoudigInformatieObject bijwerken met informatieobjecttype url die niet wijst naar informatieobjecttype is onmogelijk\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete EnkelvoudigInformatieObject\");",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "7efcc0f7-8bcc-435b-afa0-581b4b34f42d",
														"exec": [
															"var body = JSON.parse(pm.globals.get(\"informatieobject_body\"));",
															"body.informatieobjecttype = pm.environment.get(\"mock_url\") + \"/200\";",
															"",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"enkelvoudiginformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-001f) EnkelvoudigInformatieObject bijwerken met informatieobjecttype url die niet wijst naar informatieobjecttype is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9c297a8c-30f1-428b-88ec-a6d6dc8800c1",
														"exec": [
															"pm.test.skip(\"EnkelvoudigInformatieObject bijwerken met informatieobjecttype url die niet wijst naar Informatieobjecttype geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"informatieobjecttype\");",
															"    pm.expect(error.code).to.be.equal(\"invalid-resource\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d5457b08-8cbf-4f6b-aa5f-db290fffd7fd",
														"exec": [
															"var body = JSON.parse(pm.globals.get(\"informatieobject_body\"));",
															"body.informatieobjecttype = pm.environment.get(\"mock_url\") + \"/200\";",
															"",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{informatieobject_url}}",
													"host": [
														"{{informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-001g) EnkelvoudigInformatieObject deels bijwerken met informatieobjecttype url die niet wijst naar informatieobjecttype is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9c297a8c-30f1-428b-88ec-a6d6dc8800c1",
														"exec": [
															"pm.test.skip(\"EnkelvoudigInformatieObject deels bijwerken met informatieobjecttype url die niet wijst naar Informatieobjecttype geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"informatieobjecttype\");",
															"    pm.expect(error.code).to.be.equal(\"invalid-resource\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d5457b08-8cbf-4f6b-aa5f-db290fffd7fd",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"informatieobjecttype\": \"{{mock_url}}/200\"\n}"
												},
												"url": {
													"raw": "{{informatieobject_url}}",
													"host": [
														"{{informatieobject_url}}"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "drc-002",
									"item": [
										{
											"name": "(drc-002a) ObjectInformatieObject aanmaken met objectType zaak en ongeldige object url is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "069de5e5-b099-45d2-af4c-17009b2ec3be",
														"exec": [
															"pm.test(\"ObjectInformatieObject aanmaken met objecttype zaak en object url die niet resulteert in 200 geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"object\");",
															"    pm.expect(error.code).to.be.equal(\"bad-url\");",
															"});",
															"",
															"if (pm.response.code == 201) {",
															"    pm.globals.set(\"created_objectinformatieobject_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(drc-002b) ObjectInformatieObject aanmaken met objectType besluit en ongeldige object url is onmogelijk\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete ObjectInformatieObject\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"informatieobject\": \"{{informatieobject_url}}\",\n\t\"object\": \"{{mock_url}}/404\",\n\t\"objectType\": \"zaak\"\n}"
												},
												"url": {
													"raw": "{{drc_url}}/objectinformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"objectinformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-002b) ObjectInformatieObject aanmaken met objectType besluit en ongeldige object url is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "069de5e5-b099-45d2-af4c-17009b2ec3be",
														"exec": [
															"pm.test(\"ObjectInformatieObject aanmaken met objecttype besluit en object url die niet resulteert in 200 geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"object\");",
															"    pm.expect(error.code).to.be.equal(\"bad-url\");",
															"});",
															"",
															"if (pm.response.code == 201) {",
															"    pm.globals.set(\"created_objectinformatieobject_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(drc-002c) ObjectInformatieObject aanmaken met objectType zaak en object url die niet wijst naar Zaak is onmogelijk\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete ObjectInformatieObject\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"informatieobject\": \"{{informatieobject_url}}\",\n\t\"object\": \"{{mock_url}}/404\",\n\t\"objectType\": \"besluit\"\n}"
												},
												"url": {
													"raw": "{{drc_url}}/objectinformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"objectinformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-002c) ObjectInformatieObject aanmaken met objectType zaak en object url die niet wijst naar Zaak is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "069de5e5-b099-45d2-af4c-17009b2ec3be",
														"exec": [
															"pm.test.skip(\"ObjectInformatieObject aanmaken met objecttype zaak en object url die niet wijst naar Zaak geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"object\");",
															"    pm.expect(error.code).to.be.equal(\"invalid-resource\");",
															"});",
															"",
															"if (pm.response.code == 201) {",
															"    pm.globals.set(\"created_objectinformatieobject_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(drc-002d) ObjectInformatieObject aanmaken met objectType besluit en object url die niet wijst naar Besluit is onmogelijk\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete ObjectInformatieObject\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"informatieobject\": \"{{informatieobject_url}}\",\n\t\"object\": \"{{mock_url}}/200\",\n\t\"objectType\": \"zaak\"\n}"
												},
												"url": {
													"raw": "{{drc_url}}/objectinformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"objectinformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-002d) ObjectInformatieObject aanmaken met objectType besluit en object url die niet wijst naar Besluit is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "069de5e5-b099-45d2-af4c-17009b2ec3be",
														"exec": [
															"pm.test.skip(\"ObjectInformatieObject aanmaken met objecttype besluit en object url die niet wijst naar Besluit geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"object\");",
															"    pm.expect(error.code).to.be.equal(\"invalid-resource\");",
															"});",
															"",
															"if (pm.response.code == 201) {",
															"    pm.globals.set(\"created_objectinformatieobject_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(drc-003a) ObjectInformatieObject aanmaken met objectType zaak zet juiste aardRelatie\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete ObjectInformatieObject\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"informatieobject\": \"{{informatieobject_url}}\",\n\t\"object\": \"{{mock_url}}/200\",\n\t\"objectType\": \"besluit\"\n}"
												},
												"url": {
													"raw": "{{drc_url}}/objectinformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"objectinformatieobjecten"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "drc-003",
									"item": [
										{
											"name": "Create relation between Zaak and Informatieobject",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9850a5b1-6f37-4f23-86d9-f82da3d27db4",
														"exec": [
															"pm.globals.set(\"created_zaakinformatieobject_url\", pm.response.json().url);",
															"",
															"if(pm.response.code != 201) {",
															"    postman.setNextRequest(\"Create relation between Besluit and Informatieobject\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{zaak_url}}\",\n\t\"informatieobject\": \"{{informatieobject_url}}\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaakinformatieobjecten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaakinformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-003a) ObjectInformatieObject aanmaken met bestaande combinatie object en informatieobject en objectType zaak is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "069de5e5-b099-45d2-af4c-17009b2ec3be",
														"exec": [
															"pm.test(\"ObjectInformatieObject aanmaken met objecttype zaak en bestaande combinatie object en informatieobject geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"unique\");",
															"});",
															"",
															"var request_names = [\"Create relation between Besluit and Informatieobject\"];",
															"if (pm.response.code == 201) {",
															"    pm.globals.set(\"created_objectinformatieobject_url\", pm.response.json().url);",
															"    request_names.unshift(\"(COMMON) Delete ZaakInformatieObject\");",
															"    postman.setNextRequest(\"(COMMON) Delete ObjectInformatieObject\");",
															"} else {",
															"    postman.setNextRequest(\"(COMMON) Delete ZaakInformatieObject\");",
															"}",
															"",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", request_names);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"informatieobject\": \"{{informatieobject_url}}\",\n\t\"object\": \"{{zaak_url}}\",\n\t\"objectType\": \"zaak\"\n}"
												},
												"url": {
													"raw": "{{drc_url}}/objectinformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"objectinformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create relation between Besluit and Informatieobject",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9850a5b1-6f37-4f23-86d9-f82da3d27db4",
														"exec": [
															"pm.globals.set(\"created_besluitinformatieobject_url\", pm.response.json().url);",
															"",
															"if(pm.response.code != 201) {",
															"    postman.setNextRequest(\"(drc-004a) ObjectInformatieObject aanmaken met zaak en informatieobject niet gekoppeld in zrc is onmogelijk\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"besluit\": \"{{besluit_url}}\",\n\t\"informatieobject\": \"{{informatieobject_url}}\"\n}"
												},
												"url": {
													"raw": "{{brc_url}}/besluitinformatieobjecten",
													"host": [
														"{{brc_url}}"
													],
													"path": [
														"besluitinformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-003b) ObjectInformatieObject aanmaken met bestaande combinatie object en informatieobject en objectType besluit is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "069de5e5-b099-45d2-af4c-17009b2ec3be",
														"exec": [
															"pm.test(\"ObjectInformatieObject aanmaken met objecttype besluit en bestaande combinatie object en informatieobject geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"unique\");",
															"});",
															"",
															"var request_names = [\"(drc-004a) ObjectInformatieObject aanmaken met zaak en informatieobject niet gekoppeld in zrc is onmogelijk\"];",
															"if (pm.response.code == 201) {",
															"    pm.globals.set(\"created_objectinformatieobject_url\", pm.response.json().url);",
															"    request_names.unshift(\"(COMMON) Delete BesluitInformatieObject\");",
															"    postman.setNextRequest(\"(COMMON) Delete ObjectInformatieObject\");",
															"} else {",
															"    postman.setNextRequest(\"(COMMON) Delete BesluitInformatieObject\");",
															"}",
															"",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", request_names);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"informatieobject\": \"{{informatieobject_url}}\",\n\t\"object\": \"{{besluit_url}}\",\n\t\"objectType\": \"besluit\"\n}"
												},
												"url": {
													"raw": "{{drc_url}}/objectinformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"objectinformatieobjecten"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "drc-004",
									"item": [
										{
											"name": "(drc-004a) ObjectInformatieObject aanmaken met zaak en informatieobject niet gekoppeld in zrc is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "069de5e5-b099-45d2-af4c-17009b2ec3be",
														"exec": [
															"pm.test(\"ObjectInformatieObject aanmaken met objectType zaak en object en informatieobject die nog niet gekoppeld zijn in zrc geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"inconsistent-relation\");",
															"});",
															"",
															"if (pm.response.code == 201) {",
															"    pm.globals.set(\"created_objectinformatieobject_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(drc-004b) ObjectInformatieObject aanmaken met besluit en informatieobject niet gekoppeld in brc is onmogelijk\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete ObjectInformatieObject\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"informatieobject\": \"{{informatieobject_url}}\",\n\t\"object\": \"{{zaak_url}}\",\n\t\"objectType\": \"zaak\"\n}"
												},
												"url": {
													"raw": "{{drc_url}}/objectinformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"objectinformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-004b) ObjectInformatieObject aanmaken met besluit en informatieobject niet gekoppeld in brc is onmogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "069de5e5-b099-45d2-af4c-17009b2ec3be",
														"exec": [
															"pm.test(\"ObjectInformatieObject aanmaken met objectType besluit en object en informatieobject die nog niet gekoppeld zijn in zrc geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"inconsistent-relation\");",
															"});",
															"",
															"if (pm.response.code == 201) {",
															"    pm.globals.set(\"created_objectinformatieobject_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create EnkelvoudigInformatieObject with status in bewerking\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete ObjectInformatieObject\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"informatieobject\": \"{{informatieobject_url}}\",\n\t\"object\": \"{{besluit_url}}\",\n\t\"objectType\": \"besluit\"\n}"
												},
												"url": {
													"raw": "{{drc_url}}/objectinformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"objectinformatieobjecten"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "drc-005 (WIP) (NI)",
									"item": [
										{
											"name": "Create EnkelvoudigInformatieObject with status in bewerking",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "52592cd1-86f0-4bbd-8bfb-7a641b89cedd",
														"exec": [
															"var body = JSON.parse(pm.globals.get(\"informatieobject_body\"));",
															"body.status = \"in bewerking\";",
															"",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "728ef173-68ae-4bd0-a484-852e477b5999",
														"exec": [
															"pm.globals.set(\"created_informatieobject_url\", pm.response.json().url);",
															"",
															"if(pm.response.code != 201) {",
															"    postman.setNextRequest(\"Create EnkelvoudigInformatieObject with status ter vaststelling\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"enkelvoudiginformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-005a) EnkelvoudigInformatieObject bijwerken ontvangstdatum zetten als status in bewerking is niet toegestaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "4fe7f30d-9def-45d9-aa11-a296125f4ff3",
														"exec": [
															"var body = JSON.parse(pm.globals.get(\"informatieobject_body\"));",
															"body.status = \"in bewerking\";",
															"body.ontvangstdatum = \"2019-01-01\";",
															"",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "210802e1-bb4f-4d17-8aeb-8351fc60997b",
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject ontvangstdatum zetten als status in bewerking geeft 400\", function() {",
															"    pm.response.to.have.status(400); ",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_informatieobject_url}}",
													"host": [
														"{{created_informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-005b) EnkelvoudigInformatieObject deels bijwerken ontvangstdatum zetten als status in bewerking is niet toegestaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "4fe7f30d-9def-45d9-aa11-a296125f4ff3",
														"exec": [
															"var body = JSON.parse(pm.globals.get(\"informatieobject_body\"));",
															"body.status = \"in bewerking\";",
															"body.ontvangstdatum = \"2019-01-01\";",
															"",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "210802e1-bb4f-4d17-8aeb-8351fc60997b",
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject ontvangstdatum zetten als status in bewerking geeft 400\", function() {",
															"    pm.response.to.have.status(400); ",
															"});",
															"",
															"if(pm.globals.get(\"created_informatieobject_url\")) {",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create EnkelvoudigInformatieObject with status ter vaststelling\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete EnkelvoudigInformatieObject\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_informatieobject_url}}",
													"host": [
														"{{created_informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create EnkelvoudigInformatieObject with status ter vaststelling",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "52592cd1-86f0-4bbd-8bfb-7a641b89cedd",
														"exec": [
															"var body = JSON.parse(pm.globals.get(\"informatieobject_body\"));",
															"body.status = \"in bewerking\";",
															"",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "728ef173-68ae-4bd0-a484-852e477b5999",
														"exec": [
															"pm.globals.set(\"created_informatieobject_url\", pm.response.json().url);",
															"",
															"// TODO is dit handig?",
															"if(pm.response.code != 201) {",
															"    postman.setNextRequest(\"(drc-006a) Valideren default indicatie gebruiksrecht bij aanmaken EnkelvoudigInformatieObject\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"enkelvoudiginformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-005c) EnkelvoudigInformatieObject bijwerken ontvangstdatum zetten als status ter vaststelling is niet toegestaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "4fe7f30d-9def-45d9-aa11-a296125f4ff3",
														"exec": [
															"var body = JSON.parse(pm.globals.get(\"informatieobject_body\"));",
															"body.status = \"ter vaststelling\";",
															"body.ontvangstdatum = \"2019-01-01\";",
															"",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "98c02693-1303-4ef4-8569-7a8af71ace58",
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject ontvangstdatum zetten als status ter vaststelling geeft 400\", function() {",
															"    pm.response.to.have.status(400); ",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_informatieobject_url}}",
													"host": [
														"{{created_informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-005d) EnkelvoudigInformatieObject deels bijwerken ontvangstdatum zetten als status ter vaststelling is niet toegestaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "4fe7f30d-9def-45d9-aa11-a296125f4ff3",
														"exec": [
															"var body = JSON.parse(pm.globals.get(\"informatieobject_body\"));",
															"body.status = \"ter vaststelling\";",
															"body.ontvangstdatum = \"2019-01-01\";",
															"",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "98c02693-1303-4ef4-8569-7a8af71ace58",
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject ontvangstdatum zetten als status ter vaststelling geeft 400\", function() {",
															"    pm.response.to.have.status(400); ",
															"});",
															"",
															"if(pm.globals.get(\"created_informatieobject_url\")) {",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(drc-006a) Valideren default indicatie gebruiksrecht bij aanmaken EnkelvoudigInformatieObject\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete EnkelvoudigInformatieObject\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_informatieobject_url}}",
													"host": [
														"{{created_informatieobject_url}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "7590e3e9-e6c8-4cba-8915-9f11b7ad32af",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f572b8fb-27fc-42b3-9228-2eff2807a99c",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "drc-006",
									"item": [
										{
											"name": "(drc-006a) Valideren default indicatie gebruiksrecht bij aanmaken EnkelvoudigInformatieObject",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "df7215fd-6f12-404c-b47d-6628ae6b0b69",
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject aanmaken zet indicatie gebruiksrecht op null indien niet gedefinieerd\", function() {",
															"    pm.expect(pm.response.json().indicatieGebruiksrecht).to.be.equal(null);",
															"});",
															"",
															"if (pm.response.code == 201) {",
															"    pm.globals.set(\"created_informatieobject_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(drc-006b) EnkelvoudigInformatieObject aanmaken met indicatie gebruiksrecht true vereist Gebruiksrechten\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete EnkelvoudigInformatieObject\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{informatieobject_body}}"
												},
												"url": {
													"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"enkelvoudiginformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-006b) EnkelvoudigInformatieObject aanmaken met indicatie gebruiksrecht true vereist Gebruiksrechten",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "df7215fd-6f12-404c-b47d-6628ae6b0b69",
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject aanmaken met indicatie gebruiksrecht true zonder Gebruiksrechten in drc geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"indicatieGebruiksrecht\");",
															"    pm.expect(error.code).to.be.equal(\"missing-gebruiksrechten\");",
															"});",
															"",
															"if (pm.response.code == 201) {",
															"    pm.globals.set(\"created_informatieobject_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create Gebruiksrechten\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete EnkelvoudigInformatieObject\");",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "bf34ae64-12e7-403e-91e3-c36f821e7135",
														"exec": [
															"var body = JSON.parse(pm.globals.get(\"informatieobject_body\"));",
															"body.indicatieGebruiksrecht = true;",
															"",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"enkelvoudiginformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Gebruiksrechten",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "71ace9a4-f7ae-457c-94e9-7a0501d4f10e",
														"exec": [
															"pm.globals.set(\"gebruiksrechten_url\", pm.response.json().url);",
															"",
															"postman.setNextRequest(\"(COMMON) Lock EnkelvoudigInformatieObject\");",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(drc-006c) EnkelvoudigInformatieObject bijwerken met indicatie gebruiksrecht true en Gebruiksrechten mogelijk\"]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"informatieobject\": \"{{informatieobject_url}}\",\n\t\"startdatum\": \"2019-01-01T12:00:00\",\n\t\"omschrijvingVoorwaarden\": \"test\"\n}"
												},
												"url": {
													"raw": "{{drc_url}}/gebruiksrechten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"gebruiksrechten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-006c) EnkelvoudigInformatieObject bijwerken met indicatie gebruiksrecht true en Gebruiksrechten mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "df7215fd-6f12-404c-b47d-6628ae6b0b69",
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject bijwerken met indicatie gebruiksrecht true en Gebruiksrechten in drc geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"});",
															"    ",
															"pm.test(\"EnkelvoudigInformatieObject bijwerken met indicatie gebruiksrecht true en Gebruiksrechten in drc past indicatie gebruiksrecht correct aan\", function() {",
															"    pm.expect(pm.response.json().indicatieGebruiksrecht).to.be.equal(true);",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "bf34ae64-12e7-403e-91e3-c36f821e7135",
														"exec": [
															"var body = JSON.parse(pm.globals.get(\"informatieobject_body\"));",
															"body.indicatieGebruiksrecht = true;",
															"body.lock = pm.globals.get(\"informatieobject_lock_id\");",
															"",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{informatieobject_url}}",
													"host": [
														"{{informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-006d) EnkelvoudigInformatieObject deels bijwerken met indicatie gebruiksrecht true en Gebruiksrechten mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "df7215fd-6f12-404c-b47d-6628ae6b0b69",
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject deels bijwerken met indicatie gebruiksrecht true en Gebruiksrechten in drc geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"});",
															"    ",
															"pm.test(\"EnkelvoudigInformatieObject deels bijwerken met indicatie gebruiksrecht true en Gebruiksrechten in drc past indicatie gebruiksrecht correct aan\", function() {",
															"    pm.expect(pm.response.json().indicatieGebruiksrecht).to.be.equal(true);",
															"});",
															"",
															"postman.setNextRequest(\"(COMMON) Unlock EnkelvoudigInformatieObject\");",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Delete Gebruiksrechten\"]);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "bf34ae64-12e7-403e-91e3-c36f821e7135",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"indicatieGebruiksrecht\": true,\n\t\"lock\": \"{{informatieobject_lock_id}}\"\n}"
												},
												"url": {
													"raw": "{{informatieobject_url}}",
													"host": [
														"{{informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Gebruiksrechten",
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{gebruiksrechten_url}}",
													"host": [
														"{{gebruiksrechten_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-006d) Verwijderen Gebruiksrechten zet EnkelvoudigInformatieObject.indicatieGebruiksrecht op null",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1ce1a3ed-5044-456a-a316-5ff0cc82bf82",
														"exec": [
															"pm.test(\"Verwijderen Gebruiksrechten zet EnkelvoudigInformatieObject.indicatieGebruiksrecht op null\", function() {",
															"    pm.expect(pm.response.json().indicatieGebruiksrecht).to.be.equal(null); ",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{informatieobject_url}}",
													"host": [
														"{{informatieobject_url}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "fa33490a-e966-4d36-8137-3dfec69a7d7b",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "2021128f-a842-46d2-b715-8e4a60248762",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "drc-007",
									"item": [
										{
											"name": "(drc-007a) EnkelvoudigInformatieObject aanmaken met expliciet gedefinieerde vertrouwelijkheidaanduiding",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "d8dbc102-90f7-46c7-a6c2-10e412c9d831",
														"exec": [
															"pm.globals.set(\"expliciete_vertrouwelijkheidaanduiding\", \"vertrouwelijk\");",
															"",
															"var body = JSON.parse(pm.globals.get(\"informatieobject_body\"));",
															"body.vertrouwelijkheidaanduiding = pm.globals.get(\"expliciete_vertrouwelijkheidaanduiding\");",
															"",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "c8fb97ab-69f9-451b-85f2-9a1efbf412cb",
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject aanmaken met expliciet gedefinieerde vertrouwelijkheidaanduiding krijgt die waarde toegekend\", function() {",
															"    pm.expect(pm.response.json().vertrouwelijkheidaanduiding).to.be.equal(pm.globals.get(\"expliciete_vertrouwelijkheidaanduiding\"));",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_informatieobject_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(drc-007b) EnkelvoudigInformatieObject bijwerken met expliciet gedefinieerde vertrouwelijkheidaanduiding\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete EnkelvoudigInformatieObject\");",
															"}",
															"",
															"postman.setNextRequest(\"(COMMON) Lock EnkelvoudigInformatieObject\");",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(drc-007b) EnkelvoudigInformatieObject bijwerken met expliciet gedefinieerde vertrouwelijkheidaanduiding\"]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"enkelvoudiginformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-007b) EnkelvoudigInformatieObject bijwerken met expliciet gedefinieerde vertrouwelijkheidaanduiding",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "d8dbc102-90f7-46c7-a6c2-10e412c9d831",
														"exec": [
															"pm.globals.set(\"expliciete_vertrouwelijkheidaanduiding\", \"vertrouwelijk\");",
															"",
															"var body = JSON.parse(pm.globals.get(\"informatieobject_body\"));",
															"body.vertrouwelijkheidaanduiding = pm.globals.get(\"expliciete_vertrouwelijkheidaanduiding\");",
															"body.lock = pm.globals.get(\"informatieobject_lock_id\");",
															"",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "c8fb97ab-69f9-451b-85f2-9a1efbf412cb",
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject aanmaken met expliciet gedefinieerde vertrouwelijkheidaanduiding krijgt die waarde toegekend\", function() {",
															"    pm.expect(pm.response.json().vertrouwelijkheidaanduiding).to.be.equal(pm.globals.get(\"expliciete_vertrouwelijkheidaanduiding\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{informatieobject_url}}",
													"host": [
														"{{informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-007c) EnkelvoudigInformatieObject deels bijwerken met expliciet gedefinieerde vertrouwelijkheidaanduiding",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "d8dbc102-90f7-46c7-a6c2-10e412c9d831",
														"exec": [
															"pm.globals.set(\"expliciete_vertrouwelijkheidaanduiding\", \"zeer geheim\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "c8fb97ab-69f9-451b-85f2-9a1efbf412cb",
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject aanmaken met expliciet gedefinieerde vertrouwelijkheidaanduiding krijgt die waarde toegekend\", function() {",
															"    pm.expect(pm.response.json().vertrouwelijkheidaanduiding).to.be.equal(pm.globals.get(\"expliciete_vertrouwelijkheidaanduiding\"));",
															"});",
															"",
															"postman.setNextRequest(\"(COMMON) Unlock EnkelvoudigInformatieObject\");",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Retrieve Informatieobjecttype vertrouwelijkheidaanduiding\"]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"vertrouwelijkheidaanduiding\": \"{{expliciete_vertrouwelijkheidaanduiding}}\",\n\t\"lock\": \"{{informatieobject_lock_id}}\"\n}"
												},
												"url": {
													"raw": "{{informatieobject_url}}",
													"host": [
														"{{informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Retrieve Informatieobjecttype vertrouwelijkheidaanduiding",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6cf5e882-b0d7-481a-a9ed-e8b95c4fcb22",
														"exec": [
															"pm.globals.set(\"informatieobjecttype_vertrouwelijkheidaanduiding\", pm.response.json().vertrouwelijkheidaanduiding);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{informatieobjecttype_url}}",
													"host": [
														"{{informatieobjecttype_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-007b) EnkelvoudigInformatieObject aanmaken leidt vertrouwelijkheidaanduiding af uit Informatieobjecttype",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "d8dbc102-90f7-46c7-a6c2-10e412c9d831",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "c8fb97ab-69f9-451b-85f2-9a1efbf412cb",
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject aanmaken zonder expliciet gedefinieerde vertrouwelijkheidaanduiding leidt vertrouwelijkheidaanduiding af uit Informatieobjecttype\", function() {",
															"    pm.expect(pm.response.json().vertrouwelijkheidaanduiding).to.be.equal(pm.globals.get(\"informatieobjecttype_vertrouwelijkheidaanduiding\"));",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_informatieobject_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [",
															"        \"(COMMON) Create EnkelvoudigInformatieObject\",",
															"        \"(COMMON) Create ZaakInformatieObject\",",
															"        \"(drc-008a) EnkelvoudigInformatieObject verwijderen terwijl er ObjectInformatieObjecten aan gekoppeld zijn is niet toegestaan\"",
															"    ]);",
															"    postman.setNextRequest(\"(COMMON) Delete EnkelvoudigInformatieObject\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{informatieobject_body}}"
												},
												"url": {
													"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"enkelvoudiginformatieobjecten"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "drc-008",
									"item": [
										{
											"name": "(drc-008a) EnkelvoudigInformatieObject verwijderen terwijl er ObjectInformatieObjecten aan gekoppeld zijn is niet toegestaan",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8f1e5b56-40dc-4a62-a20e-ea78f41d5931",
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject verwijderen terwijl er ObjectInformatieObjecten aan gekoppeld zijn is niet toegestaan\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // todo",
															"});",
															"",
															"postman.setNextRequest(\"(COMMON) Delete ZaakInformatieObject\");",
															"var next_requests = [];",
															"if(pm.response.code != 204) {",
															"    next_requests.push(\"(COMMON) Delete EnkelvoudigInformatieObject\");",
															"} ",
															"",
															"next_requests.push(\"(COMMON) Create EnkelvoudigInformatieObject\");",
															"next_requests.push(\"(COMMON) Create Gebruiksrechten\");",
															"next_requests.push(\"Delete created InformatieObject\");",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", next_requests);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_informatieobject_url}}",
													"host": [
														"{{created_informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete created InformatieObject",
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_informatieobject_url}}",
													"host": [
														"{{created_informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-008b) EnkelvoudigInformatieObject verwijderen cascade door naar gerelateerde Gebruiksrechten",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "0fdb971c-a1a9-4b02-906f-5626892540c5",
														"exec": [
															"pm.variables.set(\"encoded_url\", encodeURIComponent(pm.globals.get(\"created_informatieobject_url\")))"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "b061f7db-dcb6-4769-baf7-97f122454b87",
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject verwijderen verwijdert ook alle gerelateerde Gebruiksrechten uit het DRC\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json().invalidParams[0];",
															"    pm.expect(error.name).to.be.equal(\"informatieobject\");",
															"    pm.expect(error.code).to.be.equal(\"invalid\");",
															"});",
															"",
															"if(pm.response.code != 400) {",
															"    postman.setNextRequest(\"(COMMON) Delete Gebruiksrechten\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(drc-008c) EnkelvoudigInformatieObject verwijderen cascade door naar gerelateerde audit trail\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{drc_url}}/gebruiksrechten?informatieobject={{encoded_url}}",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"gebruiksrechten"
													],
													"query": [
														{
															"key": "informatieobject",
															"value": "{{encoded_url}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-008c) EnkelvoudigInformatieObject verwijderen cascade door naar gerelateerde audit trail",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c10dce8d-2f7e-451d-8eca-6bfa3117eaf9",
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject verwijderen verwijdert ook de gerelateerde audit trail uit het DRC\", function() {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.globals.unset(\"created_informatieobject_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_informatieobject_url}}/audittrail",
													"host": [
														"{{created_informatieobject_url}}"
													],
													"path": [
														"audittrail"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "68f961fc-bc78-47ff-b731-6cf4715fee57",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "b2d7129a-9334-4e29-873d-65c691346a7f",
												"type": "text/javascript",
												"exec": [
													"var request_names = pm.globals.get(\"NEXT_REQUEST_NAMES\");",
													"if(request_names != []) {",
													"    postman.setNextRequest(request_names.shift());",
													"    pm.globals.set(\"NEXT_REQUEST_NAMES\", request_names);",
													"}"
												]
											}
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "drc-009 (WIP)",
									"item": [
										{
											"name": "(drc-009a) EnkelvoudigInformatieObject bijwerken zonder lock niet toegestaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "e7d58a49-3ac9-49a2-8eec-f7ef4b3605da",
														"exec": [
															"var body = JSON.parse(pm.globals.get(\"informatieobject_body\"));",
															"pm.globals.set(\"aangepaste_titel\", \"aangepast\");",
															"body.titel = pm.globals.get(\"aangepaste_titel\");",
															"",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "d011b349-c63f-444c-9fc4-7192cde596e2",
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject bijwerken zonder lock geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json().invalidParams[0];",
															"    pm.expect(error.name).to.be.equal(\"lock\");",
															"    pm.expect(error.code).to.be.equal(\"required\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{informatieobject_url}}",
													"host": [
														"{{informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-009b) EnkelvoudigInformatieObject bijwerken terwijl unlocked niet toegestaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "e7d58a49-3ac9-49a2-8eec-f7ef4b3605da",
														"exec": [
															"var body = JSON.parse(pm.globals.get(\"informatieobject_body\"));",
															"pm.globals.set(\"aangepaste_titel\", \"aangepast\");",
															"body.titel = pm.globals.get(\"aangepaste_titel\");",
															"body.lock = \"some_incorrect_lock\";",
															"",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "d011b349-c63f-444c-9fc4-7192cde596e2",
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject bijwerken zonder lock geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json().invalidParams[0];",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"unlocked\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{informatieobject_url}}",
													"host": [
														"{{informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-009c) EnkelvoudigInformatieObject deels bijwerken terwijl unlocked niet toegestaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "e7d58a49-3ac9-49a2-8eec-f7ef4b3605da",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "d011b349-c63f-444c-9fc4-7192cde596e2",
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject deels bijwerken zonder lock geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json().invalidParams[0];",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"unlocked\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"auteur\": \"{{aangepaste_auteur}}\"\n}"
												},
												"url": {
													"raw": "{{informatieobject_url}}",
													"host": [
														"{{informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-009d) EnkelvoudigInformatieObject locken geeft een lockId terug",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "162df981-cf95-464d-8cc3-35e5798fe483",
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject locken geeft een lockId terug\", function() {",
															"    pm.response.to.have.status(200);",
															"    ",
															"    var lock = pm.response.json().lock;",
															"    ",
															"    // Check if returned lock is valid hexadecimal",
															"    var regex = /[0-9A-Fa-f]{6}/g;",
															"    pm.expect(regex.test(lock)).to.be.true;",
															"    pm.globals.set(\"informatieobject_lock_id\", lock);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{informatieobject_url}}/lock",
													"host": [
														"{{informatieobject_url}}"
													],
													"path": [
														"lock"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-009e) EnkelvoudigInformatieObject bijwerken is mogelijk na lock",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9c297a8c-30f1-428b-88ec-a6d6dc8800c1",
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject bijwerken met valide gegevens geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"EnkelvoudigInformatieObject bijwerken past gegevens correct aan\", function() {",
															"    pm.expect(pm.response.json().titel).to.be.equal(pm.globals.get(\"aangepaste_titel\"));",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d5457b08-8cbf-4f6b-aa5f-db290fffd7fd",
														"exec": [
															"var body = JSON.parse(pm.globals.get(\"informatieobject_body\"));",
															"pm.globals.set(\"aangepaste_titel\", \"aangepast\");",
															"body.titel = pm.globals.get(\"aangepaste_titel\");",
															"body.lock = pm.globals.get(\"informatieobject_lock_id\");",
															"",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{informatieobject_url}}",
													"host": [
														"{{informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-009f) EnkelvoudigInformatieObject deels bijwerken is mogelijk na lock",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9c297a8c-30f1-428b-88ec-a6d6dc8800c1",
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject deels bijwerken met valide gegevens geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"EnkelvoudigInformatieObject deels bijwerken past gegevens correct aan\", function() {",
															"    pm.expect(pm.response.json().auteur).to.be.equal(pm.globals.get(\"aangepaste_auteur\"));",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d5457b08-8cbf-4f6b-aa5f-db290fffd7fd",
														"exec": [
															"pm.globals.set(\"aangepaste_auteur\", \"aangepaste auteur\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"auteur\": \"{{aangepaste_auteur}}\",\n\t\"lock\": \"{{informatieobject_lock_id}}\"\n}"
												},
												"url": {
													"raw": "{{informatieobject_url}}",
													"host": [
														"{{informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-009g) EnkelvoudigInformatieObject bijwerken met verkeerd lockId niet toegestaan",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9c297a8c-30f1-428b-88ec-a6d6dc8800c1",
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject bijwerken met verkeerd lockId geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json().invalidParams[0];",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"incorrect-lock-id\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d5457b08-8cbf-4f6b-aa5f-db290fffd7fd",
														"exec": [
															"var body = JSON.parse(pm.globals.get(\"informatieobject_body\"));",
															"pm.globals.set(\"aangepaste_titel\", \"aangepast\");",
															"body.titel = pm.globals.get(\"aangepaste_titel\");",
															"body.lock = \"some_incorrect_lock_id\";",
															"",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{informatieobject_url}}",
													"host": [
														"{{informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-009h) EnkelvoudigInformatieObject deels bijwerken met verkeerd lockId niet toegestaan",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9c297a8c-30f1-428b-88ec-a6d6dc8800c1",
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject bijwerken met verkeerd lockId geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json().invalidParams[0];",
															"    pm.expect(error.name).to.be.equal(\"nonFieldErrors\");",
															"    pm.expect(error.code).to.be.equal(\"incorrect-lock-id\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d5457b08-8cbf-4f6b-aa5f-db290fffd7fd",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"auteur\": \"{{aangepaste_auteur}}\",\n\t\"lock\": \"some_incorrect_lock_id\"\n}"
												},
												"url": {
													"raw": "{{informatieobject_url}}",
													"host": [
														"{{informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-009i) EnkelvoudigInformatieObject geforceerd unlocken is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6321d127-27d9-48fd-aa51-7e0cbe69eeb2",
														"exec": [
															"pm.test(\"EnkelvoudigInformatieObject geforceerd unlocked geeft 204\", function() {",
															"    pm.response.to.have.status(204);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"lock\": \"{{informatieobject_lock_id}}\"\n}"
												},
												"url": {
													"raw": "{{informatieobject_url}}/unlock",
													"host": [
														"{{informatieobject_url}}"
													],
													"path": [
														"unlock"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "4d540057-80d7-4dc7-9f91-db3ba07e22db",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "b59fc102-70eb-4be5-9634-7abfa4eacb5e",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "tearDown",
									"item": [
										{
											"name": "Delete EnkelvoudigInformatieObject",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0d74cea4-7022-449e-9cbd-5b4f52258d7b",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{informatieobject_url}}",
													"host": [
														"{{informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Zaak",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3f9f3c1c-87c3-47b6-b0c1-ad46338d7813",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{zaak_url}}",
													"host": [
														"{{zaak_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Besluit",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f76a1690-81c3-40c4-8c7e-8b71a32a2653",
														"exec": [
															"postman.setNextRequest(\"Retrieve Informatieobjecttype and Besluittype\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{besluit_url}}",
													"host": [
														"{{besluit_url}}"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "common requests",
									"item": [
										{
											"name": "(COMMON) Create EnkelvoudigInformatieObject",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "cc5e3f0c-f781-4d20-93e5-4a742058041a",
														"exec": [
															"pm.globals.set(\"created_informatieobject_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{informatieobject_body}}"
												},
												"url": {
													"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"enkelvoudiginformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(COMMON) Create ZaakInformatieObject",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "dca5f48b-2bbb-4d3d-8fdb-d8327a8ccf3d",
														"exec": [
															"pm.globals.set(\"created_zaakinformatieobject_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"zaak\": \"{{zaak_url}}\",\n\t\"informatieobject\": \"{{created_informatieobject_url}}\"\n}"
												},
												"url": {
													"raw": "{{zrc_url}}/zaakinformatieobjecten",
													"host": [
														"{{zrc_url}}"
													],
													"path": [
														"zaakinformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(COMMON) Create Gebruiksrechten",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8921929d-74ca-4551-bd1e-2670a98deec9",
														"exec": [
															"pm.globals.set(\"created_gebruiksrechten_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"informatieobject\": \"{{created_informatieobject_url}}\",\n\t\"startdatum\": \"2019-01-01T12:00:00\",\n\t\"omschrijvingVoorwaarden\": \"test\"\n}"
												},
												"url": {
													"raw": "{{drc_url}}/gebruiksrechten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"gebruiksrechten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(COMMON) Delete EnkelvoudigInformatieObject",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "154f33db-9702-45d5-9ef6-73b7fe44fdb7",
														"exec": [
															"pm.globals.unset(\"created_informatieobject_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_informatieobject_url}}",
													"host": [
														"{{created_informatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(COMMON) Delete ObjectInformatieObject",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "499ce43f-d132-4fdd-949e-f1572c58a9bb",
														"exec": [
															"pm.globals.unset(\"created_objectinformatieobject_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_objectinformatieobject_url}}",
													"host": [
														"{{created_objectinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(COMMON) Delete ZaakInformatieObject",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "603464af-77b9-43b8-a4e2-7d4ee67f84d4",
														"exec": [
															"pm.globals.unset(\"created_zaakinformatieobject_url\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "94cb7a94-9045-47bd-bb13-6f5edde997fe",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_zaakinformatieobject_url}}",
													"host": [
														"{{created_zaakinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(COMMON) Delete BesluitInformatieObject",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0ad036b5-8626-4c1c-bfb9-9ed58f4ed59a",
														"exec": [
															"pm.globals.unset(\"created_besluitinformatieobject_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_besluitinformatieobject_url}}",
													"host": [
														"{{created_besluitinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(COMMON) Delete Gebruiksrechten",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2e91d14a-7662-43e7-b993-cb93b01508c7",
														"exec": [
															"pm.globals.unset(\"created_gebruiksrechten_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_gebruiksrechten_url}}",
													"host": [
														"{{created_gebruiksrechten_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(COMMON) Lock EnkelvoudigInformatieObject",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0bf15990-9838-4e20-a001-d2634b68f1f1",
														"exec": [
															"pm.globals.set(\"informatieobject_lock_id\", pm.response.json().lock);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{informatieobject_url}}/lock",
													"host": [
														"{{informatieobject_url}}"
													],
													"path": [
														"lock"
													]
												}
											},
											"response": []
										},
										{
											"name": "(COMMON) Unlock EnkelvoudigInformatieObject",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"lock\": \"{{informatieobject_lock_id}}\"\n}"
												},
												"url": {
													"raw": "{{informatieobject_url}}/unlock",
													"host": [
														"{{informatieobject_url}}"
													],
													"path": [
														"unlock"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "c0ec1c65-36fa-42a1-a70b-f98753ec7ccc",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "61803d59-b277-46e1-b86a-b1cb4729c834",
												"type": "text/javascript",
												"exec": [
													"var request_names = pm.globals.get(\"NEXT_REQUEST_NAMES\");",
													"if(request_names) {",
													"    postman.setNextRequest(request_names.shift());",
													"    pm.globals.set(\"NEXT_REQUEST_NAMES\", request_names);",
													"}"
												]
											}
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "11ca3bce-d57b-46b4-b881-a78b65239d63",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "e12357e8-d068-4103-9347-c4460bc16e11",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "brc",
							"item": [
								{
									"name": "setUp",
									"item": [
										{
											"name": "Retrieve Informatieobjecttype and Besluittype",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "75c656ba-6fd2-4a7a-94e3-7485eed53d6f",
														"exec": [
															"pm.globals.set(\"zaaktype_url\", pm.response.json()[0].zaaktypen[0]);",
															"pm.globals.set(\"informatieobjecttype_url\", pm.response.json()[0].informatieobjecttypen[0]);",
															"pm.globals.set(\"besluittype_url\", pm.response.json()[0].besluittypen[0]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{ztc_url}}/catalogussen",
													"host": [
														"{{ztc_url}}"
													],
													"path": [
														"catalogussen"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create EnkelvoudigInformatieObject",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9c297a8c-30f1-428b-88ec-a6d6dc8800c1",
														"exec": [
															"pm.globals.set(\"informatieobject_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d5457b08-8cbf-4f6b-aa5f-db290fffd7fd",
														"exec": [
															"pm.globals.set(\"object_inhoud\", btoa(\"string\"))"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"bronorganisatie\": \"000000000\",\n\t\"creatiedatum\": \"2019-01-01\",\n\t\"titel\": \"testobject\",\n\t\"auteur\": \"testauteur\",\n\t\"taal\": \"eng\",\n\t\"inhoud\": \"{{object_inhoud}}\",\n\t\"informatieobjecttype\": \"{{informatieobjecttype_url}}\"\n}"
												},
												"url": {
													"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"enkelvoudiginformatieobjecten"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "brc-001 (NI)",
									"item": [
										{
											"name": "(brc-001a) Besluit aanmaken is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3a883b72-bf54-4c2e-8542-812a1ae8a01e",
														"exec": [
															"pm.test(\"Zaak aanmaken met valide gegevens geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    var besluit = pm.response.json();",
															"    pm.globals.set(\"besluit_url\", besluit.url);",
															"    pm.globals.set(\"besluit_id\", besluit.identificatie);",
															"    pm.globals.set(\"besluit_verantwoordelijke_organisatie\", besluit.verantwoordelijkeOrganisatie);",
															"    pm.globals.set(\"besluit_body\", pm.request.body.raw);",
															"} else {",
															"    postman.setNextRequest(\"(brc-001d) Besluit aanmaken met ongeldige besluittype-url is onmogelijk\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"verantwoordelijkeOrganisatie\": \"000000000\",\n    \"besluittype\": \"http://localhost:8002/api/v1/catalogussen/85a3f4f6-76d4-47a9-a3af-8ffa3e44d98d/besluittypen/ce0da338-2a62-46b0-973c-c4eff8c7f500\",\n    \"datum\": \"2019-01-01\",\n    \"ingangsdatum\": \"2018-01-01\"\n}"
												},
												"url": {
													"raw": "{{brc_url}}/besluiten",
													"host": [
														"{{brc_url}}"
													],
													"path": [
														"besluiten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(brc-001b) Besluit bijwerken is mogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "839e70ed-66c2-4232-b9ce-5530eeefbf0a",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"besluit_body\"));",
															"pm.globals.set(\"toelichting\", \"aangepaste toelichting\");",
															"body.toelichting = pm.globals.get(\"toelichting\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "433d0426-73d2-46c1-bd23-2abc0c89520a",
														"exec": [
															"pm.test(\"Besluit bijwerken met valide gegevens geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Besluit bijwerken past gegevens correct aan\", function() {",
															"    pm.expect(pm.response.json().toelichting).to.be.equal(pm.globals.get(\"toelichting\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{besluit_url}}",
													"host": [
														"{{besluit_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(brc-001c) Besluit deels bijwerken is mogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "839e70ed-66c2-4232-b9ce-5530eeefbf0a",
														"exec": [
															"pm.globals.set(\"bestuursorgaan\", \"aangepast bestuursorgaan\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "433d0426-73d2-46c1-bd23-2abc0c89520a",
														"exec": [
															"pm.test(\"Besluit deels bijwerken met valide gegevens geeft 200\", function() {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Besluit deels bijwerken past gegevens correct aan\", function() {",
															"    pm.expect(pm.response.json().bestuursorgaan).to.be.equal(pm.globals.get(\"bestuursorgaan\"));",
															"});",
															"",
															"if(pm.globals.get(\"created_besluit_url\")) {",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(brc-001d) Besluit aanmaken met ongeldige besluittype url is onmogelijk\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete Besluit\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"bestuursorgaan\": \"{{bestuursorgaan}}\"\n}"
												},
												"url": {
													"raw": "{{besluit_url}}",
													"host": [
														"{{besluit_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(brc-001d) Besluit aanmaken met ongeldige besluittype url is onmogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "e0b02b48-f838-4ae2-93b7-77fe715e12b8",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"besluit_body\"));",
															"body.besluittype = pm.environment.get(\"mock_url\") + \"/404\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "7c424f91-6f67-4601-a88d-8ce8a626f111",
														"exec": [
															"pm.test(\"Besluit aanmaken met besluittype url die niet resulteert in 200 geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"besluittype\");",
															"    pm.expect(error.code).to.be.equal(\"bad-url\");",
															"});",
															"",
															"// If the test failed and the Besluit was created, delete it",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_besluit_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(brc-001e) Besluit bijwerken met ongeldige besluittype url is onmogelijk\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete Besluit\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{brc_url}}/besluiten",
													"host": [
														"{{brc_url}}"
													],
													"path": [
														"besluiten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(brc-001e) Besluit bijwerken met ongeldige besluittype url is onmogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "839e70ed-66c2-4232-b9ce-5530eeefbf0a",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"besluit_body\"));",
															"body.besluittype = pm.environment.get(\"mock_url\") + \"/404\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "433d0426-73d2-46c1-bd23-2abc0c89520a",
														"exec": [
															"pm.test(\"Besluit bijwerken met besluittype url die niet resulteert in 200 geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"besluittype\");",
															"    pm.expect(error.code).to.be.equal(\"bad-url\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{besluit_url}}",
													"host": [
														"{{besluit_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(brc-001f) Besluit deels bijwerken met ongeldige besluittype url is onmogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "839e70ed-66c2-4232-b9ce-5530eeefbf0a",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "433d0426-73d2-46c1-bd23-2abc0c89520a",
														"exec": [
															"pm.test(\"Besluit deels bijwerken met besluittype url die niet resulteert in 200 geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"besluittype\");",
															"    pm.expect(error.code).to.be.equal(\"bad-url\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"besluittype\": \"{{mock_url}}/404\"\n}"
												},
												"url": {
													"raw": "{{besluit_url}}",
													"host": [
														"{{besluit_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(brc-001g) Besluit aanmaken met besluittype url die niet wijst naar Besluittype is onmogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "e0b02b48-f838-4ae2-93b7-77fe715e12b8",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"besluit_body\"));",
															"body.besluittype = pm.environment.get(\"mock_url\") + \"/200\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "7c424f91-6f67-4601-a88d-8ce8a626f111",
														"exec": [
															"pm.test.skip(\"Besluit aanmaken met besluittype url die niet wijst naar Besluittype-resource geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"besluittype\");",
															"    pm.expect(error.code).to.be.equal(\"invalid-resource\");",
															"});",
															"",
															"// If the test failed and the Besluit was created, delete it",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_besluit_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(brc-001h) Besluit bijwerken met besluittype url die niet wijst naar Besluittype is onmogelijk\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete Besluit\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{brc_url}}/besluiten",
													"host": [
														"{{brc_url}}"
													],
													"path": [
														"besluiten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(brc-001h) Besluit bijwerken met besluittype url die niet wijst naar Besluittype is onmogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "839e70ed-66c2-4232-b9ce-5530eeefbf0a",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"besluit_body\"));",
															"body.besluittype = pm.environment.get(\"mock_url\") + \"/404\";",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "433d0426-73d2-46c1-bd23-2abc0c89520a",
														"exec": [
															"pm.test.skip(\"Besluit bijwerken met besluittype url die niet wijst naar Besluittype-resource geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"besluittype\");",
															"    pm.expect(error.code).to.be.equal(\"invalid-resource\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{besluit_url}}",
													"host": [
														"{{besluit_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(brc-001i) Besluit deels bijwerken met besluittype url die niet wijst naar Besluittype is onmogelijk",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "839e70ed-66c2-4232-b9ce-5530eeefbf0a",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "433d0426-73d2-46c1-bd23-2abc0c89520a",
														"exec": [
															"pm.test.skip(\"Besluit deels bijwerken met besluittype url die niet wijst naar Besluittype-resource geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that the 400 is returned for the correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"besluittype\");",
															"    pm.expect(error.code).to.be.equal(\"invalid-resource\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"besluittype\": \"{{mock_url}}/404\"\n}"
												},
												"url": {
													"raw": "{{besluit_url}}",
													"host": [
														"{{besluit_url}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "2e9370c5-5f49-4f5e-96c5-198978fb4bd3",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "2bf7fbbe-e6e0-4831-a61b-d4f3d7a720e2",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "brc-002",
									"item": [
										{
											"name": "(brc-002a) Uniciteit verantwoordelijke_organisatie en identificatie op de Besluit-resource (POST)",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "27106eae-1a93-4e78-82d5-5b0d4719673f",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"besluit_body\"));",
															"body.identificatie = pm.globals.get(\"besluit_id\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "b34be4ba-bf87-4ded-8794-c3a0084faa5d",
														"exec": [
															"pm.test(\"Besluit aanmaken met bestaande combinatie verantwoordelijke_organisatie en identificatie geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"identificatie\");",
															"    pm.expect(error.code).to.be.equal(\"identificatie-niet-uniek\");",
															"});",
															"",
															"// If the test failed and the Besluit was created, delete it",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_besluit_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create Besluit with unique identificatie and verantwoordelijke_organisatie\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete Besluit\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{brc_url}}/besluiten",
													"host": [
														"{{brc_url}}"
													],
													"path": [
														"besluiten"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Besluit with unique identificatie and verantwoordelijke_organisatie",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "01e98b0e-0bea-40a1-8485-67695fb020b3",
														"exec": [
															"pm.globals.set(\"created_besluit_url\", pm.response.json().url);",
															"",
															"if(pm.response.code != 201) {",
															"    postman.setNextRequest(\"Retrieve Besluiten for verantwoordelijke_organisatie\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{besluit_body}}"
												},
												"url": {
													"raw": "{{brc_url}}/besluiten",
													"host": [
														"{{brc_url}}"
													],
													"path": [
														"besluiten"
													]
												},
												"description": "Maakt een Zaak aan die gebruikt zal worden in de tests, deze zaak wordt na de tests weer verwijderd.\n\nDe body van deze Zaak zal ook als variabele opgeslagen worden en gebruikt worden (met kleine aanpassingen iedere keer) in de requests voor de validatie tests, om te voorkomen dat telkens hetzelfde body gekopieerd moet worden."
											},
											"response": []
										},
										{
											"name": "(brc-002b) Besluit bijwerken identificatie aanpassen niet toegestaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "27106eae-1a93-4e78-82d5-5b0d4719673f",
														"exec": [
															"// Retrieve the Zaak body template and modify as needed",
															"var body = JSON.parse(pm.globals.get(\"besluit_body\"));",
															"body.identificatie = pm.globals.get(\"besluit_id\");",
															"",
															"// Store the modified Zaak body, allowing it to be used in the main request",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "b34be4ba-bf87-4ded-8794-c3a0084faa5d",
														"exec": [
															"pm.test(\"Besluit bijwerken met bestaande combinatie verantwoordelijke_organisatie en identificatie geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"identificatie\");",
															"    pm.expect(error.code).to.be.equal(\"wijzigen-niet-toegelaten\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_besluit_url}}",
													"host": [
														"{{created_besluit_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(brc-002c) Besluit deels bijwerken identificatie aanpassen niet toegestaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "27106eae-1a93-4e78-82d5-5b0d4719673f",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "b34be4ba-bf87-4ded-8794-c3a0084faa5d",
														"exec": [
															"pm.test(\"Besluit deels bijwerken met bestaande combinatie verantwoordelijke_organisatie en identificatie geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"identificatie\");",
															"    pm.expect(error.code).to.be.equal(\"wijzigen-niet-toegelaten\");",
															"});",
															"",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Retrieve Besluiten for verantwoordelijke_organisatie\"]);",
															"postman.setNextRequest(\"(COMMON) Delete Besluit\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"identificatie\": \"{{besluit_id}}\"\n}"
												},
												"url": {
													"raw": "{{created_besluit_url}}",
													"host": [
														"{{created_besluit_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Retrieve Besluiten for verantwoordelijke_organisatie",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "13b55b82-8f68-47fc-82bd-3fdd1d7c0d82",
														"exec": [
															"pm.globals.set(\"besluiten_for_verantwoordelijke_organisatie\", pm.response.json());"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Crs",
														"value": "EPSG:4326",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{brc_url}}/besluiten?verantwoordelijke_organisatie={{besluit_verantwoordelijke_organisatie}}",
													"host": [
														"{{brc_url}}"
													],
													"path": [
														"besluiten"
													],
													"query": [
														{
															"key": "verantwoordelijke_organisatie",
															"value": "{{besluit_verantwoordelijke_organisatie}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "(drc-002d) Genereer unieke identificatie voor Besluit onder verantwoordelijke_organisatie",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "41140574-2623-42f7-88be-619ceaaa946a",
														"exec": [
															"pm.test(\"Besluit aanmaken zonder identificatie genereert unieke identificatie onder bronorganisatie\", function() {",
															"    var created_besluit_id = pm.response.json().identificatie",
															"    ",
															"    pm.globals.set(\"created_besluit_url\", pm.response.json().url);",
															"    ",
															"    pm.response.to.have.status(201);",
															"    ",
															"    // Compare the identificatie of the created Besluit with all the identificaties of other Besluiten",
															"    // with the same verantwoordelijke_organisatie",
															"    var besluiten_with_same_id = pm.globals.get(\"besluiten_for_verantwoordelijke_organisatie\").filter(besluit => besluit.identificatie === created_besluit_id);",
															"    ",
															"    // Verify that the identificatie for the created Besluit isn't the same as any other",
															"    pm.expect(besluiten_with_same_id.length).to.be.equal(0);",
															"});",
															"",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(brc-003a) BesluitInformatieObject aanmaken is mogelijk\"]);",
															"postman.setNextRequest(\"(COMMON) Delete Besluit\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "a34e2e85-35bc-4ff1-9e4c-00b9a8f1908f",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept-Crs",
														"type": "text",
														"value": "EPSG:4326"
													},
													{
														"key": "Content-Crs",
														"type": "text",
														"value": "EPSG:4326"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{besluit_body}}"
												},
												"url": {
													"raw": "{{brc_url}}/besluiten",
													"host": [
														"{{brc_url}}"
													],
													"path": [
														"besluiten"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "328e8128-a7f5-49e8-be9d-251ed651e99b",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "537301c3-1986-4887-882e-8a4c25fbc056",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "brc-003",
									"item": [
										{
											"name": "(brc-003a) BesluitInformatieObject aanmaken is mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fd3123b7-f570-4324-bba1-1314a7ab10a8",
														"exec": [
															"pm.test(\"BesluitInformatieObject aanmaken met valide gegevens geeft 201\", function() {",
															"    pm.response.to.have.status(201);",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_besluitinformatieobject_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(brc-003b) BesluitInformatieObject aanmaken met ongeldige informatieobject url is niet toegestaan\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete BesluitInformatieObject\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"besluit\": \"{{besluit_url}}\",\n    \"informatieobject\": \"{{informatieobject_url}}\"\n}"
												},
												"url": {
													"raw": "{{brc_url}}/besluitinformatieobjecten",
													"host": [
														"{{brc_url}}"
													],
													"path": [
														"besluitinformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(brc-003b) BesluitInformatieObject aanmaken met ongeldige informatieobject url is niet toegestaan",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "cdc41a58-61a8-4faa-89d0-721351f3942c",
														"exec": [
															"pm.test(\"BesluitInformatieObject aanmaken met informatieobject url die niet resulteert in 200 geeft 404\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    // Verify that error was thrown for correct reason",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"informatieobject\");",
															"    pm.expect(error.code).to.be.equal(\"bad-url\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_besluitinformatieobject_url\", pm.response.json().url);",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(brc-004a) BesluitInformatieObject aanmaken zet aard_relatie op legt_vast\"]);",
															"    postman.setNextRequest(\"(COMMON) Delete BesluitInformatieObject\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"besluit\": \"{{besluit_url}}\",\n    \"informatieobject\": \"{{mock_url}}/404\"\n}"
												},
												"url": {
													"raw": "{{brc_url}}/besluitinformatieobjecten",
													"host": [
														"{{brc_url}}"
													],
													"path": [
														"besluitinformatieobjecten"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "brc-004",
									"item": [
										{
											"name": "(brc-004a) BesluitInformatieObject aanmaken zet aard_relatie op legt_vast",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1cc9ef47-2191-4b69-9b2c-34c7517b8b3e",
														"exec": [
															"pm.test(\"BesluitInformatieObject aanmaken zet aardRelatie op legt_vast\", function() {",
															"    pm.expect(pm.response.json().aardRelatieWeergave).to.include(\"Legt vast\");",
															"});",
															"",
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_besluitinformatieobject_url\", pm.response.json().url);",
															"    pm.globals.set(\"besluitinformatieobject_body\", pm.request.body.raw)",
															"} else {",
															"    postman.setNextRequest(\"Create BesluitInformatieObject\");",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"informatieobject\": \"{{informatieobject_url}}\",\n\t\"besluit\": \"{{besluit_url}}\"\n}"
												},
												"url": {
													"raw": "{{brc_url}}/besluitinformatieobjecten",
													"host": [
														"{{brc_url}}"
													],
													"path": [
														"besluitinformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(brc-004b) BesluitInformatieObject bijwerken relatie aanpassen is niet mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "242cf78b-35ac-4bec-83f8-cf47d03e461e",
														"exec": [
															"pm.test(\"BesluitInformatieObject bijwerken relatie aanpassen is niet mogelijk\", function() {",
															"    pm.expect(pm.response.json().aardRelatieWeergave).to.include(\"Legt vast\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "c8ca8ad9-e1d5-4a70-ad7f-3d30d5d067a2",
														"exec": [
															"var body = JSON.parse(pm.globals.get(\"besluitinformatieobject_body\"));",
															"body.aardRelatieWeergave = \"aangepast\";",
															"",
															"pm.globals.set(\"request_body\", JSON.stringify(body));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{created_besluitinformatieobject_url}}",
													"host": [
														"{{created_besluitinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(brc-004c) BesluitInformatieObject deels bijwerken relatie aanpassen is niet mogelijk",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "242cf78b-35ac-4bec-83f8-cf47d03e461e",
														"exec": [
															"pm.test(\"BesluitInformatieObject deels bijwerken relatie is niet mogelijk\", function() {",
															"    pm.expect(pm.response.json().aardRelatieWeergave).to.include(\"Legt vast\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "c8ca8ad9-e1d5-4a70-ad7f-3d30d5d067a2",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"aardRelatieWeergave\": \"aangepast\"\n}"
												},
												"url": {
													"raw": "{{created_besluitinformatieobject_url}}",
													"host": [
														"{{created_besluitinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create different Besluit",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7b482bbe-ecdc-472b-878e-58bf574b94ee",
														"exec": [
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_besluit_url\", pm.response.json().url);",
															"} else {",
															"    postman.setNextRequest(\"Create BesluitInformatieObject\");",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{besluit_body}}"
												},
												"url": {
													"raw": "{{brc_url}}/besluiten",
													"host": [
														"{{brc_url}}"
													],
													"path": [
														"besluiten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(brc-004d) BesluitInformatieObject bijwerken besluit aanpassen is niet toegestaan",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "242cf78b-35ac-4bec-83f8-cf47d03e461e",
														"exec": [
															"pm.test(\"BesluitInformatieObject bijwerken besluit aanpassen geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"besluit\");",
															"    pm.expect(error.code).to.be.equal(\"wijzigen-niet-toegelaten\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "c8ca8ad9-e1d5-4a70-ad7f-3d30d5d067a2",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"besluit\": \"{{created_besluit_url}}\",\n\t\"informatieobject\": \"{{informatieobject_url}}\"\n}"
												},
												"url": {
													"raw": "{{created_besluitinformatieobject_url}}",
													"host": [
														"{{created_besluitinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(brc-004e) BesluitInformatieObject deels bijwerken besluit aanpassen is niet toegestaan",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "242cf78b-35ac-4bec-83f8-cf47d03e461e",
														"exec": [
															"pm.test(\"BesluitInformatieObject deels bijwerken besluit aanpassen geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"besluit\");",
															"    pm.expect(error.code).to.be.equal(\"wijzigen-niet-toegelaten\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "c8ca8ad9-e1d5-4a70-ad7f-3d30d5d067a2",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"besluit\": \"{{created_besluit_url}}\"\n}"
												},
												"url": {
													"raw": "{{created_besluitinformatieobject_url}}",
													"host": [
														"{{created_besluitinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(brc-004f) BesluitInformatieObject bijwerken informatieobject aanpassen is niet toegestaan",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "242cf78b-35ac-4bec-83f8-cf47d03e461e",
														"exec": [
															"pm.test(\"BesluitInformatieObject bijwerken informatieobject aanpassen geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"informatieobject\");",
															"    pm.expect(error.code).to.be.equal(\"wijzigen-niet-toegelaten\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "c8ca8ad9-e1d5-4a70-ad7f-3d30d5d067a2",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"besluit\": \"{{besluit_url}}\",\n\t\"informatieobject\": \"{{informatieobject_gebruiksrecht_null_url}}\"\n}"
												},
												"url": {
													"raw": "{{created_besluitinformatieobject_url}}",
													"host": [
														"{{created_besluitinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(brc-004g) BesluitInformatieObject deels bijwerken informatieobject aanpassen is niet toegestaan",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "242cf78b-35ac-4bec-83f8-cf47d03e461e",
														"exec": [
															"pm.test(\"BesluitInformatieObject deels bijwerken informatieobject aanpassen geeft 400\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json()[\"invalidParams\"][0];",
															"    pm.expect(error.name).to.be.equal(\"informatieobject\");",
															"    pm.expect(error.code).to.be.equal(\"wijzigen-niet-toegelaten\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "c8ca8ad9-e1d5-4a70-ad7f-3d30d5d067a2",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"informatieobject\": \"{{informatieobject_gebruiksrecht_null_url}}\"\n}"
												},
												"url": {
													"raw": "{{created_besluitinformatieobject_url}}",
													"host": [
														"{{created_besluitinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete different Besluit",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "494bb544-c634-4e6e-8b9e-726f35458b6c",
														"exec": [
															"pm.globals.unset(\"created_besluit_url\");",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Create BesluitInformatieObject\"]);",
															"postman.setNextRequest(\"(COMMON) Delete BesluitInformatieObject\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_besluit_url}}",
													"host": [
														"{{created_besluit_url}}"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "brc-005",
									"item": [
										{
											"name": "Create BesluitInformatieObject",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a16b3e9a-8a8d-4332-ae05-c4b27c1aa9a6",
														"exec": [
															"if(pm.response.code == 201) {",
															"    pm.globals.set(\"created_besluitinformatieobject_url\", pm.response.json().url);",
															"} else {",
															"    postman.setNextRequest(\"Create Besluit to be deleted\");",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"besluit\": \"{{besluit_url}}\",\n\t\"informatieobject\": \"{{informatieobject_url}}\"\n}"
												},
												"url": {
													"raw": "{{brc_url}}/besluitinformatieobjecten",
													"host": [
														"{{brc_url}}"
													],
													"path": [
														"besluitinformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(brc-005a) BesluitInformatieObject aanmaken maakt ObjectInformatieObject aan met objectType besluit",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d92d8513-c4c0-4b21-a2c3-cf028bad8261",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.test(\"BesluitInformatieObject aanmaken maakt een ObjectInformatieObject in DRC\", function() {",
															"    pm.response.to.have.status(200);",
															"    pm.expect(jsonData.length).to.be.equal(1);",
															"});",
															"",
															"pm.test(\"BesluitInformatieObject aanmaken maakt een ObjectInformatieObject met objectType besluit\", function() {",
															"    pm.expect(jsonData[0].objectType).to.be.equal(\"besluit\");",
															"});",
															"",
															"pm.test(\"BesluitInformatieObject aanmaken maakt een ObjectInformatieObject met correcte besluit en informatieobject\", function() {",
															"    pm.expect(jsonData[0].object).to.be.equal(pm.globals.get(\"besluit_url\"));",
															"    pm.expect(jsonData[0].informatieobject).to.be.equal(pm.globals.get(\"informatieobject_url\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{drc_url}}/objectinformatieobjecten?object={{besluit_url}}&informatieobject={{informatieobject_url}}",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"objectinformatieobjecten"
													],
													"query": [
														{
															"key": "object",
															"value": "{{besluit_url}}"
														},
														{
															"key": "informatieobject",
															"value": "{{informatieobject_url}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete BesluitInformatieObject",
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_besluitinformatieobject_url}}",
													"host": [
														"{{created_besluitinformatieobject_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(brc-005b) BesluitInformatieObject verwijderen verwijdert ObjectInformatieObject uit DRC",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d92d8513-c4c0-4b21-a2c3-cf028bad8261",
														"exec": [
															"pm.test(\"BesluitInformatieObject verwijderen verwijdert ObjectInformatieObject in DRC\", function() {",
															"    pm.response.to.have.status(200);",
															"    pm.expect(pm.response.json().length).to.be.equal(0);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{drc_url}}/objectinformatieobjecten?object={{besluit_url}}&informatieobject={{informatieobject_url}}",
													"host": [
														"{{drc_url}}"
													],
													"path": [
														"objectinformatieobjecten"
													],
													"query": [
														{
															"key": "object",
															"value": "{{besluit_url}}"
														},
														{
															"key": "informatieobject",
															"value": "{{informatieobject_url}}"
														}
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "brc-006",
									"item": [
										{
											"name": "Create Besluit to be deleted",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9c8ceeec-2656-47a4-9571-148599918b48",
														"exec": [
															"pm.globals.set(\"created_besluit_url\", pm.response.json().url);",
															"",
															"postman.setNextRequest(\"(COMMON) Create BesluitInformatieObject\");",
															"pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"Delete created Besluit\"]);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{besluit_body}}"
												},
												"url": {
													"raw": "{{brc_url}}/besluiten",
													"host": [
														"{{brc_url}}"
													],
													"path": [
														"besluiten"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete created Besluit",
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_besluit_url}}",
													"host": [
														"{{created_besluit_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(brc-006a) Besluit verwijderen cascade door naar gerelateerde BesluitInformatieObjecten",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "0fdb971c-a1a9-4b02-906f-5626892540c5",
														"exec": [
															"pm.variables.set(\"encoded_url\", encodeURIComponent(pm.globals.get(\"created_besluit_url\")))"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "b061f7db-dcb6-4769-baf7-97f122454b87",
														"exec": [
															"pm.test(\"Besluit verwijderen verwijdert ook alle gerelateerde BesluitInformatieObjecten uit het BRC\", function() {",
															"    pm.response.to.have.status(400);",
															"    ",
															"    var error = pm.response.json().invalidParams[0];",
															"    pm.expect(error.name).to.be.equal(\"besluit\");",
															"    pm.expect(error.code).to.be.equal(\"invalid\");",
															"});",
															"",
															"if(pm.response.code != 400) {",
															"    postman.setNextRequest(\"(COMMON) Delete BesluitInformatieObject\");",
															"    pm.globals.set(\"NEXT_REQUEST_NAMES\", [\"(brc-006b) Besluit verwijderen cascade door naar gerelateerde audit trail\"]);",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{brc_url}}/besluitinformatieobjecten?besluit={{encoded_url}}",
													"host": [
														"{{brc_url}}"
													],
													"path": [
														"besluitinformatieobjecten"
													],
													"query": [
														{
															"key": "besluit",
															"value": "{{encoded_url}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "(brc-006b) Besluit verwijderen cascade door naar gerelateerde audit trail",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c10dce8d-2f7e-451d-8eca-6bfa3117eaf9",
														"exec": [
															"pm.test(\"Besluit verwijderen verwijdert ook de gerelateerde audit trail uit het BRC\", function() {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.globals.unset(\"created_besluit_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_informatieobject_url}}/audittrail",
													"host": [
														"{{created_informatieobject_url}}"
													],
													"path": [
														"audittrail"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "tearDown",
									"item": [
										{
											"name": "Delete Besluit",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a80cc599-41c6-4c9f-9019-4429fb4f3835",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{besluit_url}}",
													"host": [
														"{{besluit_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete EnkelvoudigInformatieObject",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "24f449ba-057a-4ef0-9c6e-280869d4b38c",
														"exec": [
															"postman.setNextRequest(null);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{informatieobject_url}}",
													"host": [
														"{{informatieobject_url}}"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "common requests",
									"item": [
										{
											"name": "(COMMON) Create BesluitInformatieObject",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "91869b75-b1bc-4b1c-acbd-e6c9ccc09384",
														"exec": [
															"pm.globals.set(\"created_zaakinformatieobject_url\", pm.response.json().url);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"besluit\": \"{{besluit_url}}\",\n\t\"informatieobject\": \"{{informatieobject_url}}\"\n}"
												},
												"url": {
													"raw": "{{brc_url}}/besluitinformatieobjecten",
													"host": [
														"{{brc_url}}"
													],
													"path": [
														"besluitinformatieobjecten"
													]
												}
											},
											"response": []
										},
										{
											"name": "(COMMON) Delete Besluit",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3c3704b5-9c4e-4a05-ae37-0038780ed1f5",
														"exec": [
															"pm.globals.unset(\"created_besluit_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_besluit_url}}",
													"host": [
														"{{created_besluit_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "(COMMON) Delete BesluitInformatieObject",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0ad036b5-8626-4c1c-bfb9-9ed58f4ed59a",
														"exec": [
															"pm.globals.unset(\"created_besluitinformatieobject_url\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{created_besluitinformatieobject_url}}",
													"host": [
														"{{created_besluitinformatieobject_url}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b683f898-cce2-49ef-a5e4-a5da7b5a3e7a",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "30bea59f-cd06-4ad6-8a75-c6ca15056ec0",
												"type": "text/javascript",
												"exec": [
													"var request_names = pm.globals.get(\"NEXT_REQUEST_NAMES\");",
													"if(request_names) {",
													"    postman.setNextRequest(request_names.shift());",
													"    pm.globals.set(\"NEXT_REQUEST_NAMES\", request_names);",
													"}"
												]
											}
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "ztc",
							"item": [
								{
									"name": "setUp",
									"item": [],
									"_postman_isSubFolder": true
								},
								{
									"name": "ztc-001",
									"item": [],
									"_postman_isSubFolder": true
								},
								{
									"name": "tearDown",
									"item": [],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"description": "Deze folder bevat de Postman test suite voor de ZGW API's, elke folder bevat tests voor de business logic zoals die gespecificeerd is in https://github.com/VNG-Realisatie/gemma-zaken/blob/master/docs/_content/standaard/standaard.md.\n\nDe variabelen voor de urls naar de individuele componenten zijn standaard gezet op http://ref.tst.vng.cloud/, maar kunnen lokaal veranderd worden naar bijv. localhost voor test doeleinden.\n\nDe namen van de folders (bijv. **zrc/zrc-001**) verwijzen naar de specificaties in de link hierboven, zo zijn de tests te koppelen aan de specificaties.\n\nAlle requests met een prefix zoals **(zrc-xxx)** (of een ander ZGW api) bevatten tests, alle andere requests zijn ter ondersteuning van die requests en bevatten dus geen tests.\n\nOm te zorgen dat de tests correct werken, moeten alle tests van een specifiek component (bijv. zrc) door de Postman Collection Runner uitgevoerd worden, tests individueel uitvoeren is dus niet mogelijk.\n\nOpmerkingen:\n- (WIP) houdt in dat de test nog niet correct geimplementeerd is.\n- (NI) houdt in dat de test faalt omdat de business logic nog niet geimplementeerd is in de desbetreffende API's.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4e5907ed-d5f2-4e08-8be9-eef8649b6272",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "6e24a148-f731-4cce-886c-e0ba6df75296",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Regression tests",
					"item": [
						{
							"name": "setUp",
							"item": [
								{
									"name": "Retrieve Zaaktype",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "017d57e0-038d-4621-be41-11e103f859ac",
												"exec": [
													"pm.globals.set(\"zaaktype_url\", pm.response.json()[0].zaaktypen[0]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ztc_url}}/catalogussen",
											"host": [
												"{{ztc_url}}"
											],
											"path": [
												"catalogussen"
											]
										},
										"description": "Haalt een Zaaktype op uit het ZTC."
									},
									"response": []
								},
								{
									"name": "Retrieve EnkelvoudigInformatieObjecten",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "265f65b0-37e3-418b-bc59-d7cef6c08e1d",
												"exec": [
													"var informatieobjecten = pm.response.json();",
													"pm.globals.set(\"informatieobject_url\", informatieobjecten[0].url);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{drc_url}}/enkelvoudiginformatieobjecten",
											"host": [
												"{{drc_url}}"
											],
											"path": [
												"enkelvoudiginformatieobjecten"
											]
										},
										"description": "Haalt twee EnkelvoudigInformatieObjecten op uit het DRC."
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "f38bc0f5-411b-4380-89c7-25085499112b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "5aebf182-d7ba-4857-a85e-f0ba41513dd0",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Issue #891 & #909 (NI)",
							"item": [
								{
									"name": "Create Zaak",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e70d8568-c1e8-460b-a55e-7a8f0bfa5a91",
												"exec": [
													"pm.globals.set(\"created_zaak_url\", pm.response.json().url);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											},
											{
												"key": "Content-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bronorganisatie\": \"000000000\",\n    \"omschrijving\": \"string\",\n    \"toelichting\": \"string\",\n    \"registratiedatum\": \"2019-04-09\",\n    \"verantwoordelijkeOrganisatie\": \"000000000\",\n    \"zaaktype\": \"{{zaaktype_url}}\",\n    \"startdatum\": \"2019-04-09\",\n    \"einddatumGepland\": \"2019-04-09\",\n    \"uiterlijkeEinddatumAfdoening\": \"2019-04-09\",\n    \"publicatiedatum\": \"2019-04-09\",\n\t\"vertrouwelijkheidaanduiding\": \"openbaar\",\n\t\"betalingsindicatie\": \"geheel\",\n\t\"laatsteBetaalDatum\": \"2019-01-01\",\n\t\"zaakgeometrie\": \n\t{\n\t    \"type\": \"Point\",\n\t    \"coordinates\": [53, 5]\n\t},\n\t\"opschorting\": \n\t{\n\t    \"indicatie\": true,\n\t    \"reden\": \"string\"\n\t},\n\t\"selectielijstklasse\": \"http://example.com\",\n\t\"relevanteAndereZaken\": \n\t[\n\n    \"http://example.com\"\n\n],\n    \"archiefnominatie\": \"blijvend_bewaren\",\n    \"archiefstatus\": \"nog_te_archiveren\"\n}"
										},
										"url": {
											"raw": "{{zrc_url}}/zaken",
											"host": [
												"{{zrc_url}}"
											],
											"path": [
												"zaken"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create ObjectInformatieObject relation",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "195f10c8-826a-4979-9009-e8723e14f6ac",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "b7197941-da21-4190-98b0-90193e43325c",
												"exec": [
													"pm.test(\"ObjectInformatieObject creation results in 201\", function() {",
													"    pm.globals.set(\"objectinformatieobject_url\", pm.response.json().url);",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"informatieobject\": \"{{informatieobject_url}}\",\n    \"object\": \"{{created_zaak_url}}\",\n    \"objectType\": \"zaak\"\n}"
										},
										"url": {
											"raw": "{{drc_url}}/objectinformatieobjecten",
											"host": [
												"{{drc_url}}"
											],
											"path": [
												"objectinformatieobjecten"
											]
										}
									},
									"response": []
								},
								{
									"name": "(NI) Delete ObjectInformatieObject relation",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ee71f907-ca42-4258-ac9d-5e443246d7c3",
												"exec": [
													"pm.test(\"ObjectInformatieObject deletion results in 204\", function() {",
													"   pm.response.to.have.status(204);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{objectinformatieobject_url}}",
											"host": [
												"{{objectinformatieobject_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "(NI) Validate informatieobject deletion ZRC",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4065591b-a931-4159-8bfe-6106463c0e42",
												"exec": [
													"pm.test(\"ObjectInformatieObject verwijdering cascade door naar ZRC\", function() {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(pm.response.json().length).to.be.equal(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept-Crs",
												"type": "text",
												"value": "EPSG:4326"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{created_zaak_url}}/informatieobjecten",
											"host": [
												"{{created_zaak_url}}"
											],
											"path": [
												"informatieobjecten"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Zaak",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept-Crs",
												"value": "EPSG:4326",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{created_zaak_url}}",
											"host": [
												"{{created_zaak_url}}"
											]
										}
									},
									"response": []
								}
							],
							"description": "GitHub issues:\n- https://github.com/VNG-Realisatie/gemma-zaken/issues/891\n- https://github.com/VNG-Realisatie/gemma-zaken/issues/909",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "1bca3884-93ca-45dc-9ff9-06fcb8193ae0",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "aaaeecc7-00e1-4aa9-90e4-03454d62d80b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"description": "Deze folder bevat regression tests met referenties naar GitHub issues, om aan te tonen dat de desbetreffende issues ook daadwerkelijk verholpen zijn.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "858f09cd-dc19-44bb-9026-fc1615746586",
								"type": "text/javascript",
								"exec": [
									"pm.globals.set(\"token\", \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImNsaWVudF9pZGVudGlmaWVyIjoiZGVtbyJ9.eyJpc3MiOiJkZW1vIiwiaWF0IjoxNTUzNzcxMDI1LCJ6ZHMiOnsic2NvcGVzIjpbIm5vdGlmaWNhdGllcy5zY29wZXMuY29uc3VtZXJlbiIsIm5vdGlmaWNhdGllcy5zY29wZXMucHVibGljZXJlbiIsInNjb3Blcy5kb2N1bWVudGVuLnZlcndpamRlcmVuIiwiemRzLnNjb3Blcy5zdGF0dXNzZW4udG9ldm9lZ2VuIiwiemRzLnNjb3Blcy56YWFrdHlwZXMubGV6ZW4iLCJ6ZHMuc2NvcGVzLnpha2VuLmFhbm1ha2VuIiwiemRzLnNjb3Blcy56YWtlbi5iaWp3ZXJrZW4iLCJ6ZHMuc2NvcGVzLnpha2VuLmxlemVuIiwiemRzLnNjb3Blcy56YWtlbi52ZXJ3aWpkZXJlbiJdLCJ6YWFrdHlwZXMiOlsiKiJdfX0.C3J7svfhFjIj_vzMjEu_CF5WDJD6CD30BVhRUZTPIjE\");"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "cfe2d927-ec09-4c4b-8202-263d2ee2dbf8",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "mock requests",
			"item": [
				{
					"name": "mock 200",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{mock_url}}/200",
							"host": [
								"{{mock_url}}"
							],
							"path": [
								"200"
							]
						}
					},
					"response": []
				},
				{
					"name": "mock 404",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{mock_url}}/404",
							"host": [
								"{{mock_url}}"
							],
							"path": [
								"404"
							]
						}
					},
					"response": []
				},
				{
					"name": "mock Zaaktype",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{mock_url}}/zaaktype",
							"host": [
								"{{mock_url}}"
							],
							"path": [
								"zaaktype"
							]
						}
					},
					"response": []
				},
				{
					"name": "mock Zaak",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{mock_url}}/zaak",
							"host": [
								"{{mock_url}}"
							],
							"path": [
								"zaak"
							]
						}
					},
					"response": []
				},
				{
					"name": "mock Communicatiekanaal",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{mock_url}}/communicatiekanaal",
							"host": [
								"{{mock_url}}"
							],
							"path": [
								"communicatiekanaal"
							]
						}
					},
					"response": []
				}
			],
			"description": "Deze folder bevat mocks die het implementeren van de tests makkelijker maken.\n\nTODO: zit nu op gratis Postman, moet upgraden voor unlimited mock requests",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "740dc188-fe57-40c2-8ac4-abae222bf364",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "d4cac2a0-e237-4a6b-8964-02a244495aee",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{jwt_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "157b223d-1b88-4113-bed1-2412eef72a61",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "54e05292-2e5b-4bc5-b79f-ee708665c991",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}